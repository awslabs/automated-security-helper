{
  "$defs": {
    "AccessMode": {
      "enum": [
        "read-only",
        "read-write",
        "read-write-once",
        "write-once",
        "write-only"
      ],
      "title": "AccessMode",
      "type": "string"
    },
    "Activity": {
      "enum": [
        "design",
        "data-collection",
        "data-preparation",
        "training",
        "fine-tuning",
        "validation",
        "deployment",
        "inference",
        "other"
      ],
      "title": "Activity",
      "type": "string"
    },
    "Address": {
      "additionalProperties": false,
      "properties": {
        "absoluteAddress": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The address expressed as a byte offset from the start of the addressable region.",
          "title": "Absoluteaddress"
        },
        "fullyQualifiedName": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A human-readable fully qualified name that is associated with the address.",
          "title": "Fullyqualifiedname"
        },
        "index": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within run.addresses of the cached object for this address.",
          "title": "Index"
        },
        "kind": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An open-ended string that identifies the address kind. 'data', 'function', 'header','instruction', 'module', 'page', 'section', 'segment', 'stack', 'stackFrame', 'table' are well-known values.",
          "title": "Kind"
        },
        "length": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The number of bytes in this range of addresses.",
          "title": "Length"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A name that is associated with the address, e.g., '.text'.",
          "title": "Name"
        },
        "offsetFromParent": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The byte offset of this address from the absolute or relative address of the parent object.",
          "title": "Offsetfromparent"
        },
        "parentIndex": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within run.addresses of the parent object.",
          "title": "Parentindex"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the address."
        },
        "relativeAddress": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The address expressed as a byte offset from the absolute address of the top-most parent object.",
          "title": "Relativeaddress"
        }
      },
      "title": "Address",
      "type": "object"
    },
    "Advisory": {
      "additionalProperties": false,
      "properties": {
        "title": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional name of the advisory.",
          "title": "Title"
        },
        "url": {
          "description": "Location where the advisory can be obtained.",
          "title": "URL",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "title": "Advisory",
      "type": "object"
    },
    "Affect": {
      "additionalProperties": false,
      "properties": {
        "ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefLinkType"
            },
            {
              "$ref": "#/$defs/BomLinkElementType"
            }
          ],
          "description": "References a component or service by the objects bom-ref",
          "title": "Reference"
        },
        "versions": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Versions"
                  },
                  {
                    "$ref": "#/$defs/Versions1"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Zero or more individual versions or range of versions.",
          "title": "Versions"
        }
      },
      "required": [
        "ref"
      ],
      "title": "Affect",
      "type": "object"
    },
    "AffectedStatus": {
      "enum": [
        "affected",
        "unaffected",
        "unknown"
      ],
      "title": "AffectedStatus",
      "type": "string"
    },
    "Affirmation": {
      "additionalProperties": false,
      "properties": {
        "signatories": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Signatories"
                  },
                  {
                    "$ref": "#/$defs/Signatories1"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of signatories authorized on behalf of an organization to assert validity of this document.",
          "title": "Signatories"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        },
        "statement": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The brief statement affirmed by an individual regarding all declarations.\n*- Notes This could be an affirmation of acceptance by a third-party auditor or receiving individual of a file.",
          "examples": [
            "I certify, to the best of my knowledge, that all information is correct."
          ],
          "title": "Statement"
        }
      },
      "title": "Affirmation",
      "type": "object"
    },
    "AggregateType": {
      "enum": [
        "complete",
        "incomplete",
        "incomplete_first_party_only",
        "incomplete_first_party_proprietary_only",
        "incomplete_first_party_opensource_only",
        "incomplete_third_party_only",
        "incomplete_third_party_proprietary_only",
        "incomplete_third_party_opensource_only",
        "unknown",
        "not_specified"
      ],
      "title": "AggregateType",
      "type": "string"
    },
    "Algorithm": {
      "enum": [
        "RS256",
        "RS384",
        "RS512",
        "PS256",
        "PS384",
        "PS512",
        "ES256",
        "ES384",
        "ES512",
        "Ed25519",
        "Ed448",
        "HS256",
        "HS384",
        "HS512"
      ],
      "title": "Algorithm",
      "type": "string"
    },
    "AlgorithmProperties": {
      "additionalProperties": false,
      "properties": {
        "certificationLevel": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CertificationLevelEnum"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The certification that the implementation of the cryptographic algorithm has received, if any. Certifications include revisions and levels of FIPS 140 or Common Criteria of different Extended Assurance Levels (CC-EAL).",
          "title": "Certification Level"
        },
        "classicalSecurityLevel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The classical security level that a cryptographic algorithm provides (in bits).",
          "title": "classical security level"
        },
        "cryptoFunctions": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CryptoFunction"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The cryptographic functions implemented by the cryptographic algorithm.",
          "title": "Cryptographic functions"
        },
        "curve": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The specific underlying Elliptic Curve (EC) definition employed which is an indicator of the level of security strength, performance and complexity. Absent an authoritative source of curve names, CycloneDX recommends using curve names as defined at [https://neuromancer.sk/std/](https://neuromancer.sk/std/), the source of which can be found at [https://github.com/J08nY/std-curves](https://github.com/J08nY/std-curves).",
          "title": "Elliptic Curve"
        },
        "executionEnvironment": {
          "anyOf": [
            {
              "$ref": "#/$defs/ExecutionEnvironment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The target and execution environment in which the algorithm is implemented in.",
          "title": "Execution Environment"
        },
        "implementationPlatform": {
          "anyOf": [
            {
              "$ref": "#/$defs/ImplementationPlatform"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The target platform for which the algorithm is implemented. The implementation can be 'generic', running on any platform or for a specific platform.",
          "title": "Implementation platform"
        },
        "mode": {
          "anyOf": [
            {
              "$ref": "#/$defs/Mode1"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The mode of operation in which the cryptographic algorithm (block cipher) is used.",
          "title": "Mode"
        },
        "nistQuantumSecurityLevel": {
          "anyOf": [
            {
              "maximum": 6,
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The NIST security strength category as defined in https://csrc.nist.gov/projects/post-quantum-cryptography/post-quantum-cryptography-standardization/evaluation-criteria/security-(evaluation-criteria). A value of 0 indicates that none of the categories are met.",
          "title": "NIST security strength category"
        },
        "padding": {
          "anyOf": [
            {
              "$ref": "#/$defs/Padding"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The padding scheme that is used for the cryptographic algorithm.",
          "title": "Padding"
        },
        "parameterSetIdentifier": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An identifier for the parameter set of the cryptographic algorithm. Examples: in AES128, '128' identifies the key length in bits, in SHA256, '256' identifies the digest length, '128' in SHAKE128 identifies its maximum security level in bits, and 'SHA2-128s' identifies a parameter set used in SLH-DSA (FIPS205).",
          "title": "Parameter Set Identifier"
        },
        "primitive": {
          "anyOf": [
            {
              "$ref": "#/$defs/Primitive"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Cryptographic building blocks used in higher-level cryptographic systems and protocols. Primitives represent different cryptographic routines: deterministic random bit generators (drbg, e.g. CTR_DRBG from NIST SP800-90A-r1), message authentication codes (mac, e.g. HMAC-SHA-256), blockciphers (e.g. AES), streamciphers (e.g. Salsa20), signatures (e.g. ECDSA), hash functions (e.g. SHA-256), public-key encryption schemes (pke, e.g. RSA), extended output functions (xof, e.g. SHAKE256), key derivation functions (e.g. pbkdf2), key agreement algorithms (e.g. ECDH), key encapsulation mechanisms (e.g. ML-KEM), authenticated encryption (ae, e.g. AES-GCM) and the combination of multiple algorithms (combiner, e.g. SP800-56Cr2).",
          "title": "primitive"
        }
      },
      "title": "AlgorithmProperties",
      "type": "object"
    },
    "Analysis": {
      "additionalProperties": false,
      "properties": {
        "detail": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Detailed description of the impact including methods used during assessment. If a vulnerability is not exploitable, this field should include specific details on why the component or service is not impacted by this vulnerability.",
          "title": "Detail"
        },
        "firstIssued": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the analysis was first issued.",
          "title": "First Issued"
        },
        "justification": {
          "anyOf": [
            {
              "$ref": "#/$defs/ImpactAnalysisJustification"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "lastUpdated": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the analysis was last updated.",
          "title": "Last Updated"
        },
        "response": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ResponseEnum"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A response to the vulnerability by the manufacturer, supplier, or project responsible for the affected component or service. More than one response is allowed. Responses are strongly encouraged for vulnerabilities where the analysis state is exploitable.",
          "title": "Response"
        },
        "state": {
          "anyOf": [
            {
              "$ref": "#/$defs/ImpactAnalysisState"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "Analysis",
      "type": "object"
    },
    "Annotations": {
      "additionalProperties": false,
      "properties": {
        "annotator": {
          "anyOf": [
            {
              "$ref": "#/$defs/Annotator"
            },
            {
              "$ref": "#/$defs/Annotator1"
            },
            {
              "$ref": "#/$defs/Annotator2"
            },
            {
              "$ref": "#/$defs/Annotator3"
            }
          ],
          "description": "The organization, person, component, or service which created the textual content of the annotation.",
          "title": "Annotator"
        },
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the annotation elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        },
        "subjects": {
          "description": "The object in the BOM identified by its bom-ref. This is often a component or service, but may be any object type supporting bom-refs.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/RefLinkType"
              },
              {
                "$ref": "#/$defs/BomLinkElementType"
              }
            ]
          },
          "title": "Subjects",
          "type": "array"
        },
        "text": {
          "description": "The textual content of the annotation.",
          "title": "Text",
          "type": "string"
        },
        "timestamp": {
          "description": "The date and time (timestamp) when the annotation was created.",
          "format": "date-time",
          "title": "Timestamp",
          "type": "string"
        }
      },
      "required": [
        "subjects",
        "annotator",
        "timestamp",
        "text"
      ],
      "title": "Annotations",
      "type": "object"
    },
    "Annotator": {
      "additionalProperties": false,
      "properties": {
        "component": {
          "anyOf": [
            {
              "$ref": "#/$defs/Component"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The tool or component that created the annotation"
        },
        "individual": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalContact"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The person that created the annotation"
        },
        "organization": {
          "$ref": "#/$defs/OrganizationalEntity",
          "description": "The organization that created the annotation"
        },
        "service": {
          "anyOf": [
            {
              "$ref": "#/$defs/Service"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The service that created the annotation"
        }
      },
      "required": [
        "organization"
      ],
      "title": "Annotator",
      "type": "object"
    },
    "Annotator1": {
      "additionalProperties": false,
      "properties": {
        "component": {
          "anyOf": [
            {
              "$ref": "#/$defs/Component"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The tool or component that created the annotation"
        },
        "individual": {
          "$ref": "#/$defs/OrganizationalContact",
          "description": "The person that created the annotation"
        },
        "organization": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The organization that created the annotation"
        },
        "service": {
          "anyOf": [
            {
              "$ref": "#/$defs/Service"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The service that created the annotation"
        }
      },
      "required": [
        "individual"
      ],
      "title": "Annotator1",
      "type": "object"
    },
    "Annotator2": {
      "additionalProperties": false,
      "properties": {
        "component": {
          "$ref": "#/$defs/Component",
          "description": "The tool or component that created the annotation"
        },
        "individual": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalContact"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The person that created the annotation"
        },
        "organization": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The organization that created the annotation"
        },
        "service": {
          "anyOf": [
            {
              "$ref": "#/$defs/Service"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The service that created the annotation"
        }
      },
      "required": [
        "component"
      ],
      "title": "Annotator2",
      "type": "object"
    },
    "Annotator3": {
      "additionalProperties": false,
      "properties": {
        "component": {
          "anyOf": [
            {
              "$ref": "#/$defs/Component"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The tool or component that created the annotation"
        },
        "individual": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalContact"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The person that created the annotation"
        },
        "organization": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The organization that created the annotation"
        },
        "service": {
          "$ref": "#/$defs/Service",
          "description": "The service that created the annotation"
        }
      },
      "required": [
        "service"
      ],
      "title": "Annotator3",
      "type": "object"
    },
    "Approach": {
      "additionalProperties": false,
      "properties": {
        "type": {
          "anyOf": [
            {
              "$ref": "#/$defs/Type4"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Learning types describing the learning problem or hybrid learning problem.",
          "title": "Learning Type"
        }
      },
      "title": "Approach",
      "type": "object"
    },
    "ArchiveConverterConfig": {
      "additionalProperties": true,
      "description": "Archive (ZIP/TAR/GZIP/etc) converter configuration.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "archive",
          "default": "archive",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/ArchiveConverterConfigOptions",
          "default": {},
          "description": "Configure Archive converter"
        }
      },
      "title": "ArchiveConverterConfig",
      "type": "object"
    },
    "ArchiveConverterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "ArchiveConverterConfigOptions",
      "type": "object"
    },
    "Artifact": {
      "additionalProperties": false,
      "properties": {
        "contents": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactContent"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The contents of the artifact."
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A short description of the artifact."
        },
        "encoding": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the encoding for an artifact object that refers to a text file.",
          "title": "Encoding"
        },
        "hashes": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A dictionary, each of whose keys is the name of a hash function and each of whose values is the hashed value of the artifact produced by the specified hash function.",
          "title": "Hashes"
        },
        "lastModifiedTimeUtc": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Coordinated Universal Time (UTC) date and time at which the artifact was most recently modified. See \"Date/time properties\" in the SARIF spec for the required format.",
          "title": "Lastmodifiedtimeutc"
        },
        "length": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The length of the artifact in bytes.",
          "title": "Length"
        },
        "location": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The location of the artifact."
        },
        "mimeType": {
          "anyOf": [
            {
              "pattern": "[^/]+/.+",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The MIME type (RFC 2045) of the artifact.",
          "title": "Mimetype"
        },
        "offset": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The offset in bytes of the artifact within its containing artifact.",
          "title": "Offset"
        },
        "parentIndex": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "Identifies the index of the immediate parent of the artifact, if this artifact is nested.",
          "title": "Parentindex"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the artifact."
        },
        "roles": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Role"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "The role or roles played by the artifact in the analysis.",
          "title": "Roles"
        },
        "sourceLanguage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the source language for any artifact object that refers to a text file that contains source code.",
          "title": "Sourcelanguage"
        }
      },
      "title": "Artifact",
      "type": "object"
    },
    "ArtifactChange": {
      "additionalProperties": false,
      "properties": {
        "artifactLocation": {
          "$ref": "#/$defs/ArtifactLocation",
          "description": "The location of the artifact to change."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the change."
        },
        "replacements": {
          "description": "An array of replacement objects, each of which represents the replacement of a single region in a single artifact specified by 'artifactLocation'.",
          "items": {
            "$ref": "#/$defs/Replacement"
          },
          "minItems": 1,
          "title": "Replacements",
          "type": "array"
        }
      },
      "required": [
        "artifactLocation",
        "replacements"
      ],
      "title": "ArtifactChange",
      "type": "object"
    },
    "ArtifactContent": {
      "additionalProperties": false,
      "properties": {
        "binary": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "MIME Base64-encoded content from a binary artifact, or from a text artifact in its original encoding.",
          "title": "Binary"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the artifact content."
        },
        "rendered": {
          "anyOf": [
            {
              "$ref": "#/$defs/MultiformatMessageString"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An alternate rendered representation of the artifact (e.g., a decompiled representation of a binary region)."
        },
        "text": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "UTF-8-encoded content from a text artifact.",
          "title": "Text"
        }
      },
      "title": "ArtifactContent",
      "type": "object"
    },
    "ArtifactLocation": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A short description of the artifact location."
        },
        "index": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within the run artifacts array of the artifact object associated with the artifact location.",
          "title": "Index"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the artifact location."
        },
        "uri": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A string containing a valid relative or absolute URI.",
          "title": "Uri"
        },
        "uriBaseId": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A string which indirectly specifies the absolute URI with respect to which a relative URI in the \"uri\" property is interpreted.",
          "title": "Uribaseid"
        }
      },
      "title": "ArtifactLocation",
      "type": "object"
    },
    "AshConfig": {
      "description": "Main configuration model for Automated Security Helper.",
      "properties": {
        "ash_plugin_modules": {
          "default": [],
          "description": "List of Python modules to import containing ASH plugins and/or event subscribers. These are loaded in addition to the default modules.",
          "items": {
            "type": "string"
          },
          "title": "Ash Plugin Modules",
          "type": "array"
        },
        "build": {
          "anyOf": [
            {
              "$ref": "#/$defs/BuildConfig"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Build-time configuration settings"
        },
        "converters": {
          "$ref": "#/$defs/ConverterConfigSegment",
          "default": {
            "archive": {
              "enabled": true,
              "name": "archive",
              "options": {}
            },
            "jupyter": {
              "enabled": true,
              "name": "jupyter",
              "options": {}
            }
          },
          "description": "Converter configurations by name."
        },
        "external_reports_to_include": {
          "default": [],
          "description": "List of external reports to include in the final report. These can be paths to SARIF or CycloneDX reports produced by other tools.",
          "items": {
            "type": "string"
          },
          "title": "External Reports To Include",
          "type": "array"
        },
        "fail_on_findings": {
          "default": true,
          "description": "Whether to exit with non-zero code if findings are detected",
          "title": "Fail On Findings",
          "type": "boolean"
        },
        "global_settings": {
          "$ref": "#/$defs/AshConfigGlobalSettingsSection",
          "default": {
            "ignore_paths": [],
            "severity_threshold": "MEDIUM",
            "suppressions": []
          },
          "description": "Global default settings for ASH shared across scanners. If the same setting exists at the scanner level and is set in both places, the scanner level settings take precedence."
        },
        "project_name": {
          "default": "ash-scan",
          "description": "Name of the project being scanned",
          "title": "Project Name",
          "type": "string"
        },
        "reporters": {
          "$ref": "#/$defs/ReporterConfigSegment",
          "default": {
            "csv": {
              "enabled": true,
              "extension": "csv",
              "name": "csv",
              "options": {}
            },
            "cyclonedx": {
              "enabled": true,
              "extension": "cdx.json",
              "name": "cyclonedx",
              "options": {}
            },
            "flat-json": {
              "enabled": true,
              "extension": "flat.json",
              "name": "flat-json",
              "options": {}
            },
            "gitlab-sast": {
              "enabled": true,
              "extension": "gl-sast-report.json",
              "name": "gitlab-sast",
              "options": {}
            },
            "html": {
              "enabled": true,
              "extension": "html",
              "name": "html",
              "options": {}
            },
            "junitxml": {
              "enabled": true,
              "extension": "junit.xml",
              "name": "junitxml",
              "options": {}
            },
            "markdown": {
              "enabled": true,
              "extension": "summary.md",
              "name": "markdown",
              "options": {
                "include_detailed_findings": true,
                "include_findings_table": false,
                "include_summary": true,
                "max_detailed_findings": 20,
                "top_hotspots_limit": 10,
                "use_collapsible_details": true
              }
            },
            "ocsf": {
              "enabled": true,
              "extension": "ocsf.json",
              "name": "ocsf",
              "options": {}
            },
            "sarif": {
              "enabled": true,
              "extension": "sarif",
              "name": "sarif",
              "options": {}
            },
            "spdx": {
              "enabled": false,
              "extension": "spdx.json",
              "name": "spdx",
              "options": {}
            },
            "text": {
              "enabled": true,
              "extension": "summary.txt",
              "name": "text",
              "options": {
                "include_detailed_findings": false,
                "include_findings_table": false,
                "include_summary": true,
                "max_detailed_findings": 20,
                "top_hotspots_limit": 20
              }
            },
            "yaml": {
              "enabled": false,
              "extension": "yaml",
              "name": "yaml",
              "options": {}
            }
          },
          "description": "Reporter configurations by name."
        },
        "scanners": {
          "$ref": "#/$defs/ScannerConfigSegment",
          "default": {
            "bandit": {
              "enabled": true,
              "name": "bandit",
              "options": {
                "additional_formats": [],
                "confidence_level": "all",
                "config_file": null,
                "excluded_paths": [],
                "ignore_nosec": false,
                "severity_threshold": null
              }
            },
            "cdk-nag": {
              "enabled": true,
              "name": "cdk-nag",
              "options": {
                "nag_packs": {
                  "AwsSolutionsChecks": true,
                  "HIPAASecurityChecks": false,
                  "NIST80053R4Checks": false,
                  "NIST80053R5Checks": false,
                  "PCIDSS321Checks": false
                },
                "severity_threshold": null
              }
            },
            "cfn-nag": {
              "enabled": true,
              "name": "cfn-nag",
              "options": {
                "severity_threshold": null
              }
            },
            "checkov": {
              "enabled": true,
              "name": "checkov",
              "options": {
                "additional_formats": [
                  "cyclonedx_json"
                ],
                "config_file": null,
                "frameworks": [
                  "all"
                ],
                "offline": false,
                "severity_threshold": null,
                "skip_frameworks": [],
                "skip_path": []
              }
            },
            "detect-secrets": {
              "enabled": true,
              "name": "detect-secrets",
              "options": {
                "baseline_file": null,
                "scan_settings": {
                  "filters_used": [],
                  "generated_at": null,
                  "plugins_used": [],
                  "results": {},
                  "version": null
                },
                "severity_threshold": null
              }
            },
            "grype": {
              "enabled": true,
              "name": "grype",
              "options": {
                "config_file": null,
                "offline": false,
                "severity_threshold": null
              }
            },
            "npm-audit": {
              "enabled": true,
              "name": "npm-audit",
              "options": {
                "offline": false,
                "severity_threshold": null
              }
            },
            "opengrep": {
              "enabled": false,
              "name": "opengrep",
              "options": {
                "config": "auto",
                "exclude": [
                  "*-converted.py",
                  "*_report_result.txt"
                ],
                "exclude_rule": [],
                "metrics": "auto",
                "offline": false,
                "patterns": [],
                "severity": [],
                "severity_threshold": null,
                "version": "v1.1.5"
              }
            },
            "semgrep": {
              "enabled": true,
              "name": "semgrep",
              "options": {
                "config": "auto",
                "exclude": [
                  "*-converted.py",
                  "*_report_result.txt"
                ],
                "exclude_rule": [],
                "metrics": "auto",
                "offline": false,
                "severity": [],
                "severity_threshold": null
              }
            },
            "syft": {
              "enabled": true,
              "name": "syft",
              "options": {
                "additional_outputs": [
                  "syft-table"
                ],
                "config_file": null,
                "exclude": [],
                "severity_threshold": null
              }
            }
          },
          "description": "Scanner configurations by name."
        }
      },
      "title": "AshConfig",
      "type": "object"
    },
    "AshConfigGlobalSettingsSection": {
      "additionalProperties": false,
      "properties": {
        "ignore_paths": {
          "default": [],
          "description": "Global list of IgnorePaths. Each path requires a reason for ignoring, e.g. 'Folder contains test data only and is not committed'.",
          "items": {
            "$ref": "#/$defs/IgnorePathWithReason"
          },
          "title": "Ignore Paths",
          "type": "array"
        },
        "severity_threshold": {
          "default": "MEDIUM",
          "description": "Global minimum severity level to consider findings as failures across all scanners",
          "enum": [
            "ALL",
            "LOW",
            "MEDIUM",
            "HIGH",
            "CRITICAL"
          ],
          "title": "Severity Threshold",
          "type": "string"
        },
        "suppressions": {
          "default": [],
          "description": "Global list of suppression rules. Each rule specifies findings to suppress based on rule ID, file path, and optional line numbers.",
          "items": {
            "$ref": "#/$defs/automated_security_helper__models__core__Suppression"
          },
          "title": "Suppressions",
          "type": "array"
        }
      },
      "title": "AshConfigGlobalSettingsSection",
      "type": "object"
    },
    "Assessor": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the object elsewhere in the BOM. Every bom-ref must be unique within the BOM.",
          "title": "BOM Reference"
        },
        "organization": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The entity issuing the assessment.",
          "title": "Organization"
        },
        "thirdParty": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The boolean indicating if the assessor is outside the organization generating claims. A value of false indicates a self assessor.",
          "title": "Third Party"
        }
      },
      "title": "Assessor",
      "type": "object"
    },
    "AssetType": {
      "enum": [
        "algorithm",
        "certificate",
        "protocol",
        "related-crypto-material"
      ],
      "title": "AssetType",
      "type": "string"
    },
    "Attestation": {
      "additionalProperties": false,
      "properties": {
        "assessor": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefLinkType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The `bom-ref` to the assessor asserting the attestation.",
          "title": "Assessor"
        },
        "map": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/MapItem"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The grouping of requirements to claims and the attestors declared conformance and confidence thereof.",
          "title": "Map"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        },
        "summary": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The short description explaining the main points of the attestation.",
          "title": "Summary"
        }
      },
      "title": "Attestation",
      "type": "object"
    },
    "BanditScannerConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "bandit",
          "default": "bandit",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/BanditScannerConfigOptions",
          "default": {
            "additional_formats": [],
            "confidence_level": "all",
            "config_file": null,
            "excluded_paths": [],
            "ignore_nosec": false,
            "severity_threshold": null
          },
          "description": "Configure Bandit scanner"
        }
      },
      "title": "BanditScannerConfig",
      "type": "object"
    },
    "BanditScannerConfigOptions": {
      "additionalProperties": true,
      "properties": {
        "additional_formats": {
          "default": [],
          "description": "List of additional formats to output",
          "items": {
            "enum": [
              "csv",
              "custom",
              "html",
              "json",
              "sarif",
              "txt",
              "xml",
              "yaml"
            ],
            "type": "string"
          },
          "title": "Additional Formats",
          "type": "array"
        },
        "confidence_level": {
          "default": "all",
          "description": "Confidence level for Bandit findings",
          "enum": [
            "all",
            "low",
            "medium",
            "high"
          ],
          "title": "Confidence Level",
          "type": "string"
        },
        "config_file": {
          "anyOf": [
            {
              "format": "path",
              "type": "string"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Path to Bandit configuration file, relative to current source directory. Defaults to searching for `.bandit` (ini format), `bandit.yaml`, and `bandit.toml` in the root of the source directory if this is left empty.",
          "title": "Config File"
        },
        "excluded_paths": {
          "default": [],
          "description": "List of excluded paths and their corresponding reason to exclude from scanning",
          "items": {
            "$ref": "#/$defs/IgnorePathWithReason"
          },
          "title": "Excluded Paths",
          "type": "array"
        },
        "ignore_nosec": {
          "default": false,
          "description": "If True, do not skip lines with # nosec comments. Defaults to False.",
          "title": "Ignore Nosec",
          "type": "boolean"
        },
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Minimum severity level to consider findings as failures. This is a scanner-level override of the default severity-level within ASH of MEDIUM.",
          "title": "Severity Threshold"
        }
      },
      "title": "BanditScannerConfigOptions",
      "type": "object"
    },
    "BaselineState": {
      "enum": [
        "new",
        "unchanged",
        "updated",
        "absent"
      ],
      "title": "BaselineState",
      "type": "string"
    },
    "BomLink": {
      "anyOf": [
        {
          "$ref": "#/$defs/BomLinkDocumentType"
        },
        {
          "$ref": "#/$defs/BomLinkElementType"
        }
      ],
      "title": "BomLink"
    },
    "BomLinkDocumentType": {
      "description": "Descriptor for another BOM document. See https://cyclonedx.org/capabilities/bomlink/",
      "pattern": "^urn:cdx:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/[1-9][0-9]*$",
      "title": "BomLinkDocumentType",
      "type": "string"
    },
    "BomLinkElementType": {
      "description": "Descriptor for an element in a BOM document. See https://cyclonedx.org/capabilities/bomlink/",
      "pattern": "^urn:cdx:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/[1-9][0-9]*#.+$",
      "title": "BomLinkElementType",
      "type": "string"
    },
    "BuildConfig": {
      "additionalProperties": false,
      "description": "Configuration model for build-time settings.",
      "properties": {
        "build_mode": {
          "default": "ONLINE",
          "description": "Build mode for the container image build. If enabled, also enables offline mode during the scan phase without any explicit directive when scanning.",
          "enum": [
            "ONLINE",
            "OFFLINE"
          ],
          "title": "Build Mode",
          "type": "string"
        },
        "custom_scanners": {
          "default": [],
          "description": "Scanner configurations by type",
          "items": {
            "$ref": "#/$defs/ScannerPluginBase"
          },
          "title": "Custom Scanners",
          "type": "array"
        },
        "tool_install_scripts": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "default": {},
          "description": "Map of tool names to their installation scripts",
          "title": "Tool Install Scripts",
          "type": "object"
        }
      },
      "title": "BuildConfig",
      "type": "object"
    },
    "CSVReporterConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "csv",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "csv",
          "default": "csv",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/CSVReporterConfigOptions",
          "default": {}
        }
      },
      "title": "CSVReporterConfig",
      "type": "object"
    },
    "CSVReporterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "CSVReporterConfigOptions",
      "type": "object"
    },
    "Callstack": {
      "additionalProperties": false,
      "properties": {
        "frames": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Frame"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Within a call stack, a frame is a discrete unit that encapsulates an execution context, including local variables, parameters, and the return address. As function calls are made, frames are pushed onto the stack, forming an array-like structure that orchestrates the flow of program execution and manages the sequence of function invocations.",
          "title": "Frames"
        }
      },
      "title": "Callstack",
      "type": "object"
    },
    "CdkNagPacks": {
      "additionalProperties": true,
      "properties": {
        "AwsSolutionsChecks": {
          "default": true,
          "description": "Runs the AwsSolutionsChecks NagPack included with CDK Nag.",
          "title": "Awssolutionschecks",
          "type": "boolean"
        },
        "HIPAASecurityChecks": {
          "default": false,
          "description": "Runs the HIPAASecurityChecks NagPack included with CDK Nag.",
          "title": "Hipaasecuritychecks",
          "type": "boolean"
        },
        "NIST80053R4Checks": {
          "default": false,
          "description": "Runs the NIST80053R4Checks NagPack included with CDK Nag.",
          "title": "Nist80053R4Checks",
          "type": "boolean"
        },
        "NIST80053R5Checks": {
          "default": false,
          "description": "Runs the NIST80053R5Checks NagPack included with CDK Nag.",
          "title": "Nist80053R5Checks",
          "type": "boolean"
        },
        "PCIDSS321Checks": {
          "default": false,
          "description": "Runs the PCIDSS321Checks NagPack included with CDK Nag.",
          "title": "Pcidss321Checks",
          "type": "boolean"
        }
      },
      "title": "CdkNagPacks",
      "type": "object"
    },
    "CdkNagScannerConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "cdk-nag",
          "default": "cdk-nag",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/CdkNagScannerConfigOptions",
          "default": {
            "nag_packs": {
              "AwsSolutionsChecks": true,
              "HIPAASecurityChecks": false,
              "NIST80053R4Checks": false,
              "NIST80053R5Checks": false,
              "PCIDSS321Checks": false
            },
            "severity_threshold": null
          },
          "description": "Configure Bandit scanner"
        }
      },
      "title": "CdkNagScannerConfig",
      "type": "object"
    },
    "CdkNagScannerConfigOptions": {
      "additionalProperties": true,
      "description": "CDK Nag IAC SAST scanner options.",
      "properties": {
        "nag_packs": {
          "$ref": "#/$defs/CdkNagPacks",
          "default": {
            "AwsSolutionsChecks": true,
            "HIPAASecurityChecks": false,
            "NIST80053R4Checks": false,
            "NIST80053R5Checks": false,
            "PCIDSS321Checks": false
          },
          "description": "CDK Nag packs to enable"
        },
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Minimum severity level to consider findings as failures. This is a scanner-level override of the default severity-level within ASH of MEDIUM.",
          "title": "Severity Threshold"
        }
      },
      "title": "CdkNagScannerConfigOptions",
      "type": "object"
    },
    "CertificateProperties": {
      "additionalProperties": false,
      "properties": {
        "certificateExtension": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The file extension of the certificate",
          "examples": [
            "crt",
            "pem",
            "cer",
            "der",
            "p12"
          ],
          "title": "Certificate File Extension"
        },
        "certificateFormat": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The format of the certificate",
          "examples": [
            "X.509",
            "PEM",
            "DER",
            "CVC"
          ],
          "title": "Certificate Format"
        },
        "issuerName": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The issuer name for the certificate",
          "title": "Issuer Name"
        },
        "notValidAfter": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time according to ISO-8601 standard from which the certificate is not valid anymore",
          "title": "Not Valid After"
        },
        "notValidBefore": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time according to ISO-8601 standard from which the certificate is valid",
          "title": "Not Valid Before"
        },
        "signatureAlgorithmRef": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The bom-ref to signature algorithm used by the certificate",
          "title": "Algorithm Reference"
        },
        "subjectName": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The subject name for the certificate",
          "title": "Subject Name"
        },
        "subjectPublicKeyRef": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The bom-ref to the public key of the subject",
          "title": "Key reference"
        }
      },
      "title": "CertificateProperties",
      "type": "object"
    },
    "CertificationLevelEnum": {
      "enum": [
        "none",
        "fips140-1-l1",
        "fips140-1-l2",
        "fips140-1-l3",
        "fips140-1-l4",
        "fips140-2-l1",
        "fips140-2-l2",
        "fips140-2-l3",
        "fips140-2-l4",
        "fips140-3-l1",
        "fips140-3-l2",
        "fips140-3-l3",
        "fips140-3-l4",
        "cc-eal1",
        "cc-eal1+",
        "cc-eal2",
        "cc-eal2+",
        "cc-eal3",
        "cc-eal3+",
        "cc-eal4",
        "cc-eal4+",
        "cc-eal5",
        "cc-eal5+",
        "cc-eal6",
        "cc-eal6+",
        "cc-eal7",
        "cc-eal7+",
        "other",
        "unknown"
      ],
      "title": "CertificationLevelEnum",
      "type": "string"
    },
    "CfnNagScannerConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "cfn-nag",
          "default": "cfn-nag",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/CfnNagScannerConfigOptions",
          "default": {
            "severity_threshold": null
          },
          "description": "Configure CFN Nag scanner"
        }
      },
      "title": "CfnNagScannerConfig",
      "type": "object"
    },
    "CfnNagScannerConfigOptions": {
      "additionalProperties": true,
      "properties": {
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Minimum severity level to consider findings as failures. This is a scanner-level override of the default severity-level within ASH of MEDIUM.",
          "title": "Severity Threshold"
        }
      },
      "title": "CfnNagScannerConfigOptions",
      "type": "object"
    },
    "CheckovScannerConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "checkov",
          "default": "checkov",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/CheckovScannerConfigOptions",
          "default": {
            "additional_formats": [
              "cyclonedx_json"
            ],
            "config_file": null,
            "frameworks": [
              "all"
            ],
            "offline": false,
            "severity_threshold": null,
            "skip_frameworks": [],
            "skip_path": []
          },
          "description": "Configure Checkov scanner"
        }
      },
      "title": "CheckovScannerConfig",
      "type": "object"
    },
    "CheckovScannerConfigOptions": {
      "additionalProperties": true,
      "properties": {
        "additional_formats": {
          "default": [
            "cyclonedx_json"
          ],
          "description": "List of additional formats to output. Defaults to including CycloneDX JSON",
          "items": {
            "enum": [
              "cli",
              "csv",
              "cyclonedx",
              "cyclonedx_json",
              "json",
              "junitxml",
              "github_failed_only",
              "gitlab_sast",
              "sarif",
              "spdx"
            ],
            "type": "string"
          },
          "title": "Additional Formats",
          "type": "array"
        },
        "config_file": {
          "anyOf": [
            {
              "format": "path",
              "type": "string"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Path to Checkov configuration file, relative to current source directory. Defaults to searching for `.checkov.yaml` and `.checkov.yml` in the root of the source directory.",
          "title": "Config File"
        },
        "frameworks": {
          "default": [
            "all"
          ],
          "description": "Specific frameworks to include with Checkov. Defaults to `all`.",
          "items": {
            "enum": [
              "all",
              "ansible",
              "argo_workflows",
              "arm",
              "azure_pipelines",
              "bicep",
              "bitbucket_pipelines",
              "cdk",
              "circleci_pipelines",
              "cloudformation",
              "dockerfile",
              "github_configuration",
              "github_actions",
              "gitlab_configuration",
              "gitlab_ci",
              "bitbucket_configuration",
              "helm",
              "json",
              "yaml",
              "kubernetes",
              "kustomize",
              "openapi",
              "sca_package",
              "sca_image",
              "secrets",
              "serverless",
              "terraform",
              "terraform_json",
              "terraform_plan",
              "sast",
              "sast_python",
              "sast_java",
              "sast_javascript",
              "sast_typescript",
              "sast_golang",
              "3d_policy"
            ],
            "type": "string"
          },
          "title": "Frameworks",
          "type": "array"
        },
        "offline": {
          "default": false,
          "description": "Run in offline mode, disabling policy downloads",
          "title": "Offline",
          "type": "boolean"
        },
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Minimum severity level to consider findings as failures. This is a scanner-level override of the default severity-level within ASH of MEDIUM.",
          "title": "Severity Threshold"
        },
        "skip_frameworks": {
          "default": [],
          "description": "Specific frameworks to exclude with Checkov. Defaults to none.",
          "items": {
            "enum": [
              "all",
              "ansible",
              "argo_workflows",
              "arm",
              "azure_pipelines",
              "bicep",
              "bitbucket_pipelines",
              "cdk",
              "circleci_pipelines",
              "cloudformation",
              "dockerfile",
              "github_configuration",
              "github_actions",
              "gitlab_configuration",
              "gitlab_ci",
              "bitbucket_configuration",
              "helm",
              "json",
              "yaml",
              "kubernetes",
              "kustomize",
              "openapi",
              "sca_package",
              "sca_image",
              "secrets",
              "serverless",
              "terraform",
              "terraform_json",
              "terraform_plan",
              "sast",
              "sast_python",
              "sast_java",
              "sast_javascript",
              "sast_typescript",
              "sast_golang",
              "3d_policy"
            ],
            "type": "string"
          },
          "title": "Skip Frameworks",
          "type": "array"
        },
        "skip_path": {
          "default": [],
          "description": "Path (file or directory) to skip, using regular expression logic, relative to current working directory. Word boundaries are not implicit; i.e., specifying \"dir1\" will skip any directory or subdirectory named \"dir1\". Ignored with -f. Can be specified multiple times.",
          "items": {
            "$ref": "#/$defs/IgnorePathWithReason"
          },
          "title": "Skip Path",
          "type": "array"
        }
      },
      "title": "CheckovScannerConfigOptions",
      "type": "object"
    },
    "CipherSuite": {
      "additionalProperties": false,
      "properties": {
        "algorithms": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RefType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of algorithms related to the cipher suite.",
          "title": "Related Algorithms"
        },
        "identifiers": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of common identifiers for the cipher suite.",
          "title": "Cipher Suite Identifiers"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A common name for the cipher suite.",
          "examples": [
            "TLS_DHE_RSA_WITH_AES_128_CCM"
          ],
          "title": "Common Name"
        }
      },
      "title": "CipherSuite",
      "type": "object"
    },
    "Claim": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the object elsewhere in the BOM. Every bom-ref must be unique within the BOM.",
          "title": "BOM Reference"
        },
        "counterEvidence": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RefLinkType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of `bom-ref` to counterEvidence that supports this claim.",
          "title": "Counter Evidence"
        },
        "evidence": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RefLinkType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of `bom-ref` to evidence that supports this claim.",
          "title": "Evidence"
        },
        "externalReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalReference"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "External references provide a way to document systems, sites, and information that may be relevant but are not included with the BOM. They may also establish specific relationships within or external to the BOM.",
          "title": "External References"
        },
        "mitigationStrategies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RefLinkType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of  `bom-ref` to the evidence provided describing the mitigation strategies. Each mitigation strategy should include an explanation of how any weaknesses in the evidence will be mitigated.",
          "title": "Mitigation Strategies"
        },
        "predicate": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The specific statement or assertion about the target.",
          "title": "Predicate"
        },
        "reasoning": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The written explanation of why the evidence provided substantiates the claim.",
          "title": "Reasoning"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        },
        "target": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefLinkType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The `bom-ref` to a target representing a specific system, application, API, module, team, person, process, business unit, company, etc...  that this claim is being applied to.",
          "title": "Target"
        }
      },
      "title": "Claim",
      "type": "object"
    },
    "Co2Measure": {
      "additionalProperties": false,
      "properties": {
        "unit": {
          "$ref": "#/$defs/Unit1",
          "description": "Unit of carbon dioxide (CO2).",
          "title": "Unit"
        },
        "value": {
          "description": "Quantity of carbon dioxide (CO2).",
          "title": "Value",
          "type": "number"
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "title": "Co2Measure",
      "type": "object"
    },
    "CodeFlow": {
      "additionalProperties": false,
      "properties": {
        "message": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A message relevant to the code flow."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the code flow."
        },
        "threadFlows": {
          "description": "An array of one or more unique threadFlow objects, each of which describes the progress of a program through a thread of execution.",
          "items": {
            "$ref": "#/$defs/ThreadFlow"
          },
          "minItems": 1,
          "title": "Threadflows",
          "type": "array"
        }
      },
      "required": [
        "threadFlows"
      ],
      "title": "CodeFlow",
      "type": "object"
    },
    "ColumnKind": {
      "enum": [
        "utf16CodeUnits",
        "unicodeCodePoints"
      ],
      "title": "ColumnKind",
      "type": "string"
    },
    "Command": {
      "additionalProperties": false,
      "properties": {
        "executed": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A text representation of the executed command.",
          "title": "Executed"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        }
      },
      "title": "Command",
      "type": "object"
    },
    "Commit": {
      "additionalProperties": false,
      "properties": {
        "author": {
          "anyOf": [
            {
              "$ref": "#/$defs/IdentifiableAction"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The author who created the changes in the commit",
          "title": "Author"
        },
        "committer": {
          "anyOf": [
            {
              "$ref": "#/$defs/IdentifiableAction"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The person who committed or pushed the commit",
          "title": "Committer"
        },
        "message": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The text description of the contents of the commit",
          "title": "Message"
        },
        "uid": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes.",
          "title": "UID"
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URL to the commit. This URL will typically point to a commit in a version control system.",
          "title": "URL"
        }
      },
      "title": "Commit",
      "type": "object"
    },
    "Component": {
      "additionalProperties": false,
      "properties": {
        "author": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "[Deprecated] This will be removed in a future version. Use `@.authors` or `@.manufacturer` instead.\nThe person(s) or organization(s) that authored the component",
          "examples": [
            "Acme Inc"
          ],
          "title": "Component Author (legacy)"
        },
        "authors": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/OrganizationalContact"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The person(s) who created the component.\nAuthors are common in components created through manual processes. Components created through automated means may have `@.manufacturer` instead.",
          "title": "Component Authors"
        },
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "components": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Component"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of software and hardware components included in the parent component. This is not a dependency tree. It provides a way to specify a hierarchical representation of component assemblies, similar to system &#8594; subsystem &#8594; parts assembly in physical supply chains.",
          "title": "Components"
        },
        "copyright": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A copyright notice informing users of the underlying claims to copyright ownership in a published work.",
          "examples": [
            "Acme Inc"
          ],
          "title": "Component Copyright"
        },
        "cpe": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Asserts the identity of the component using CPE. The CPE must conform to the CPE 2.2 or 2.3 specification. See [https://nvd.nist.gov/products/cpe](https://nvd.nist.gov/products/cpe). Refer to `@.evidence.identity` to optionally provide evidence that substantiates the assertion of the component's identity.",
          "examples": [
            "cpe:2.3:a:acme:component_framework:-:*:*:*:*:*:*:*"
          ],
          "title": "Common Platform Enumeration (CPE)"
        },
        "cryptoProperties": {
          "anyOf": [
            {
              "$ref": "#/$defs/CryptoProperties"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Cryptographic Properties"
        },
        "data": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ComponentData"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "This object SHOULD be specified for any component of type `data` and must not be specified for other component types.",
          "title": "Data"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies a description for the component",
          "title": "Component Description"
        },
        "evidence": {
          "anyOf": [
            {
              "$ref": "#/$defs/ComponentEvidence"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document evidence collected through various forms of extraction or analysis.",
          "title": "Evidence"
        },
        "externalReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalReference"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "External references provide a way to document systems, sites, and information that may be relevant but are not included with the BOM. They may also establish specific relationships within or external to the BOM.",
          "title": "External References"
        },
        "group": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples include: apache, org.apache.commons, and apache.org.",
          "examples": [
            "com.acme"
          ],
          "title": "Component Group"
        },
        "hashes": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Hash"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The hashes of the component.",
          "title": "Component Hashes"
        },
        "licenses": {
          "anyOf": [
            {
              "$ref": "#/$defs/LicenseChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Component License(s)"
        },
        "manufacturer": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The organization that created the component.\nManufacturer is common in components created through automated processes. Components created through manual means may have `@.authors` instead.",
          "title": "Component Manufacturer"
        },
        "mime-type": {
          "anyOf": [
            {
              "pattern": "^[-+a-z0-9.]+/[-+a-z0-9.]+$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The optional mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented, such as an image, font, or executable. Some library or framework components may also have an associated mime-type.",
          "examples": [
            "image/jpeg"
          ],
          "title": "Mime-Type"
        },
        "modelCard": {
          "anyOf": [
            {
              "$ref": "#/$defs/ModelCard"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "AI/ML Model Card"
        },
        "modified": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "[Deprecated] This will be removed in a future version. Use the pedigree element instead to supply information on exactly how the component was modified. A boolean value indicating if the component has been modified from the original. A value of true indicates the component is a derivative of the original. A value of false indicates the component has not been modified from the original.",
          "title": "Component Modified From Original"
        },
        "name": {
          "description": "The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery",
          "examples": [
            "tomcat-catalina"
          ],
          "title": "Component Name",
          "type": "string"
        },
        "omniborId": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Asserts the identity of the component using the OmniBOR Artifact ID. The OmniBOR, if specified, must be valid and conform to the specification defined at: [https://www.iana.org/assignments/uri-schemes/prov/gitoid](https://www.iana.org/assignments/uri-schemes/prov/gitoid). Refer to `@.evidence.identity` to optionally provide evidence that substantiates the assertion of the component's identity.",
          "examples": [
            "gitoid:blob:sha1:a94a8fe5ccb19ba61c4c0873d391e987982fbbd3",
            "gitoid:blob:sha256:9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08"
          ],
          "title": "OmniBOR Artifact Identifier (gitoid)"
        },
        "pedigree": {
          "anyOf": [
            {
              "$ref": "#/$defs/Pedigree"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Component pedigree is a way to document complex supply chain scenarios where components are created, distributed, modified, redistributed, combined with other components, etc. Pedigree supports viewing this complex chain from the beginning, the end, or anywhere in the middle. It also provides a way to document variants where the exact relation may not be known.",
          "title": "Component Pedigree"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "publisher": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The person(s) or organization(s) that published the component",
          "examples": [
            "Acme Inc"
          ],
          "title": "Component Publisher"
        },
        "purl": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Asserts the identity of the component using package-url (purl). The purl, if specified, must be valid and conform to the specification defined at: [https://github.com/package-url/purl-spec](https://github.com/package-url/purl-spec). Refer to `@.evidence.identity` to optionally provide evidence that substantiates the assertion of the component's identity.",
          "examples": [
            "pkg:maven/com.acme/tomcat-catalina@9.0.14?packaging=jar"
          ],
          "title": "Package URL (purl)"
        },
        "releaseNotes": {
          "anyOf": [
            {
              "$ref": "#/$defs/ReleaseNotes"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies optional release notes.",
          "title": "Release notes"
        },
        "scope": {
          "anyOf": [
            {
              "$ref": "#/$defs/Scope"
            },
            {
              "type": "null"
            }
          ],
          "default": "required",
          "description": "Specifies the scope of the component. If scope is not specified, 'required' scope SHOULD be assumed by the consumer of the BOM.",
          "title": "Component Scope"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        },
        "supplier": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": " The organization that supplied the component. The supplier may often be the manufacturer, but may also be a distributor or repackager.",
          "title": "Component Supplier"
        },
        "swhid": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Asserts the identity of the component using the Software Heritage persistent identifier (SWHID). The SWHID, if specified, must be valid and conform to the specification defined at: [https://docs.softwareheritage.org/devel/swh-model/persistent-identifiers.html](https://docs.softwareheritage.org/devel/swh-model/persistent-identifiers.html). Refer to `@.evidence.identity` to optionally provide evidence that substantiates the assertion of the component's identity.",
          "examples": [
            "swh:1:cnt:94a9ed024d3859793618152ea559a168bbcbb5e2"
          ],
          "title": "Software Heritage Identifier"
        },
        "swid": {
          "anyOf": [
            {
              "$ref": "#/$defs/Swid"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Asserts the identity of the component using [ISO-IEC 19770-2 Software Identification (SWID) Tags](https://www.iso.org/standard/65666.html). Refer to `@.evidence.identity` to optionally provide evidence that substantiates the assertion of the component's identity.",
          "title": "SWID Tag"
        },
        "tags": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tags"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tags"
        },
        "type": {
          "$ref": "#/$defs/Type",
          "description": "Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component.",
          "examples": [
            "library"
          ],
          "title": "Component Type"
        },
        "version": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Version"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The component version. The version should ideally comply with semantic versioning but is not enforced.",
          "title": "Component Version"
        }
      },
      "required": [
        "type",
        "name"
      ],
      "title": "Component",
      "type": "object"
    },
    "ComponentData": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the dataset elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "classification": {
          "anyOf": [
            {
              "$ref": "#/$defs/DataClassification"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "contents": {
          "anyOf": [
            {
              "$ref": "#/$defs/Contents1"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The contents or references to the contents of the data being described.",
          "title": "Data Contents"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the dataset. Can describe size of dataset, whether it's used for source code, training, testing, or validation, etc.",
          "title": "Dataset Description"
        },
        "governance": {
          "anyOf": [
            {
              "$ref": "#/$defs/DataGovernance"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Data Governance"
        },
        "graphics": {
          "anyOf": [
            {
              "$ref": "#/$defs/GraphicsCollection"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the dataset.",
          "title": "Dataset Name"
        },
        "sensitiveData": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of any sensitive data in a dataset.",
          "title": "Sensitive Data"
        },
        "type": {
          "$ref": "#/$defs/Type5",
          "description": "The general theme or subject matter of the data being specified.",
          "title": "Type of Data"
        }
      },
      "required": [
        "type"
      ],
      "title": "ComponentData",
      "type": "object"
    },
    "ComponentEvidence": {
      "additionalProperties": false,
      "properties": {
        "callstack": {
          "anyOf": [
            {
              "$ref": "#/$defs/Callstack"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Evidence of the components use through the callstack.",
          "title": "Call Stack"
        },
        "copyright": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Copyright"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Copyright evidence captures intellectual property assertions, providing evidence of possible ownership and legal protection.",
          "title": "Copyright Evidence"
        },
        "identity": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ComponentIdentityEvidence"
              },
              "type": "array"
            },
            {
              "$ref": "#/$defs/ComponentIdentityEvidence"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Evidence that substantiates the identity of a component. The identity may be an object or an array of identity objects. Support for specifying identity as a single object was introduced in CycloneDX v1.5. Arrays were introduced in v1.6. It is recommended that all implementations use arrays, even if only one identity object is specified.",
          "title": "Identity Evidence"
        },
        "licenses": {
          "anyOf": [
            {
              "$ref": "#/$defs/LicenseChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "License Evidence"
        },
        "occurrences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Occurrence"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Evidence of individual instances of a component spread across multiple locations.",
          "title": "Occurrences"
        }
      },
      "title": "ComponentEvidence",
      "type": "object"
    },
    "ComponentIdentityEvidence": {
      "additionalProperties": false,
      "properties": {
        "concludedValue": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The value of the field (cpe, purl, etc) that has been concluded based on the aggregate of all methods (if available).",
          "title": "Concluded Value"
        },
        "confidence": {
          "anyOf": [
            {
              "maximum": 1.0,
              "minimum": 0.0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The overall confidence of the evidence from 0 - 1, where 1 is 100% confidence.",
          "title": "Confidence"
        },
        "field": {
          "$ref": "#/$defs/FieldModel",
          "description": "The identity field of the component which the evidence describes.",
          "title": "Field"
        },
        "methods": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Method"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The methods used to extract and/or analyze the evidence.",
          "title": "Methods"
        },
        "tools": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/RefLinkType"
                  },
                  {
                    "$ref": "#/$defs/BomLinkElementType"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The object in the BOM identified by its bom-ref. This is often a component or service but may be any object type supporting bom-refs. Tools used for analysis should already be defined in the BOM, either in the metadata/tools, components, or formulation.",
          "title": "BOM References"
        }
      },
      "required": [
        "field"
      ],
      "title": "ComponentIdentityEvidence",
      "type": "object"
    },
    "Compositions": {
      "additionalProperties": false,
      "properties": {
        "aggregate": {
          "$ref": "#/$defs/AggregateType",
          "description": "Specifies an aggregate type that describes how complete a relationship is.",
          "title": "Aggregate"
        },
        "assemblies": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/RefLinkType"
                  },
                  {
                    "$ref": "#/$defs/BomLinkElementType"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The bom-ref identifiers of the components or services being described. Assemblies refer to nested relationships whereby a constituent part may include other constituent parts. References do not cascade to child parts. References are explicit for the specified constituent part only.",
          "title": "BOM references"
        },
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the composition elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "dependencies": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The bom-ref identifiers of the components or services being described. Dependencies refer to a relationship whereby an independent constituent part requires another independent constituent part. References do not cascade to transitive dependencies. References are explicit for the specified dependency only.",
          "title": "BOM references"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        },
        "vulnerabilities": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The bom-ref identifiers of the vulnerabilities being described.",
          "title": "BOM references"
        }
      },
      "required": [
        "aggregate"
      ],
      "title": "Compositions",
      "type": "object"
    },
    "Condition": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes the set of conditions which cause the trigger to activate.",
          "title": "Description"
        },
        "expression": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The logical expression that was evaluated that determined the trigger should be fired.",
          "title": "Expression"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        }
      },
      "title": "Condition",
      "type": "object"
    },
    "Confidence": {
      "additionalProperties": false,
      "properties": {
        "rationale": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The rationale for the confidence score.",
          "title": "Rationale"
        },
        "score": {
          "anyOf": [
            {
              "maximum": 1.0,
              "minimum": 0.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The confidence of the claim between and inclusive of 0 and 1, where 1 is 100% confidence.",
          "title": "Score"
        }
      },
      "title": "Confidence",
      "type": "object"
    },
    "ConfidenceInterval": {
      "additionalProperties": false,
      "properties": {
        "lowerBound": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The lower bound of the confidence interval.",
          "title": "Lower Bound"
        },
        "upperBound": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The upper bound of the confidence interval.",
          "title": "Upper Bound"
        }
      },
      "title": "ConfidenceInterval",
      "type": "object"
    },
    "ConfigurationOverride": {
      "additionalProperties": false,
      "properties": {
        "configuration": {
          "$ref": "#/$defs/ReportingConfiguration",
          "description": "Specifies how the rule or notification was configured during the scan."
        },
        "descriptor": {
          "$ref": "#/$defs/ReportingDescriptorReference",
          "description": "A reference used to locate the descriptor whose configuration was overridden."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the configuration override."
        }
      },
      "required": [
        "configuration",
        "descriptor"
      ],
      "title": "ConfigurationOverride",
      "type": "object"
    },
    "Conformance": {
      "additionalProperties": false,
      "properties": {
        "mitigationStrategies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RefLinkType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of  `bom-ref` to the evidence provided describing the mitigation strategies.",
          "title": "Mitigation Strategies"
        },
        "rationale": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The rationale for the conformance score.",
          "title": "Rationale"
        },
        "score": {
          "anyOf": [
            {
              "maximum": 1.0,
              "minimum": 0.0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The conformance of the claim between and inclusive of 0 and 1, where 1 is 100% conformance.",
          "title": "Score"
        }
      },
      "title": "Conformance",
      "type": "object"
    },
    "Considerations": {
      "additionalProperties": false,
      "properties": {
        "environmentalConsiderations": {
          "anyOf": [
            {
              "$ref": "#/$defs/EnvironmentalConsiderations"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "What are the various environmental impacts the corresponding machine learning model has exhibited across its lifecycle?",
          "title": "Environmental Considerations"
        },
        "ethicalConsiderations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Risk"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "What are the ethical risks involved in the application of this model?",
          "title": "Ethical Considerations"
        },
        "fairnessAssessments": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/FairnessAssessment"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "How does the model affect groups at risk of being systematically disadvantaged? What are the harms and benefits to the various affected groups?",
          "title": "Fairness Assessments"
        },
        "performanceTradeoffs": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "What are the known tradeoffs in accuracy/performance of the model?",
          "title": "Performance Tradeoffs"
        },
        "technicalLimitations": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "What are the known technical limitations of the model? E.g. What kind(s) of data should the model be expected not to perform well on? What are the factors that might degrade model performance?",
          "title": "Technical Limitations"
        },
        "useCases": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "What are the intended use cases of the model?",
          "title": "Use Cases"
        },
        "users": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Who are the intended users of the model?",
          "title": "Users"
        }
      },
      "title": "Considerations",
      "type": "object"
    },
    "Contents": {
      "additionalProperties": false,
      "properties": {
        "attachment": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional way to include textual or encoded data.",
          "title": "Data Attachment"
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URL to where the data can be retrieved.",
          "title": "Data URL"
        }
      },
      "title": "Contents",
      "type": "object"
    },
    "Contents1": {
      "additionalProperties": false,
      "properties": {
        "attachment": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional way to include textual or encoded data.",
          "title": "Data Attachment"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document name-value parameters used for configuration.",
          "title": "Configuration Properties"
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URL to where the data can be retrieved.",
          "title": "Data URL"
        }
      },
      "title": "Contents1",
      "type": "object"
    },
    "Conversion": {
      "additionalProperties": false,
      "properties": {
        "analysisToolLogFiles": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ArtifactLocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "The locations of the analysis tool's per-run log files.",
          "title": "Analysistoollogfiles"
        },
        "invocation": {
          "anyOf": [
            {
              "$ref": "#/$defs/Invocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An invocation object that describes the invocation of the converter."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the conversion."
        },
        "tool": {
          "$ref": "#/$defs/automated_security_helper__schemas__sarif_schema_model__Tool",
          "description": "A tool object that describes the converter."
        }
      },
      "required": [
        "tool"
      ],
      "title": "Conversion",
      "type": "object"
    },
    "ConverterConfigSegment": {
      "additionalProperties": {
        "anyOf": [
          {},
          {
            "$ref": "#/$defs/ConverterPluginConfigBase"
          }
        ]
      },
      "properties": {
        "archive": {
          "$ref": "#/$defs/ArchiveConverterConfig",
          "default": {
            "enabled": true,
            "name": "archive",
            "options": {}
          },
          "description": "Configure the options for the ArchiveConverter"
        },
        "jupyter": {
          "$ref": "#/$defs/JupyterConverterConfig",
          "default": {
            "enabled": true,
            "name": "jupyter",
            "options": {}
          },
          "description": "Configure the options for the JupyterConverter"
        }
      },
      "title": "ConverterConfigSegment",
      "type": "object"
    },
    "ConverterOptionsBase": {
      "additionalProperties": true,
      "description": "Base class for converter options.",
      "properties": {},
      "title": "ConverterOptionsBase",
      "type": "object"
    },
    "ConverterPluginConfigBase": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Whether the component is enabled",
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "default": null,
          "description": "Name of the component using letters, numbers, underscores and hyphens. Must begin with a letter.",
          "minLength": 1,
          "pattern": "^[a-zA-Z][\\w-]+$",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/ConverterOptionsBase",
          "default": {},
          "description": "Converter options"
        }
      },
      "title": "ConverterPluginConfigBase",
      "type": "object"
    },
    "ConverterStatusInfo": {
      "additionalProperties": true,
      "description": "Information about converter status.",
      "properties": {
        "converted_paths": {
          "default": [],
          "items": {
            "type": "string"
          },
          "title": "Converted Paths",
          "type": "array"
        },
        "dependencies_satisfied": {
          "default": true,
          "title": "Dependencies Satisfied",
          "type": "boolean"
        },
        "excluded": {
          "default": false,
          "title": "Excluded",
          "type": "boolean"
        }
      },
      "title": "ConverterStatusInfo",
      "type": "object"
    },
    "Copyright": {
      "additionalProperties": false,
      "properties": {
        "text": {
          "description": "The textual content of the copyright.",
          "title": "Copyright Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "Copyright",
      "type": "object"
    },
    "Credits": {
      "additionalProperties": false,
      "properties": {
        "individuals": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/OrganizationalContact"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The individuals, not associated with organizations, that are credited with vulnerability discovery.",
          "title": "Individuals"
        },
        "organizations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/OrganizationalEntity"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The organizations credited with vulnerability discovery.",
          "title": "Organizations"
        }
      },
      "title": "Credits",
      "type": "object"
    },
    "CryptoFunction": {
      "enum": [
        "generate",
        "keygen",
        "encrypt",
        "decrypt",
        "digest",
        "tag",
        "keyderive",
        "sign",
        "verify",
        "encapsulate",
        "decapsulate",
        "other",
        "unknown"
      ],
      "title": "CryptoFunction",
      "type": "string"
    },
    "CryptoProperties": {
      "additionalProperties": false,
      "properties": {
        "algorithmProperties": {
          "anyOf": [
            {
              "$ref": "#/$defs/AlgorithmProperties"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Additional properties specific to a cryptographic algorithm.",
          "title": "Algorithm Properties"
        },
        "assetType": {
          "$ref": "#/$defs/AssetType",
          "description": "Cryptographic assets occur in several forms. Algorithms and protocols are most commonly implemented in specialized cryptographic libraries. They may, however, also be 'hardcoded' in software components. Certificates and related cryptographic material like keys, tokens, secrets or passwords are other cryptographic assets to be modelled.",
          "title": "Asset Type"
        },
        "certificateProperties": {
          "anyOf": [
            {
              "$ref": "#/$defs/CertificateProperties"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Properties for cryptographic assets of asset type 'certificate'",
          "title": "Certificate Properties"
        },
        "oid": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The object identifier (OID) of the cryptographic asset.",
          "title": "OID"
        },
        "protocolProperties": {
          "anyOf": [
            {
              "$ref": "#/$defs/ProtocolProperties"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Properties specific to cryptographic assets of type: `protocol`.",
          "title": "Protocol Properties"
        },
        "relatedCryptoMaterialProperties": {
          "anyOf": [
            {
              "$ref": "#/$defs/RelatedCryptoMaterialProperties"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Properties for cryptographic assets of asset type: `related-crypto-material`",
          "title": "Related Cryptographic Material Properties"
        }
      },
      "required": [
        "assetType"
      ],
      "title": "CryptoProperties",
      "type": "object"
    },
    "CryptoRefArray": {
      "items": {
        "$ref": "#/$defs/RefType"
      },
      "title": "CryptoRefArray",
      "type": "array"
    },
    "CustomCommand": {
      "properties": {
        "args": {
          "items": {
            "type": "string"
          },
          "title": "Args",
          "type": "array"
        },
        "shell": {
          "default": false,
          "title": "Shell",
          "type": "boolean"
        }
      },
      "required": [
        "args"
      ],
      "title": "CustomCommand",
      "type": "object"
    },
    "Cwe": {
      "description": "Integer representation of a Common Weaknesses Enumerations (CWE). For example 399 (of https://cwe.mitre.org/data/definitions/399.html)",
      "minimum": 1,
      "title": "Cwe",
      "type": "integer"
    },
    "CycloneDXReport": {
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "$Schema"
        },
        "annotations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Annotations"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Comments made by people, organizations, or tools about any object with a bom-ref, such as components, services, vulnerabilities, or the BOM itself. Unlike inventory information, annotations may contain opinions or commentary from various stakeholders. Annotations may be inline (with inventory) or externalized via BOM-Link and may optionally be signed.",
          "title": "Annotations"
        },
        "bomFormat": {
          "const": "CycloneDX",
          "default": "CycloneDX",
          "description": "Specifies the format of the BOM. This helps to identify the file as CycloneDX since BOMs do not have a filename convention, nor does JSON schema support namespaces. This value must be \"CycloneDX\".",
          "title": "BOM Format",
          "type": "string"
        },
        "components": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Component"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of software and hardware components.",
          "title": "Components"
        },
        "compositions": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Compositions"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Compositions describe constituent parts (including components, services, and dependency relationships) and their completeness. The completeness of vulnerabilities expressed in a BOM may also be described.",
          "title": "Compositions"
        },
        "declarations": {
          "anyOf": [
            {
              "$ref": "#/$defs/Declarations"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of declarations which describe the conformance to standards. Each declaration may include attestations, claims, and evidence.",
          "title": "Declarations"
        },
        "definitions": {
          "anyOf": [
            {
              "$ref": "#/$defs/Definitions"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A collection of reusable objects that are defined and may be used elsewhere in the BOM.",
          "title": "Definitions"
        },
        "dependencies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Dependency"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document dependency relationships including provided & implemented components.",
          "title": "Dependencies"
        },
        "externalReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalReference"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "External references provide a way to document systems, sites, and information that may be relevant but are not included with the BOM. They may also establish specific relationships within or external to the BOM.",
          "title": "External References"
        },
        "formulation": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Formula"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes how a component or service was manufactured or deployed. This is achieved through the use of formulas, workflows, tasks, and steps, which declare the precise steps to reproduce along with the observed formulas describing the steps which transpired in the manufacturing process.",
          "title": "Formulation"
        },
        "metadata": {
          "anyOf": [
            {
              "$ref": "#/$defs/Metadata"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides additional information about a BOM.",
          "title": "BOM Metadata"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "serialNumber": {
          "anyOf": [
            {
              "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Every BOM generated SHOULD have a unique serial number, even if the contents of the BOM have not changed over time. If specified, the serial number must conform to [RFC 4122](https://www.ietf.org/rfc/rfc4122.html). Use of serial numbers is recommended.",
          "examples": [
            "urn:uuid:3e671687-395b-41f5-a30f-a58921a69b79"
          ],
          "title": "BOM Serial Number"
        },
        "services": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Service"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of services. This may include microservices, function-as-a-service, and other types of network or intra-process services.",
          "title": "Services"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        },
        "specVersion": {
          "default": "1.6",
          "description": "The version of the CycloneDX specification the BOM conforms to.",
          "examples": [
            "1.6"
          ],
          "title": "CycloneDX Specification Version",
          "type": "string"
        },
        "version": {
          "anyOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 1,
          "description": "Whenever an existing BOM is modified, either manually or through automated processes, the version of the BOM SHOULD be incremented by 1. When a system is presented with multiple BOMs with identical serial numbers, the system SHOULD use the most recent version of the BOM. The default version is '1'.",
          "examples": [
            1
          ],
          "title": "BOM Version"
        },
        "vulnerabilities": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Vulnerability"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Vulnerabilities identified in components or services.",
          "title": "Vulnerabilities"
        }
      },
      "title": "CycloneDXReport",
      "type": "object"
    },
    "CycloneDXReporterConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "cdx.json",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "cyclonedx",
          "default": "cyclonedx",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/CycloneDXReporterConfigOptions",
          "default": {}
        }
      },
      "title": "CycloneDXReporterConfig",
      "type": "object"
    },
    "CycloneDXReporterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "CycloneDXReporterConfigOptions",
      "type": "object"
    },
    "DataClassification": {
      "description": "Data classification tags data according to its type, sensitivity, and value if altered, stolen, or destroyed.",
      "title": "DataClassification",
      "type": "string"
    },
    "DataFlowDirection": {
      "enum": [
        "inbound",
        "outbound",
        "bi-directional",
        "unknown"
      ],
      "title": "DataFlowDirection",
      "type": "string"
    },
    "DataGovernance": {
      "additionalProperties": false,
      "properties": {
        "custodians": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/DataGovernanceResponsibleParty"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Data custodians are responsible for the safe custody, transport, and storage of data.",
          "title": "Data Custodians"
        },
        "owners": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/DataGovernanceResponsibleParty"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Data owners are concerned with risk and appropriate access to data.",
          "title": "Data Owners"
        },
        "stewards": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/DataGovernanceResponsibleParty"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Data stewards are responsible for data content, context, and associated business rules.",
          "title": "Data Stewards"
        }
      },
      "title": "DataGovernance",
      "type": "object"
    },
    "DataGovernanceResponsibleParty": {
      "anyOf": [
        {
          "$ref": "#/$defs/DataGovernanceResponsibleParty1"
        },
        {
          "$ref": "#/$defs/DataGovernanceResponsibleParty2"
        }
      ],
      "title": "DataGovernanceResponsibleParty"
    },
    "DataGovernanceResponsibleParty1": {
      "additionalProperties": false,
      "properties": {
        "contact": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalContact"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The individual that is responsible for specific data governance role(s).",
          "title": "Individual"
        },
        "organization": {
          "$ref": "#/$defs/OrganizationalEntity",
          "description": "The organization that is responsible for specific data governance role(s).",
          "title": "Organization"
        }
      },
      "required": [
        "organization"
      ],
      "title": "DataGovernanceResponsibleParty1",
      "type": "object"
    },
    "DataGovernanceResponsibleParty2": {
      "additionalProperties": false,
      "properties": {
        "contact": {
          "$ref": "#/$defs/OrganizationalContact",
          "description": "The individual that is responsible for specific data governance role(s).",
          "title": "Individual"
        },
        "organization": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The organization that is responsible for specific data governance role(s).",
          "title": "Organization"
        }
      },
      "required": [
        "contact"
      ],
      "title": "DataGovernanceResponsibleParty2",
      "type": "object"
    },
    "Datasets": {
      "additionalProperties": false,
      "properties": {
        "ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefLinkType"
            },
            {
              "$ref": "#/$defs/BomLinkElementType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "References a data component by the components bom-ref attribute",
          "title": "Reference"
        }
      },
      "title": "Datasets",
      "type": "object"
    },
    "Datum": {
      "additionalProperties": false,
      "properties": {
        "classification": {
          "anyOf": [
            {
              "$ref": "#/$defs/DataClassification"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "contents": {
          "anyOf": [
            {
              "$ref": "#/$defs/Contents"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The contents or references to the contents of the data being described.",
          "title": "Data Contents"
        },
        "governance": {
          "anyOf": [
            {
              "$ref": "#/$defs/DataGovernance"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Data Governance"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the data.",
          "title": "Data Name"
        },
        "sensitiveData": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of any sensitive data included.",
          "title": "Sensitive Data"
        }
      },
      "title": "Datum",
      "type": "object"
    },
    "Declarations": {
      "additionalProperties": false,
      "properties": {
        "affirmation": {
          "anyOf": [
            {
              "$ref": "#/$defs/Affirmation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A concise statement affirmed by an individual regarding all declarations, often used for third-party auditor acceptance or recipient acknowledgment. It includes a list of authorized signatories who assert the validity of the document on behalf of the organization.",
          "title": "Affirmation"
        },
        "assessors": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Assessor"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of assessors evaluating claims and determining conformance to requirements and confidence in that assessment.",
          "title": "Assessors"
        },
        "attestations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Attestation"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of attestations asserted by an assessor that maps requirements to claims.",
          "title": "Attestations"
        },
        "claims": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Claim"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of claims.",
          "title": "Claims"
        },
        "evidence": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/EvidenceItem"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of evidence",
          "title": "Evidence"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        },
        "targets": {
          "anyOf": [
            {
              "$ref": "#/$defs/Targets"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of targets which claims are made against.",
          "title": "Targets"
        }
      },
      "title": "Declarations",
      "type": "object"
    },
    "Definitions": {
      "additionalProperties": false,
      "properties": {
        "standards": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Standard"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of standards which may consist of regulations, industry or organizational-specific standards, maturity models, best practices, or any other requirements which can be evaluated against or attested to.",
          "title": "Standards"
        }
      },
      "title": "Definitions",
      "type": "object"
    },
    "Dependency": {
      "additionalProperties": false,
      "properties": {
        "dependsOn": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RefLinkType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The bom-ref identifiers of the components or services that are dependencies of this dependency object.",
          "title": "Depends On"
        },
        "provides": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RefLinkType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The bom-ref identifiers of the components or services that define a given specification or standard, which are provided or implemented by this dependency object.\nFor example, a cryptographic library which implements a cryptographic algorithm. A component which implements another component does not imply that the implementation is in use.",
          "title": "Provides"
        },
        "ref": {
          "$ref": "#/$defs/RefLinkType",
          "description": "References a component or service by its bom-ref attribute",
          "title": "Reference"
        }
      },
      "required": [
        "ref"
      ],
      "title": "Dependency",
      "type": "object"
    },
    "DeprecatedGuid": {
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
      "title": "DeprecatedGuid",
      "type": "string"
    },
    "DetectSecretsScanSettings": {
      "additionalProperties": true,
      "properties": {
        "filters_used": {
          "default": [],
          "items": {
            "$ref": "#/$defs/DetectSecretsScanSettingsFiltersUsed"
          },
          "title": "Filters Used",
          "type": "array"
        },
        "generated_at": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Generated At"
        },
        "plugins_used": {
          "default": [],
          "items": {
            "$ref": "#/$defs/DetectSecretsScanSettingsPluginsUsed"
          },
          "title": "Plugins Used",
          "type": "array"
        },
        "results": {
          "$ref": "#/$defs/DetectSecretsScanSettingsResults",
          "default": {}
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Version"
        }
      },
      "title": "DetectSecretsScanSettings",
      "type": "object"
    },
    "DetectSecretsScanSettingsFiltersUsed": {
      "additionalProperties": true,
      "properties": {
        "keyword_exclude": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Keyword Exclude"
        },
        "min_level": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Min Level"
        },
        "path": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Path"
        }
      },
      "title": "DetectSecretsScanSettingsFiltersUsed",
      "type": "object"
    },
    "DetectSecretsScanSettingsPluginsUsed": {
      "additionalProperties": true,
      "properties": {
        "keyword_exclude": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Keyword Exclude"
        },
        "limit": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Limit"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Name"
        }
      },
      "title": "DetectSecretsScanSettingsPluginsUsed",
      "type": "object"
    },
    "DetectSecretsScanSettingsResults": {
      "additionalProperties": {
        "items": {},
        "type": "array"
      },
      "properties": {},
      "title": "DetectSecretsScanSettingsResults",
      "type": "object"
    },
    "DetectSecretsScannerConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "detect-secrets",
          "default": "detect-secrets",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/DetectSecretsScannerConfigOptions",
          "default": {
            "baseline_file": null,
            "scan_settings": {
              "filters_used": [],
              "generated_at": null,
              "plugins_used": [],
              "results": {},
              "version": null
            },
            "severity_threshold": null
          },
          "description": "Configure detect-secrets scanner"
        }
      },
      "title": "DetectSecretsScannerConfig",
      "type": "object"
    },
    "DetectSecretsScannerConfigOptions": {
      "additionalProperties": true,
      "properties": {
        "baseline_file": {
          "anyOf": [
            {
              "format": "path",
              "type": "string"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Path to detect-secrets baseline file, relative to current source directory. Defaults to searching for `.secrets.baseline` in the root of the source directory. The settings from the baseline will be overwritten if scan_settings is provided.",
          "title": "Baseline File"
        },
        "scan_settings": {
          "$ref": "#/$defs/DetectSecretsScanSettings",
          "default": {
            "filters_used": [],
            "generated_at": null,
            "plugins_used": [],
            "results": {},
            "version": null
          },
          "description": "Settings to use with detect-secrets. Refer to the detect-secrets documentation for formatting information. By default, all plugins will be used and no filters are configured. scan_settings takes precedence over baseline_file"
        },
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Minimum severity level to consider findings as failures. This is a scanner-level override of the default severity-level within ASH of MEDIUM.",
          "title": "Severity Threshold"
        }
      },
      "title": "DetectSecretsScannerConfigOptions",
      "type": "object"
    },
    "Diff": {
      "additionalProperties": false,
      "properties": {
        "text": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the optional text of the diff",
          "title": "Diff text"
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the URL to the diff",
          "title": "URL"
        }
      },
      "title": "Diff",
      "type": "object"
    },
    "Edge": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "A string that uniquely identifies the edge within its graph.",
          "title": "Id",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A short description of the edge."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the edge."
        },
        "sourceNodeId": {
          "description": "Identifies the source node (the node at which the edge starts).",
          "title": "Sourcenodeid",
          "type": "string"
        },
        "targetNodeId": {
          "description": "Identifies the target node (the node at which the edge ends).",
          "title": "Targetnodeid",
          "type": "string"
        }
      },
      "required": [
        "id",
        "sourceNodeId",
        "targetNodeId"
      ],
      "title": "Edge",
      "type": "object"
    },
    "EdgeTraversal": {
      "additionalProperties": false,
      "properties": {
        "edgeId": {
          "description": "Identifies the edge being traversed.",
          "title": "Edgeid",
          "type": "string"
        },
        "finalState": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/MultiformatMessageString"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The values of relevant expressions after the edge has been traversed.",
          "title": "Finalstate"
        },
        "message": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A message to display to the user as the edge is traversed."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the edge traversal."
        },
        "stepOverEdgeCount": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The number of edge traversals necessary to return from a nested graph.",
          "title": "Stepoveredgecount"
        }
      },
      "required": [
        "edgeId"
      ],
      "title": "EdgeTraversal",
      "type": "object"
    },
    "Encoding": {
      "enum": [
        "base64"
      ],
      "title": "Encoding",
      "type": "string"
    },
    "EnergyConsumption": {
      "additionalProperties": false,
      "properties": {
        "activity": {
          "$ref": "#/$defs/Activity",
          "description": "The type of activity that is part of a machine learning model development or operational lifecycle."
        },
        "activityEnergyCost": {
          "$ref": "#/$defs/EnergyMeasure",
          "description": "The total energy cost associated with the model lifecycle activity.",
          "title": "Activity Energy Cost"
        },
        "co2CostEquivalent": {
          "anyOf": [
            {
              "$ref": "#/$defs/Co2Measure"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The CO2 cost (debit) equivalent to the total energy cost.",
          "title": "CO2 Equivalent Cost"
        },
        "co2CostOffset": {
          "anyOf": [
            {
              "$ref": "#/$defs/Co2Measure"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The CO2 offset (credit) for the CO2 equivalent cost.",
          "title": "CO2 Cost Offset"
        },
        "energyProviders": {
          "description": "The provider(s) of the energy consumed by the associated model development lifecycle activity.",
          "items": {
            "$ref": "#/$defs/EnergyProvider"
          },
          "title": "Energy Providers",
          "type": "array"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        }
      },
      "required": [
        "activity",
        "energyProviders",
        "activityEnergyCost"
      ],
      "title": "EnergyConsumption",
      "type": "object"
    },
    "EnergyMeasure": {
      "additionalProperties": false,
      "properties": {
        "unit": {
          "$ref": "#/$defs/Unit",
          "description": "Unit of energy."
        },
        "value": {
          "description": "Quantity of energy.",
          "title": "Value",
          "type": "number"
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "title": "EnergyMeasure",
      "type": "object"
    },
    "EnergyProvider": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the energy provider elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the energy provider.",
          "title": "Description"
        },
        "energyProvided": {
          "$ref": "#/$defs/EnergyMeasure",
          "description": "The energy provided by the energy source for an associated activity.",
          "title": "Energy Provided"
        },
        "energySource": {
          "$ref": "#/$defs/EnergySource",
          "description": "The energy source for the energy provider.",
          "title": "Energy Source"
        },
        "externalReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalReference"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "External references provide a way to document systems, sites, and information that may be relevant but are not included with the BOM. They may also establish specific relationships within or external to the BOM.",
          "title": "External References"
        },
        "organization": {
          "$ref": "#/$defs/OrganizationalEntity",
          "description": "The organization that provides energy.",
          "title": "Organization"
        }
      },
      "required": [
        "organization",
        "energySource",
        "energyProvided"
      ],
      "title": "EnergyProvider",
      "type": "object"
    },
    "EnergySource": {
      "enum": [
        "coal",
        "oil",
        "natural-gas",
        "nuclear",
        "wind",
        "solar",
        "geothermal",
        "hydropower",
        "biofuel",
        "unknown",
        "other"
      ],
      "title": "EnergySource",
      "type": "string"
    },
    "EnvironmentalConsiderations": {
      "additionalProperties": false,
      "properties": {
        "energyConsumptions": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/EnergyConsumption"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes energy consumption information incurred for one or more component lifecycle activities.",
          "title": "Energy Consumptions"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        }
      },
      "title": "EnvironmentalConsiderations",
      "type": "object"
    },
    "Event": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Encoding of the raw event data.",
          "title": "Data"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the event.",
          "title": "Description"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "References the component or service that was the source of the event",
          "title": "Source"
        },
        "target": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "References the component or service that was the target of the event",
          "title": "Target"
        },
        "timeReceived": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the event was received.",
          "title": "Time Received"
        },
        "uid": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The unique identifier of the event.",
          "title": "Unique Identifier (UID)"
        }
      },
      "title": "Event",
      "type": "object"
    },
    "EvidenceItem": {
      "additionalProperties": false,
      "properties": {
        "author": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalContact"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The author of the evidence.",
          "title": "Author"
        },
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the object elsewhere in the BOM. Every bom-ref must be unique within the BOM.",
          "title": "BOM Reference"
        },
        "created": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the evidence was created.",
          "title": "Created"
        },
        "data": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Datum"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The output or analysis that supports claims.",
          "title": "Data"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The written description of what this evidence is and how it was created.",
          "title": "Description"
        },
        "expires": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The optional date and time (timestamp) when the evidence is no longer valid.",
          "title": "Expires"
        },
        "propertyName": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The reference to the property name as defined in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy/).",
          "title": "Property Name"
        },
        "reviewer": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalContact"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The reviewer of the evidence.",
          "title": "Reviewer"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        }
      },
      "title": "EvidenceItem",
      "type": "object"
    },
    "Exception": {
      "additionalProperties": false,
      "properties": {
        "innerExceptions": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Exception"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of exception objects each of which is considered a cause of this exception.",
          "title": "Innerexceptions"
        },
        "kind": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A string that identifies the kind of exception, for example, the fully qualified type name of an object that was thrown, or the symbolic name of a signal.",
          "title": "Kind"
        },
        "message": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A message that describes the exception.",
          "title": "Message"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the exception."
        },
        "stack": {
          "anyOf": [
            {
              "$ref": "#/$defs/Stack"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The sequence of function calls leading to the exception."
        }
      },
      "title": "Exception",
      "type": "object"
    },
    "ExecutionEnvironment": {
      "enum": [
        "software-plain-ram",
        "software-encrypted-ram",
        "software-tee",
        "hardware",
        "other",
        "unknown"
      ],
      "title": "ExecutionEnvironment",
      "type": "string"
    },
    "ExternalProperties": {
      "additionalProperties": false,
      "properties": {
        "addresses": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Address"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Addresses that will be merged with a separate run.",
          "title": "Addresses"
        },
        "artifacts": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Artifact"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An array of artifact objects that will be merged with a separate run.",
          "title": "Artifacts"
        },
        "conversion": {
          "anyOf": [
            {
              "$ref": "#/$defs/Conversion"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A conversion object that will be merged with a separate run."
        },
        "driver": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolComponent"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The analysis tool object that will be merged with a separate run."
        },
        "extensions": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolComponent"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Tool extensions that will be merged with a separate run.",
          "title": "Extensions"
        },
        "externalizedProperties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information that will be merged with a separate run."
        },
        "graphs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Graph"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of graph objects that will be merged with a separate run.",
          "title": "Graphs"
        },
        "guid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A stable, unique identifer for this external properties object, in the form of a GUID.",
          "title": "Guid"
        },
        "invocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Invocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Describes the invocation of the analysis tool that will be merged with a separate run.",
          "title": "Invocations"
        },
        "logicalLocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/LogicalLocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of logical locations such as namespaces, types or functions that will be merged with a separate run.",
          "title": "Logicallocations"
        },
        "policies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolComponent"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Tool policies that will be merged with a separate run.",
          "title": "Policies"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the external properties."
        },
        "results": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Result"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of result objects that will be merged with a separate run.",
          "title": "Results"
        },
        "runGuid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A stable, unique identifer for the run associated with this external properties object, in the form of a GUID.",
          "title": "Runguid"
        },
        "schema": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URI of the JSON schema corresponding to the version of the external property file format.",
          "title": "Schema"
        },
        "taxonomies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolComponent"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Tool taxonomies that will be merged with a separate run.",
          "title": "Taxonomies"
        },
        "threadFlowLocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ThreadFlowLocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of threadFlowLocation objects that will be merged with a separate run.",
          "title": "Threadflowlocations"
        },
        "translations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolComponent"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Tool translations that will be merged with a separate run.",
          "title": "Translations"
        },
        "version": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__sarif_schema_model__Version"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The SARIF format version of this external properties object."
        },
        "webRequests": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/WebRequest"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Requests that will be merged with a separate run.",
          "title": "Webrequests"
        },
        "webResponses": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/WebResponse"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Responses that will be merged with a separate run.",
          "title": "Webresponses"
        }
      },
      "title": "ExternalProperties",
      "type": "object"
    },
    "ExternalPropertyFileReference": {
      "anyOf": [
        {
          "$ref": "#/$defs/ExternalPropertyFileReference1"
        },
        {
          "$ref": "#/$defs/ExternalPropertyFileReference2"
        }
      ],
      "description": "Contains information that enables a SARIF consumer to locate the external property file that contains the value of an externalized property associated with the run.",
      "title": "ExternalPropertyFileReference"
    },
    "ExternalPropertyFileReference1": {
      "additionalProperties": false,
      "properties": {
        "guid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A stable, unique identifer for the external property file in the form of a GUID.",
          "title": "Guid"
        },
        "itemCount": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "A non-negative integer specifying the number of items contained in the external property file.",
          "title": "Itemcount"
        },
        "location": {
          "$ref": "#/$defs/ArtifactLocation",
          "description": "The location of the external property file."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the external property file."
        }
      },
      "required": [
        "location"
      ],
      "title": "ExternalPropertyFileReference1",
      "type": "object"
    },
    "ExternalPropertyFileReference2": {
      "additionalProperties": false,
      "properties": {
        "guid": {
          "description": "A stable, unique identifer for the external property file in the form of a GUID.",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
          "title": "Guid",
          "type": "string"
        },
        "itemCount": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "A non-negative integer specifying the number of items contained in the external property file.",
          "title": "Itemcount"
        },
        "location": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The location of the external property file."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the external property file."
        }
      },
      "required": [
        "guid"
      ],
      "title": "ExternalPropertyFileReference2",
      "type": "object"
    },
    "ExternalPropertyFileReferences": {
      "additionalProperties": false,
      "properties": {
        "addresses": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.addresses arrays to be merged with the root log file.",
          "title": "Addresses"
        },
        "artifacts": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.artifacts arrays to be merged with the root log file.",
          "title": "Artifacts"
        },
        "conversion": {
          "anyOf": [
            {
              "$ref": "#/$defs/ExternalPropertyFileReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An external property file containing a run.conversion object to be merged with the root log file."
        },
        "driver": {
          "anyOf": [
            {
              "$ref": "#/$defs/ExternalPropertyFileReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An external property file containing a run.driver object to be merged with the root log file."
        },
        "extensions": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.extensions arrays to be merged with the root log file.",
          "title": "Extensions"
        },
        "externalizedProperties": {
          "anyOf": [
            {
              "$ref": "#/$defs/ExternalPropertyFileReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An external property file containing a run.properties object to be merged with the root log file."
        },
        "graphs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing a run.graphs object to be merged with the root log file.",
          "title": "Graphs"
        },
        "invocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.invocations arrays to be merged with the root log file.",
          "title": "Invocations"
        },
        "logicalLocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.logicalLocations arrays to be merged with the root log file.",
          "title": "Logicallocations"
        },
        "policies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.policies arrays to be merged with the root log file.",
          "title": "Policies"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the external property files."
        },
        "results": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.results arrays to be merged with the root log file.",
          "title": "Results"
        },
        "taxonomies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.taxonomies arrays to be merged with the root log file.",
          "title": "Taxonomies"
        },
        "threadFlowLocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.threadFlowLocations arrays to be merged with the root log file.",
          "title": "Threadflowlocations"
        },
        "translations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.translations arrays to be merged with the root log file.",
          "title": "Translations"
        },
        "webRequests": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.requests arrays to be merged with the root log file.",
          "title": "Webrequests"
        },
        "webResponses": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalPropertyFileReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of external property files containing run.responses arrays to be merged with the root log file.",
          "title": "Webresponses"
        }
      },
      "title": "ExternalPropertyFileReferences",
      "type": "object"
    },
    "ExternalReference": {
      "additionalProperties": false,
      "properties": {
        "comment": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional comment describing the external reference",
          "title": "Comment"
        },
        "hashes": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Hash"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The hashes of the external reference (if applicable).",
          "title": "Hashes"
        },
        "type": {
          "$ref": "#/$defs/Type3",
          "description": "Specifies the type of external reference.",
          "title": "Type"
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/$defs/BomLink"
            }
          ],
          "description": "The URI (URL or URN) to the external reference. External references are URIs and therefore can accept any URL scheme including https ([RFC-7230](https://www.ietf.org/rfc/rfc7230.txt)), mailto ([RFC-2368](https://www.ietf.org/rfc/rfc2368.txt)), tel ([RFC-3966](https://www.ietf.org/rfc/rfc3966.txt)), and dns ([RFC-4501](https://www.ietf.org/rfc/rfc4501.txt)). External references may also include formally registered URNs such as [CycloneDX BOM-Link](https://cyclonedx.org/capabilities/bomlink/) to reference CycloneDX BOMs or any object within a BOM. BOM-Link transforms applicable external references into relationships that can be expressed in a BOM or across BOMs.",
          "title": "URL"
        }
      },
      "required": [
        "url",
        "type"
      ],
      "title": "ExternalReference",
      "type": "object"
    },
    "FairnessAssessment": {
      "additionalProperties": false,
      "properties": {
        "benefits": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Expected benefits to the identified groups.",
          "title": "Benefits"
        },
        "groupAtRisk": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The groups or individuals at risk of being systematically disadvantaged by the model.",
          "title": "Group at Risk"
        },
        "harms": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Expected harms to the identified groups.",
          "title": "Harms"
        },
        "mitigationStrategy": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "With respect to the benefits and harms outlined, please describe any mitigation strategy implemented.",
          "title": "Mitigation Strategy"
        }
      },
      "title": "FairnessAssessment",
      "type": "object"
    },
    "FieldModel": {
      "enum": [
        "group",
        "name",
        "version",
        "purl",
        "cpe",
        "omniborId",
        "swhid",
        "swid",
        "hash"
      ],
      "title": "FieldModel",
      "type": "string"
    },
    "Fix": {
      "additionalProperties": false,
      "properties": {
        "artifactChanges": {
          "description": "One or more artifact changes that comprise a fix for a result.",
          "items": {
            "$ref": "#/$defs/ArtifactChange"
          },
          "minItems": 1,
          "title": "Artifactchanges",
          "type": "array"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A message that describes the proposed fix, enabling viewers to present the proposed change to an end user."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the fix."
        }
      },
      "required": [
        "artifactChanges"
      ],
      "title": "Fix",
      "type": "object"
    },
    "FlatJSONReporterConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "flat.json",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "flat-json",
          "default": "flat-json",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/FlatJSONReporterConfigOptions",
          "default": {}
        }
      },
      "title": "FlatJSONReporterConfig",
      "type": "object"
    },
    "FlatJSONReporterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "FlatJSONReporterConfigOptions",
      "type": "object"
    },
    "Formula": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the formula elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "components": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Component"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Transient components that are used in tasks that constitute one or more of this formula's workflows",
          "title": "Components"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "services": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Service"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Transient services that are used in tasks that constitute one or more of this formula's workflows",
          "title": "Services"
        },
        "workflows": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Workflow"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of workflows that can be declared to accomplish specific orchestrated goals and independently triggered.",
          "title": "Workflows"
        }
      },
      "title": "Formula",
      "type": "object"
    },
    "Frame": {
      "additionalProperties": false,
      "properties": {
        "column": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The column the code that is called resides.",
          "title": "Column"
        },
        "fullFilename": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The full path and filename of the module.",
          "title": "Full Filename"
        },
        "function": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A block of code designed to perform a particular task.",
          "title": "Function"
        },
        "line": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The line number the code that is called resides on.",
          "title": "Line"
        },
        "module": {
          "description": "A module or class that encloses functions/methods and other code.",
          "title": "Module",
          "type": "string"
        },
        "package": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A package organizes modules into namespaces, providing a unique namespace for each type it contains.",
          "title": "Package"
        },
        "parameters": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional arguments that are passed to the module or function.",
          "title": "Parameters"
        }
      },
      "required": [
        "module"
      ],
      "title": "Frame",
      "type": "object"
    },
    "GitLabSASTReporterConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "gl-sast-report.json",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "gitlab-sast",
          "default": "gitlab-sast",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/GitLabSASTReporterConfigOptions",
          "default": {}
        }
      },
      "title": "GitLabSASTReporterConfig",
      "type": "object"
    },
    "GitLabSASTReporterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "GitLabSASTReporterConfigOptions",
      "type": "object"
    },
    "Graph": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the graph."
        },
        "edges": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Edge"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of edge objects representing the edges of the graph.",
          "title": "Edges"
        },
        "nodes": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Node"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of node objects representing the nodes of the graph.",
          "title": "Nodes"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the graph."
        }
      },
      "title": "Graph",
      "type": "object"
    },
    "GraphTraversal": {
      "anyOf": [
        {
          "$ref": "#/$defs/GraphTraversal1"
        },
        {
          "$ref": "#/$defs/GraphTraversal2"
        }
      ],
      "description": "Represents a path through a graph.",
      "title": "GraphTraversal"
    },
    "GraphTraversal1": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of this graph traversal."
        },
        "edgeTraversals": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/EdgeTraversal"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "The sequences of edges traversed by this graph traversal.",
          "title": "Edgetraversals"
        },
        "immutableState": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/MultiformatMessageString"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Values of relevant expressions at the start of the graph traversal that remain constant for the graph traversal.",
          "title": "Immutablestate"
        },
        "initialState": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/MultiformatMessageString"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Values of relevant expressions at the start of the graph traversal that may change during graph traversal.",
          "title": "Initialstate"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the graph traversal."
        },
        "resultGraphIndex": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within the result.graphs to be associated with the result.",
          "title": "Resultgraphindex"
        },
        "runGraphIndex": {
          "description": "The index within the run.graphs to be associated with the result.",
          "minimum": -1,
          "title": "Rungraphindex",
          "type": "integer"
        }
      },
      "required": [
        "runGraphIndex"
      ],
      "title": "GraphTraversal1",
      "type": "object"
    },
    "GraphTraversal2": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of this graph traversal."
        },
        "edgeTraversals": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/EdgeTraversal"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "The sequences of edges traversed by this graph traversal.",
          "title": "Edgetraversals"
        },
        "immutableState": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/MultiformatMessageString"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Values of relevant expressions at the start of the graph traversal that remain constant for the graph traversal.",
          "title": "Immutablestate"
        },
        "initialState": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/MultiformatMessageString"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Values of relevant expressions at the start of the graph traversal that may change during graph traversal.",
          "title": "Initialstate"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the graph traversal."
        },
        "resultGraphIndex": {
          "description": "The index within the result.graphs to be associated with the result.",
          "minimum": -1,
          "title": "Resultgraphindex",
          "type": "integer"
        },
        "runGraphIndex": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within the run.graphs to be associated with the result.",
          "title": "Rungraphindex"
        }
      },
      "required": [
        "resultGraphIndex"
      ],
      "title": "GraphTraversal2",
      "type": "object"
    },
    "Graphic": {
      "additionalProperties": false,
      "properties": {
        "image": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The graphic (vector or raster). Base64 encoding must be specified for binary images.",
          "title": "Graphic Image"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the graphic.",
          "title": "Name"
        }
      },
      "title": "Graphic",
      "type": "object"
    },
    "GraphicsCollection": {
      "additionalProperties": false,
      "properties": {
        "collection": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Graphic"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A collection of graphics.",
          "title": "Collection"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of this collection of graphics.",
          "title": "Description"
        }
      },
      "title": "GraphicsCollection",
      "type": "object"
    },
    "GrypeScannerConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "grype",
          "default": "grype",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/GrypeScannerConfigOptions",
          "default": {
            "config_file": null,
            "offline": false,
            "severity_threshold": null
          },
          "description": "Configure Grype scanner"
        }
      },
      "title": "GrypeScannerConfig",
      "type": "object"
    },
    "GrypeScannerConfigOptions": {
      "additionalProperties": true,
      "properties": {
        "config_file": {
          "anyOf": [
            {
              "format": "path",
              "type": "string"
            },
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Path to Grype configuration file, relative to current source directory. Defaults to searching for `.grype.yaml` and `.grype.yml` in the root of the source directory.",
          "title": "Config File"
        },
        "offline": {
          "default": false,
          "description": "Run in offline mode, disabling database updates and validation",
          "title": "Offline",
          "type": "boolean"
        },
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Severity Threshold"
        }
      },
      "title": "GrypeScannerConfigOptions",
      "type": "object"
    },
    "HTMLReporterConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "html",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "html",
          "default": "html",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/HTMLReporterConfigOptions",
          "default": {}
        }
      },
      "title": "HTMLReporterConfig",
      "type": "object"
    },
    "HTMLReporterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "HTMLReporterConfigOptions",
      "type": "object"
    },
    "Hash": {
      "additionalProperties": false,
      "properties": {
        "alg": {
          "$ref": "#/$defs/HashAlg"
        },
        "content": {
          "$ref": "#/$defs/HashContent"
        }
      },
      "required": [
        "alg",
        "content"
      ],
      "title": "Hash",
      "type": "object"
    },
    "HashAlg": {
      "enum": [
        "MD5",
        "SHA-1",
        "SHA-256",
        "SHA-384",
        "SHA-512",
        "SHA3-256",
        "SHA3-384",
        "SHA3-512",
        "BLAKE2b-256",
        "BLAKE2b-384",
        "BLAKE2b-512",
        "BLAKE3"
      ],
      "title": "HashAlg",
      "type": "string"
    },
    "HashContent": {
      "description": "The value of the hash.",
      "pattern": "^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$",
      "title": "HashContent",
      "type": "string"
    },
    "IdentifiableAction": {
      "additionalProperties": false,
      "properties": {
        "email": {
          "anyOf": [
            {
              "format": "email",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The email address of the individual who performed the action",
          "title": "E-mail"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the individual who performed the action",
          "title": "Name"
        },
        "timestamp": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The timestamp in which the action occurred",
          "title": "Timestamp"
        }
      },
      "title": "IdentifiableAction",
      "type": "object"
    },
    "IgnorePathWithReason": {
      "description": "Represents a path exclusion entry.",
      "properties": {
        "path": {
          "description": "Path or pattern to exclude",
          "title": "Path",
          "type": "string"
        },
        "reason": {
          "description": "Reason for exclusion",
          "title": "Reason",
          "type": "string"
        }
      },
      "required": [
        "path",
        "reason"
      ],
      "title": "IgnorePathWithReason",
      "type": "object"
    },
    "Ikev2TransformTypes": {
      "additionalProperties": false,
      "properties": {
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/CryptoRefArray"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "IKEv2 Authentication method",
          "title": "IKEv2 Authentication method"
        },
        "encr": {
          "anyOf": [
            {
              "$ref": "#/$defs/CryptoRefArray"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Transform Type 1: encryption algorithms",
          "title": "Encryption Algorithm (ENCR)"
        },
        "esn": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies if an Extended Sequence Number (ESN) is used.",
          "title": "Extended Sequence Numbers (ESN)"
        },
        "integ": {
          "anyOf": [
            {
              "$ref": "#/$defs/CryptoRefArray"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Transform Type 3: integrity algorithms",
          "title": "Integrity Algorithm (INTEG)"
        },
        "ke": {
          "anyOf": [
            {
              "$ref": "#/$defs/CryptoRefArray"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Transform Type 4: Key Exchange Method (KE) per [RFC 9370](https://www.ietf.org/rfc/rfc9370.html), formerly called Diffie-Hellman Group (D-H).",
          "title": "Key Exchange Method (KE)"
        },
        "prf": {
          "anyOf": [
            {
              "$ref": "#/$defs/CryptoRefArray"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Transform Type 2: pseudorandom functions",
          "title": "Pseudorandom Function (PRF)"
        }
      },
      "title": "Ikev2TransformTypes",
      "type": "object"
    },
    "ImpactAnalysisJustification": {
      "enum": [
        "code_not_present",
        "code_not_reachable",
        "requires_configuration",
        "requires_dependency",
        "requires_environment",
        "protected_by_compiler",
        "protected_at_runtime",
        "protected_at_perimeter",
        "protected_by_mitigating_control"
      ],
      "title": "ImpactAnalysisJustification",
      "type": "string"
    },
    "ImpactAnalysisState": {
      "enum": [
        "resolved",
        "resolved_with_pedigree",
        "exploitable",
        "in_triage",
        "false_positive",
        "not_affected"
      ],
      "title": "ImpactAnalysisState",
      "type": "string"
    },
    "ImplementationPlatform": {
      "enum": [
        "generic",
        "x86_32",
        "x86_64",
        "armv7-a",
        "armv7-m",
        "armv8-a",
        "armv8-m",
        "armv9-a",
        "armv9-m",
        "s390x",
        "ppc64",
        "ppc64le",
        "other",
        "unknown"
      ],
      "title": "ImplementationPlatform",
      "type": "string"
    },
    "Importance": {
      "enum": [
        "important",
        "essential",
        "unimportant"
      ],
      "title": "Importance",
      "type": "string"
    },
    "InputOutputMLParameters": {
      "additionalProperties": false,
      "properties": {
        "format": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The data format for input/output to the model.",
          "examples": [
            "string",
            "image",
            "time-series"
          ],
          "title": "Input/Output Format"
        }
      },
      "title": "InputOutputMLParameters",
      "type": "object"
    },
    "InputType": {
      "anyOf": [
        {
          "$ref": "#/$defs/InputType1"
        },
        {
          "$ref": "#/$defs/InputType2"
        },
        {
          "$ref": "#/$defs/InputType3"
        },
        {
          "$ref": "#/$defs/InputType4"
        }
      ],
      "description": "Type that represents various input data types and formats.",
      "title": "InputType"
    },
    "InputType1": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inputs that have the form of data.",
          "title": "Data"
        },
        "environmentVars": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Property"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inputs that have the form of parameters with names and values.",
          "title": "Environment variables"
        },
        "parameters": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Parameter"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inputs that have the form of parameters with names and values.",
          "title": "Parameters"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resource": {
          "$ref": "#/$defs/ResourceReferenceChoice",
          "description": "A reference to an independent resource provided as an input to a task by the workflow runtime.",
          "examples": [
            "a reference to a configuration file in a repository (i.e., a bom-ref)",
            "a reference to a scanning service used in a task (i.e., a bom-ref)"
          ],
          "title": "Resource"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to the component or service that provided the input to the task (e.g., reference to a service with data flow value of `inbound`)",
          "examples": [
            "source code repository",
            "database"
          ],
          "title": "Source"
        },
        "target": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to the component or service that received or stored the input if not the task itself (e.g., a local, named storage workspace)",
          "examples": [
            "workspace",
            "directory"
          ],
          "title": "Target"
        }
      },
      "required": [
        "resource"
      ],
      "title": "InputType1",
      "type": "object"
    },
    "InputType2": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inputs that have the form of data.",
          "title": "Data"
        },
        "environmentVars": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Property"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inputs that have the form of parameters with names and values.",
          "title": "Environment variables"
        },
        "parameters": {
          "description": "Inputs that have the form of parameters with names and values.",
          "items": {
            "$ref": "#/$defs/Parameter"
          },
          "title": "Parameters",
          "type": "array"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resource": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to an independent resource provided as an input to a task by the workflow runtime.",
          "examples": [
            "a reference to a configuration file in a repository (i.e., a bom-ref)",
            "a reference to a scanning service used in a task (i.e., a bom-ref)"
          ],
          "title": "Resource"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to the component or service that provided the input to the task (e.g., reference to a service with data flow value of `inbound`)",
          "examples": [
            "source code repository",
            "database"
          ],
          "title": "Source"
        },
        "target": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to the component or service that received or stored the input if not the task itself (e.g., a local, named storage workspace)",
          "examples": [
            "workspace",
            "directory"
          ],
          "title": "Target"
        }
      },
      "required": [
        "parameters"
      ],
      "title": "InputType2",
      "type": "object"
    },
    "InputType3": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inputs that have the form of data.",
          "title": "Data"
        },
        "environmentVars": {
          "description": "Inputs that have the form of parameters with names and values.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/Property"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": "Environment variables",
          "type": "array"
        },
        "parameters": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Parameter"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inputs that have the form of parameters with names and values.",
          "title": "Parameters"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resource": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to an independent resource provided as an input to a task by the workflow runtime.",
          "examples": [
            "a reference to a configuration file in a repository (i.e., a bom-ref)",
            "a reference to a scanning service used in a task (i.e., a bom-ref)"
          ],
          "title": "Resource"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to the component or service that provided the input to the task (e.g., reference to a service with data flow value of `inbound`)",
          "examples": [
            "source code repository",
            "database"
          ],
          "title": "Source"
        },
        "target": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to the component or service that received or stored the input if not the task itself (e.g., a local, named storage workspace)",
          "examples": [
            "workspace",
            "directory"
          ],
          "title": "Target"
        }
      },
      "required": [
        "environmentVars"
      ],
      "title": "InputType3",
      "type": "object"
    },
    "InputType4": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment",
          "description": "Inputs that have the form of data.",
          "title": "Data"
        },
        "environmentVars": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Property"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inputs that have the form of parameters with names and values.",
          "title": "Environment variables"
        },
        "parameters": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Parameter"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Inputs that have the form of parameters with names and values.",
          "title": "Parameters"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resource": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to an independent resource provided as an input to a task by the workflow runtime.",
          "examples": [
            "a reference to a configuration file in a repository (i.e., a bom-ref)",
            "a reference to a scanning service used in a task (i.e., a bom-ref)"
          ],
          "title": "Resource"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to the component or service that provided the input to the task (e.g., reference to a service with data flow value of `inbound`)",
          "examples": [
            "source code repository",
            "database"
          ],
          "title": "Source"
        },
        "target": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to the component or service that received or stored the input if not the task itself (e.g., a local, named storage workspace)",
          "examples": [
            "workspace",
            "directory"
          ],
          "title": "Target"
        }
      },
      "required": [
        "data"
      ],
      "title": "InputType4",
      "type": "object"
    },
    "Invocation": {
      "additionalProperties": false,
      "properties": {
        "account": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The account that ran the analysis tool.",
          "title": "Account"
        },
        "arguments": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An array of strings, containing in order the command line arguments passed to the tool from the operating system.",
          "title": "Arguments"
        },
        "commandLine": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The command line used to invoke the tool.",
          "title": "Commandline"
        },
        "endTimeUtc": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Coordinated Universal Time (UTC) date and time at which the run ended. See \"Date/time properties\" in the SARIF spec for the required format.",
          "title": "Endtimeutc"
        },
        "environmentVariables": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The environment variables associated with the analysis tool process, expressed as key/value pairs.",
          "title": "Environmentvariables"
        },
        "executableLocation": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An absolute URI specifying the location of the analysis tool's executable."
        },
        "executionSuccessful": {
          "description": "Specifies whether the tool's execution completed successfully.",
          "title": "Executionsuccessful",
          "type": "boolean"
        },
        "exitCode": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The process exit code.",
          "title": "Exitcode"
        },
        "exitCodeDescription": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The reason for the process exit.",
          "title": "Exitcodedescription"
        },
        "exitSignalName": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the signal that caused the process to exit.",
          "title": "Exitsignalname"
        },
        "exitSignalNumber": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The numeric value of the signal that caused the process to exit.",
          "title": "Exitsignalnumber"
        },
        "machine": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The machine that hosted the analysis tool run.",
          "title": "Machine"
        },
        "notificationConfigurationOverrides": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ConfigurationOverride"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of configurationOverride objects that describe notifications related runtime overrides.",
          "title": "Notificationconfigurationoverrides"
        },
        "processId": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The process id for the analysis tool run.",
          "title": "Processid"
        },
        "processStartFailureMessage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The reason given by the operating system that the process failed to start.",
          "title": "Processstartfailuremessage"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the invocation."
        },
        "responseFiles": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ArtifactLocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The locations of any response files specified on the tool's command line.",
          "title": "Responsefiles"
        },
        "ruleConfigurationOverrides": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ConfigurationOverride"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of configurationOverride objects that describe rules related runtime overrides.",
          "title": "Ruleconfigurationoverrides"
        },
        "startTimeUtc": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Coordinated Universal Time (UTC) date and time at which the run started. See \"Date/time properties\" in the SARIF spec for the required format.",
          "title": "Starttimeutc"
        },
        "stderr": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A file containing the standard error stream from the process that was invoked."
        },
        "stdin": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A file containing the standard input stream to the process that was invoked."
        },
        "stdout": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A file containing the standard output stream from the process that was invoked."
        },
        "stdoutStderr": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A file containing the interleaved standard output and standard error stream from the process that was invoked."
        },
        "toolConfigurationNotifications": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Notification"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "A list of conditions detected by the tool that are relevant to the tool's configuration.",
          "title": "Toolconfigurationnotifications"
        },
        "toolExecutionNotifications": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Notification"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "A list of runtime conditions detected by the tool during the analysis.",
          "title": "Toolexecutionnotifications"
        },
        "workingDirectory": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The working directory for the analysis tool run."
        }
      },
      "required": [
        "executionSuccessful"
      ],
      "title": "Invocation",
      "type": "object"
    },
    "Issue": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the issue",
          "title": "Issue Description"
        },
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The identifier of the issue assigned by the source of the issue",
          "title": "Issue ID"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the issue",
          "title": "Issue Name"
        },
        "references": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A collection of URL's for reference. Multiple URLs are allowed.",
          "examples": [
            "https://example.com"
          ],
          "title": "References"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/Source"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The source of the issue where it is documented",
          "title": "Source"
        },
        "type": {
          "$ref": "#/$defs/Type2",
          "description": "Specifies the type of issue",
          "title": "Issue Type"
        }
      },
      "required": [
        "type"
      ],
      "title": "Issue",
      "type": "object"
    },
    "JUnitXMLReporterConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "junit.xml",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "junitxml",
          "default": "junitxml",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/JUnitXMLReporterConfigOptions",
          "default": {}
        }
      },
      "title": "JUnitXMLReporterConfig",
      "type": "object"
    },
    "JUnitXMLReporterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "JUnitXMLReporterConfigOptions",
      "type": "object"
    },
    "JupyterConverterConfig": {
      "additionalProperties": true,
      "description": "Jupyter Notebook (.ipynb) to Python converter configuration.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "jupyter",
          "default": "jupyter",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/JupyterConverterConfigOptions",
          "default": {},
          "description": "Configure Jupyter Notebook converter"
        }
      },
      "title": "JupyterConverterConfig",
      "type": "object"
    },
    "JupyterConverterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "JupyterConverterConfigOptions",
      "type": "object"
    },
    "KeyType": {
      "enum": [
        "EC",
        "OKP",
        "RSA"
      ],
      "title": "KeyType",
      "type": "string"
    },
    "Kind": {
      "enum": [
        "notApplicable",
        "pass",
        "fail",
        "review",
        "open",
        "informational"
      ],
      "title": "Kind",
      "type": "string"
    },
    "Kind1": {
      "enum": [
        "inSource",
        "external"
      ],
      "title": "Kind1",
      "type": "string"
    },
    "LicenseChoice": {
      "description": "EITHER (list of SPDX licenses and/or named licenses) OR (tuple of one SPDX License Expression)",
      "items": {},
      "title": "LicenseChoice",
      "type": "array"
    },
    "Lifecycles": {
      "additionalProperties": false,
      "properties": {
        "phase": {
          "$ref": "#/$defs/Phase",
          "description": "A pre-defined phase in the product lifecycle."
        }
      },
      "required": [
        "phase"
      ],
      "title": "Lifecycles",
      "type": "object"
    },
    "Lifecycles1": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The description of the lifecycle phase",
          "title": "Description"
        },
        "name": {
          "description": "The name of the lifecycle phase",
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "Lifecycles1",
      "type": "object"
    },
    "LocaleType": {
      "description": "Defines a syntax for representing two character language code (ISO-639) followed by an optional two character country code. The language code must be lower case. If the country code is specified, the country code must be upper case. The language code and country code must be separated by a minus sign. Examples: en, en-US, fr, fr-CA",
      "pattern": "^([a-z]{2})(-[A-Z]{2})?$",
      "title": "LocaleType",
      "type": "string"
    },
    "Location": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Region"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "A set of regions relevant to the location.",
          "title": "Annotations"
        },
        "id": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "Value that distinguishes this location from all other locations within a single result object.",
          "title": "Id"
        },
        "logicalLocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/LogicalLocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "The logical locations associated with the result.",
          "title": "Logicallocations"
        },
        "message": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A message relevant to the location."
        },
        "physicalLocation": {
          "anyOf": [
            {
              "$ref": "#/$defs/PhysicalLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Identifies the artifact and region."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the location."
        },
        "relationships": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/LocationRelationship"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of objects that describe relationships between this location and others.",
          "title": "Relationships"
        }
      },
      "title": "Location",
      "type": "object"
    },
    "LocationRelationship": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the location relationship."
        },
        "kinds": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [
            "relevant"
          ],
          "description": "A set of distinct strings that categorize the relationship. Well-known kinds include 'includes', 'isIncludedBy' and 'relevant'.",
          "title": "Kinds"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the location relationship."
        },
        "target": {
          "description": "A reference to the related location.",
          "minimum": 0,
          "title": "Target",
          "type": "integer"
        }
      },
      "required": [
        "target"
      ],
      "title": "LocationRelationship",
      "type": "object"
    },
    "LogicalLocation": {
      "additionalProperties": false,
      "properties": {
        "decoratedName": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The machine-readable name for the logical location, such as a mangled function name provided by a C++ compiler that encodes calling convention, return type and other details along with the function name.",
          "title": "Decoratedname"
        },
        "fullyQualifiedName": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The human-readable fully qualified name of the logical location.",
          "title": "Fullyqualifiedname"
        },
        "index": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within the logical locations array.",
          "title": "Index"
        },
        "kind": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The type of construct this logical location component refers to. Should be one of 'function', 'member', 'module', 'namespace', 'parameter', 'resource', 'returnType', 'type', 'variable', 'object', 'array', 'property', 'value', 'element', 'text', 'attribute', 'comment', 'declaration', 'dtd' or 'processingInstruction', if any of those accurately describe the construct.",
          "title": "Kind"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Identifies the construct in which the result occurred. For example, this property might contain the name of a class or a method.",
          "title": "Name"
        },
        "parentIndex": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "Identifies the index of the immediate parent of the construct in which the result was detected. For example, this property might point to a logical location that represents the namespace that holds a type.",
          "title": "Parentindex"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the logical location."
        }
      },
      "title": "LogicalLocation",
      "type": "object"
    },
    "MapItem": {
      "additionalProperties": false,
      "properties": {
        "claims": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RefLinkType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of `bom-ref` to the claims being attested to.",
          "title": "Claims"
        },
        "confidence": {
          "anyOf": [
            {
              "$ref": "#/$defs/Confidence"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The confidence of the claim meeting the requirement.",
          "title": "Confidence"
        },
        "conformance": {
          "anyOf": [
            {
              "$ref": "#/$defs/Conformance"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The conformance of the claim meeting a requirement.",
          "title": "Conformance"
        },
        "counterClaims": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RefLinkType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of  `bom-ref` to the counter claims being attested to.",
          "title": "Counter Claims"
        },
        "requirement": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefLinkType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The `bom-ref` to the requirement being attested to.",
          "title": "Requirement"
        }
      },
      "title": "MapItem",
      "type": "object"
    },
    "MarkdownReporterConfig": {
      "additionalProperties": true,
      "description": "Configuration for the Markdown reporter.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "summary.md",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "markdown",
          "default": "markdown",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/MarkdownReporterConfigOptions",
          "default": {
            "include_detailed_findings": true,
            "include_findings_table": false,
            "include_summary": true,
            "max_detailed_findings": 20,
            "top_hotspots_limit": 10,
            "use_collapsible_details": true
          }
        }
      },
      "title": "MarkdownReporterConfig",
      "type": "object"
    },
    "MarkdownReporterConfigOptions": {
      "additionalProperties": true,
      "description": "Configuration options for the Markdown reporter.",
      "properties": {
        "include_detailed_findings": {
          "default": true,
          "title": "Include Detailed Findings",
          "type": "boolean"
        },
        "include_findings_table": {
          "default": false,
          "title": "Include Findings Table",
          "type": "boolean"
        },
        "include_summary": {
          "default": true,
          "title": "Include Summary",
          "type": "boolean"
        },
        "max_detailed_findings": {
          "default": 20,
          "title": "Max Detailed Findings",
          "type": "integer"
        },
        "top_hotspots_limit": {
          "default": 10,
          "title": "Top Hotspots Limit",
          "type": "integer"
        },
        "use_collapsible_details": {
          "default": true,
          "title": "Use Collapsible Details",
          "type": "boolean"
        }
      },
      "title": "MarkdownReporterConfigOptions",
      "type": "object"
    },
    "Message": {
      "anyOf": [
        {
          "$ref": "#/$defs/Message1"
        },
        {
          "$ref": "#/$defs/Message2"
        }
      ],
      "description": "Encapsulates a message intended to be read by the end user.",
      "title": "Message"
    },
    "Message1": {
      "additionalProperties": false,
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of strings to substitute into the message string.",
          "title": "Arguments"
        },
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The identifier for this message.",
          "title": "Id"
        },
        "markdown": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Markdown message string.",
          "title": "Markdown"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the message."
        },
        "text": {
          "description": "A plain text message string.",
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "Message1",
      "type": "object"
    },
    "Message2": {
      "additionalProperties": false,
      "properties": {
        "arguments": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of strings to substitute into the message string.",
          "title": "Arguments"
        },
        "id": {
          "description": "The identifier for this message.",
          "title": "Id",
          "type": "string"
        },
        "markdown": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Markdown message string.",
          "title": "Markdown"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the message."
        },
        "text": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A plain text message string.",
          "title": "Text"
        }
      },
      "required": [
        "id"
      ],
      "title": "Message2",
      "type": "object"
    },
    "Metadata": {
      "additionalProperties": false,
      "properties": {
        "authors": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/OrganizationalContact"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The person(s) who created the BOM.\nAuthors are common in BOMs created through manual processes. BOMs created through automated means may have `@.manufacturer` instead.",
          "title": "BOM Authors"
        },
        "component": {
          "anyOf": [
            {
              "$ref": "#/$defs/Component"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The component that the BOM describes.",
          "title": "Component"
        },
        "licenses": {
          "anyOf": [
            {
              "$ref": "#/$defs/LicenseChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The license information for the BOM document.\nThis may be different from the license(s) of the component(s) that the BOM describes.",
          "title": "BOM License(s)"
        },
        "lifecycles": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Lifecycles"
                  },
                  {
                    "$ref": "#/$defs/Lifecycles1"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Lifecycles communicate the stage(s) in which data in the BOM was captured. Different types of data may be available at various phases of a lifecycle, such as the Software Development Lifecycle (SDLC), IT Asset Management (ITAM), and Software Asset Management (SAM). Thus, a BOM may include data specific to or only obtainable in a given lifecycle.",
          "title": "Lifecycles"
        },
        "manufacture": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "[Deprecated] This will be removed in a future version. Use the `@.component.manufacturer` instead.\nThe organization that manufactured the component that the BOM describes.",
          "title": "Component Manufacture (legacy)"
        },
        "manufacturer": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The organization that created the BOM.\nManufacturer is common in BOMs created through automated processes. BOMs created through manual means may have `@.authors` instead.",
          "title": "BOM Manufacturer"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "supplier": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": " The organization that supplied the component that the BOM describes. The supplier may often be the manufacturer, but may also be a distributor or repackager.",
          "title": "Supplier"
        },
        "timestamp": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the BOM was created.",
          "title": "Timestamp"
        },
        "tools": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tools"
            },
            {
              "items": {
                "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Tool"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The tool(s) used in the creation, enrichment, and validation of the BOM.",
          "title": "Tools"
        }
      },
      "title": "Metadata",
      "type": "object"
    },
    "Method": {
      "additionalProperties": false,
      "properties": {
        "confidence": {
          "description": "The confidence of the evidence from 0 - 1, where 1 is 100% confidence. Confidence is specific to the technique used. Each technique of analysis can have independent confidence.",
          "maximum": 1.0,
          "minimum": 0.0,
          "title": "Confidence",
          "type": "number"
        },
        "technique": {
          "$ref": "#/$defs/Technique",
          "description": "The technique used in this method of analysis."
        },
        "value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The value or contents of the evidence.",
          "title": "Value"
        }
      },
      "required": [
        "technique",
        "confidence"
      ],
      "title": "Method",
      "type": "object"
    },
    "Mode": {
      "enum": [
        "filesystem",
        "block"
      ],
      "title": "Mode",
      "type": "string"
    },
    "Mode1": {
      "enum": [
        "cbc",
        "ecb",
        "ccm",
        "gcm",
        "cfb",
        "ofb",
        "ctr",
        "other",
        "unknown"
      ],
      "title": "Mode1",
      "type": "string"
    },
    "ModelCard": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the model card elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "considerations": {
          "anyOf": [
            {
              "$ref": "#/$defs/Considerations"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "What considerations should be taken into account regarding the model's construction, training, and application?",
          "title": "Considerations"
        },
        "modelParameters": {
          "anyOf": [
            {
              "$ref": "#/$defs/ModelParameters"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Hyper-parameters for construction of the model.",
          "title": "Model Parameters"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "quantitativeAnalysis": {
          "anyOf": [
            {
              "$ref": "#/$defs/QuantitativeAnalysis"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A quantitative analysis of the model",
          "title": "Quantitative Analysis"
        }
      },
      "title": "ModelCard",
      "type": "object"
    },
    "ModelParameters": {
      "additionalProperties": false,
      "properties": {
        "approach": {
          "anyOf": [
            {
              "$ref": "#/$defs/Approach"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The overall approach to learning used by the model for problem solving.",
          "title": "Approach"
        },
        "architectureFamily": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The model architecture family such as transformer network, convolutional neural network, residual neural network, LSTM neural network, etc.",
          "title": "Architecture Family"
        },
        "datasets": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ComponentData"
                  },
                  {
                    "$ref": "#/$defs/Datasets"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The datasets used to train and evaluate the model.",
          "title": "Datasets"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/InputOutputMLParameters"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The input format(s) of the model",
          "title": "Inputs"
        },
        "modelArchitecture": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The specific architecture of the model such as GPT-1, ResNet-50, YOLOv3, etc.",
          "title": "Model Architecture"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/InputOutputMLParameters"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The output format(s) from the model",
          "title": "Outputs"
        },
        "task": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Directly influences the input and/or output. Examples include classification, regression, clustering, etc.",
          "title": "Task"
        }
      },
      "title": "ModelParameters",
      "type": "object"
    },
    "MultiformatMessageString": {
      "additionalProperties": false,
      "properties": {
        "markdown": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Markdown message string or format string.",
          "title": "Markdown"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the message."
        },
        "text": {
          "description": "A plain text message string or format string.",
          "title": "Text",
          "type": "string"
        }
      },
      "required": [
        "text"
      ],
      "title": "MultiformatMessageString",
      "type": "object"
    },
    "Node": {
      "additionalProperties": false,
      "properties": {
        "children": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Node"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Array of child nodes.",
          "title": "Children"
        },
        "id": {
          "description": "A string that uniquely identifies the node within its graph.",
          "title": "Id",
          "type": "string"
        },
        "label": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A short description of the node."
        },
        "location": {
          "anyOf": [
            {
              "$ref": "#/$defs/Location"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A code location associated with the node."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the node."
        }
      },
      "required": [
        "id"
      ],
      "title": "Node",
      "type": "object"
    },
    "Note": {
      "additionalProperties": false,
      "properties": {
        "locale": {
          "anyOf": [
            {
              "$ref": "#/$defs/LocaleType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The ISO-639 (or higher) language code and optional ISO-3166 (or higher) country code. Examples include: \"en\", \"en-US\", \"fr\" and \"fr-CA\"",
          "title": "Locale"
        },
        "text": {
          "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment",
          "description": "Specifies the full content of the release note.",
          "title": "Release note content"
        }
      },
      "required": [
        "text"
      ],
      "title": "Note",
      "type": "object"
    },
    "Notification": {
      "additionalProperties": false,
      "properties": {
        "associatedRule": {
          "anyOf": [
            {
              "$ref": "#/$defs/ReportingDescriptorReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference used to locate the rule descriptor associated with this notification."
        },
        "descriptor": {
          "anyOf": [
            {
              "$ref": "#/$defs/ReportingDescriptorReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference used to locate the descriptor relevant to this notification."
        },
        "exception": {
          "anyOf": [
            {
              "$ref": "#/$defs/Exception"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The runtime exception, if any, relevant to this notification."
        },
        "level": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__sarif_schema_model__Level"
            },
            {
              "type": "null"
            }
          ],
          "default": "warning",
          "description": "A value specifying the severity level of the notification."
        },
        "locations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Location"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "The locations relevant to this notification.",
          "title": "Locations"
        },
        "message": {
          "$ref": "#/$defs/Message",
          "description": "A message that describes the condition that was encountered."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the notification."
        },
        "threadId": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The thread identifier of the code that generated the notification.",
          "title": "Threadid"
        },
        "timeUtc": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Coordinated Universal Time (UTC) date and time at which the analysis tool generated the notification.",
          "title": "Timeutc"
        }
      },
      "required": [
        "message"
      ],
      "title": "Notification",
      "type": "object"
    },
    "NpmAuditScannerConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "npm-audit",
          "default": "npm-audit",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/NpmAuditScannerConfigOptions",
          "default": {
            "offline": false,
            "severity_threshold": null
          },
          "description": "Configure NpmAudit scanner"
        }
      },
      "title": "NpmAuditScannerConfig",
      "type": "object"
    },
    "NpmAuditScannerConfigOptions": {
      "additionalProperties": true,
      "properties": {
        "offline": {
          "default": false,
          "description": "Run in offline mode, using locally cached data",
          "title": "Offline",
          "type": "boolean"
        },
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Minimum severity level to consider findings as failures. This is a scanner-level override of the default severity-level within ASH of MEDIUM.",
          "title": "Severity Threshold"
        }
      },
      "title": "NpmAuditScannerConfigOptions",
      "type": "object"
    },
    "OCSFReporterConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "ocsf.json",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "ocsf",
          "default": "ocsf",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/OCSFReporterConfigOptions",
          "default": {}
        }
      },
      "title": "OCSFReporterConfig",
      "type": "object"
    },
    "OCSFReporterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "OCSFReporterConfigOptions",
      "type": "object"
    },
    "Occurrence": {
      "additionalProperties": false,
      "properties": {
        "additionalContext": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Any additional context of the detected component (e.g. a code snippet).",
          "title": "Additional Context"
        },
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the occurrence elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "line": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The line number where the component was found.",
          "title": "Line Number"
        },
        "location": {
          "description": "The location or path to where the component was found.",
          "title": "Location",
          "type": "string"
        },
        "offset": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The offset where the component was found.",
          "title": "Offset"
        },
        "symbol": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The symbol name that was found associated with the component.",
          "title": "Symbol"
        }
      },
      "required": [
        "location"
      ],
      "title": "Occurrence",
      "type": "object"
    },
    "OpengrepScannerConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "opengrep",
          "default": "opengrep",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/OpengrepScannerConfigOptions",
          "default": {
            "config": "auto",
            "exclude": [
              "*-converted.py",
              "*_report_result.txt"
            ],
            "exclude_rule": [],
            "metrics": "auto",
            "offline": false,
            "patterns": [],
            "severity": [],
            "severity_threshold": null,
            "version": "v1.1.5"
          },
          "description": "Configure Opengrep scanner"
        }
      },
      "title": "OpengrepScannerConfig",
      "type": "object"
    },
    "OpengrepScannerConfigOptions": {
      "additionalProperties": true,
      "properties": {
        "config": {
          "default": "auto",
          "description": "YAML configuration file, directory of YAML files ending in .yml|.yaml, URL of a configuration file, or Opengrep registry entry name. Use 'auto' to automatically obtain rules tailored to this project. Defaults to 'auto'.",
          "title": "Config",
          "type": "string"
        },
        "exclude": {
          "default": [
            "*-converted.py",
            "*_report_result.txt"
          ],
          "description": "Skip any file or directory whose path matches the pattern.",
          "items": {
            "type": "string"
          },
          "title": "Exclude",
          "type": "array"
        },
        "exclude_rule": {
          "default": [],
          "description": "Skip any rule with the given id.",
          "items": {
            "type": "string"
          },
          "title": "Exclude Rule",
          "type": "array"
        },
        "metrics": {
          "default": "auto",
          "description": "Configures how usage metrics are sent to the Opengrep server.",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "title": "Metrics",
          "type": "string"
        },
        "offline": {
          "default": false,
          "description": "Run in offline mode, using locally cached rules.",
          "title": "Offline",
          "type": "boolean"
        },
        "patterns": {
          "default": [],
          "description": "Patterns to search for with OpenGrep.",
          "items": {
            "type": "string"
          },
          "title": "Patterns",
          "type": "array"
        },
        "severity": {
          "default": [],
          "description": "Report findings only from rules matching the supplied severity level.",
          "items": {
            "enum": [
              "INFO",
              "WARNING",
              "ERROR"
            ],
            "type": "string"
          },
          "title": "Severity",
          "type": "array"
        },
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Minimum severity level to consider findings as failures. This is a scanner-level override of the default severity-level within ASH of MEDIUM.",
          "title": "Severity Threshold"
        },
        "version": {
          "default": "v1.1.5",
          "description": "Version of OpenGrep to use.",
          "title": "Version",
          "type": "string"
        }
      },
      "title": "OpengrepScannerConfigOptions",
      "type": "object"
    },
    "OrganizationalContact": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the object elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "email": {
          "anyOf": [
            {
              "format": "email",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The email address of the contact.",
          "examples": [
            "firstname.lastname@example.com"
          ],
          "title": "Email Address"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of a contact",
          "examples": [
            "Contact name"
          ],
          "title": "Name"
        },
        "phone": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The phone number of the contact.",
          "examples": [
            "800-555-1212"
          ],
          "title": "Phone"
        }
      },
      "title": "OrganizationalContact",
      "type": "object"
    },
    "OrganizationalEntity": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "anyOf": [
            {
              "$ref": "#/$defs/PostalAddress"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The physical address (location) of the organization",
          "title": "Organization Address"
        },
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the object elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "contact": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/OrganizationalContact"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A contact at the organization. Multiple contacts are allowed.",
          "title": "Organizational Contact"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the organization",
          "examples": [
            "Example Inc."
          ],
          "title": "Organization Name"
        },
        "url": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URL of the organization. Multiple URLs are allowed.",
          "examples": [
            "https://example.com"
          ],
          "title": "Organization URL(s)"
        }
      },
      "title": "OrganizationalEntity",
      "type": "object"
    },
    "OutputType": {
      "anyOf": [
        {
          "$ref": "#/$defs/OutputType1"
        },
        {
          "$ref": "#/$defs/OutputType2"
        },
        {
          "$ref": "#/$defs/OutputType3"
        }
      ],
      "title": "OutputType"
    },
    "OutputType1": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Outputs that have the form of data.",
          "title": "Data"
        },
        "environmentVars": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Property"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Outputs that have the form of environment variables.",
          "title": "Environment variables"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resource": {
          "$ref": "#/$defs/ResourceReferenceChoice",
          "description": "A reference to an independent resource generated as output by the task.",
          "examples": [
            "configuration file",
            "source code",
            "scanning service"
          ],
          "title": "Resource"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Component or service that generated or provided the output from the task (e.g., a build tool)",
          "title": "Source"
        },
        "target": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Component or service that received the output from the task (e.g., reference to an artifactory service with data flow value of `outbound`)",
          "examples": [
            "a log file described as an `externalReference` within its target domain."
          ],
          "title": "Target"
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/$defs/Type7"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes the type of data output.",
          "title": "Type"
        }
      },
      "required": [
        "resource"
      ],
      "title": "OutputType1",
      "type": "object"
    },
    "OutputType2": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Outputs that have the form of data.",
          "title": "Data"
        },
        "environmentVars": {
          "description": "Outputs that have the form of environment variables.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/$defs/Property"
              },
              {
                "type": "string"
              }
            ]
          },
          "title": "Environment variables",
          "type": "array"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resource": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to an independent resource generated as output by the task.",
          "examples": [
            "configuration file",
            "source code",
            "scanning service"
          ],
          "title": "Resource"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Component or service that generated or provided the output from the task (e.g., a build tool)",
          "title": "Source"
        },
        "target": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Component or service that received the output from the task (e.g., reference to an artifactory service with data flow value of `outbound`)",
          "examples": [
            "a log file described as an `externalReference` within its target domain."
          ],
          "title": "Target"
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/$defs/Type7"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes the type of data output.",
          "title": "Type"
        }
      },
      "required": [
        "environmentVars"
      ],
      "title": "OutputType2",
      "type": "object"
    },
    "OutputType3": {
      "additionalProperties": false,
      "properties": {
        "data": {
          "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment",
          "description": "Outputs that have the form of data.",
          "title": "Data"
        },
        "environmentVars": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Property"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Outputs that have the form of environment variables.",
          "title": "Environment variables"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resource": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference to an independent resource generated as output by the task.",
          "examples": [
            "configuration file",
            "source code",
            "scanning service"
          ],
          "title": "Resource"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Component or service that generated or provided the output from the task (e.g., a build tool)",
          "title": "Source"
        },
        "target": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResourceReferenceChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Component or service that received the output from the task (e.g., reference to an artifactory service with data flow value of `outbound`)",
          "examples": [
            "a log file described as an `externalReference` within its target domain."
          ],
          "title": "Target"
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/$defs/Type7"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes the type of data output.",
          "title": "Type"
        }
      },
      "required": [
        "data"
      ],
      "title": "OutputType3",
      "type": "object"
    },
    "PackageManager": {
      "enum": [
        "apt",
        "pip",
        "npm",
        "brew",
        "yum",
        "choco",
        "custom",
        "url"
      ],
      "title": "PackageManager",
      "type": "string"
    },
    "Padding": {
      "enum": [
        "pkcs5",
        "pkcs7",
        "pkcs1v15",
        "oaep",
        "raw",
        "other",
        "unknown"
      ],
      "title": "Padding",
      "type": "string"
    },
    "Parameter": {
      "additionalProperties": false,
      "properties": {
        "dataType": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The data type of the parameter.",
          "title": "Data type"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the parameter.",
          "title": "Name"
        },
        "value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The value of the parameter.",
          "title": "Value"
        }
      },
      "title": "Parameter",
      "type": "object"
    },
    "Patch": {
      "additionalProperties": false,
      "properties": {
        "diff": {
          "anyOf": [
            {
              "$ref": "#/$defs/Diff"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The patch file (or diff) that shows changes. Refer to [https://en.wikipedia.org/wiki/Diff](https://en.wikipedia.org/wiki/Diff)",
          "title": "Diff"
        },
        "resolves": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Issue"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A collection of issues the patch resolves",
          "title": "Resolves"
        },
        "type": {
          "$ref": "#/$defs/Type1",
          "description": "Specifies the purpose for the patch including the resolution of defects, security issues, or new behavior or functionality.",
          "title": "Patch Type"
        }
      },
      "required": [
        "type"
      ],
      "title": "Patch",
      "type": "object"
    },
    "Pedigree": {
      "additionalProperties": false,
      "properties": {
        "ancestors": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Component"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.",
          "title": "Ancestors"
        },
        "commits": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Commit"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of zero or more commits which provide a trail describing how the component deviates from an ancestor, descendant, or variant.",
          "title": "Commits"
        },
        "descendants": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Component"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Descendants are the exact opposite of ancestors. This provides a way to document all forks (and their forks) of an original or root component.",
          "title": "Descendants"
        },
        "notes": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Notes, observations, and other non-structured commentary describing the components pedigree.",
          "title": "Notes"
        },
        "patches": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Patch"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": ">A list of zero or more patches describing how the component deviates from an ancestor, descendant, or variant. Patches may be complementary to commits or may be used in place of commits.",
          "title": "Patches"
        },
        "variants": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Component"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Variants describe relations where the relationship between the components is not known. For example, if Component A contains nearly identical code to Component B. They are both related, but it is unclear if one is derived from the other, or if they share a common ancestor.",
          "title": "Variants"
        }
      },
      "title": "Pedigree",
      "type": "object"
    },
    "PerformanceMetric": {
      "additionalProperties": false,
      "properties": {
        "confidenceInterval": {
          "anyOf": [
            {
              "$ref": "#/$defs/ConfidenceInterval"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The confidence interval of the metric.",
          "title": "Confidence Interval"
        },
        "slice": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the slice this metric was computed on. By default, assume this metric is not sliced.",
          "title": "Slice"
        },
        "type": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The type of performance metric.",
          "title": "Type"
        },
        "value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The value of the performance metric.",
          "title": "Value"
        }
      },
      "title": "PerformanceMetric",
      "type": "object"
    },
    "Phase": {
      "enum": [
        "design",
        "pre-build",
        "build",
        "post-build",
        "operations",
        "discovery",
        "decommission"
      ],
      "title": "Phase",
      "type": "string"
    },
    "PhysicalLocation": {
      "anyOf": [
        {
          "$ref": "#/$defs/PhysicalLocation1"
        },
        {
          "$ref": "#/$defs/PhysicalLocation2"
        }
      ],
      "description": "A physical location relevant to a result. Specifies a reference to a programming artifact together with a range of bytes or characters within that artifact.",
      "title": "PhysicalLocation"
    },
    "PhysicalLocation1": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "$ref": "#/$defs/Address",
          "description": "The address of the location."
        },
        "artifactLocation": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The location of the artifact."
        },
        "contextRegion": {
          "anyOf": [
            {
              "$ref": "#/$defs/Region"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies a portion of the artifact that encloses the region. Allows a viewer to display additional context around the region."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the physical location."
        },
        "region": {
          "anyOf": [
            {
              "$ref": "#/$defs/Region"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies a portion of the artifact."
        }
      },
      "required": [
        "address"
      ],
      "title": "PhysicalLocation1",
      "type": "object"
    },
    "PhysicalLocation2": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "anyOf": [
            {
              "$ref": "#/$defs/Address"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The address of the location."
        },
        "artifactLocation": {
          "$ref": "#/$defs/ArtifactLocation",
          "description": "The location of the artifact."
        },
        "contextRegion": {
          "anyOf": [
            {
              "$ref": "#/$defs/Region"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies a portion of the artifact that encloses the region. Allows a viewer to display additional context around the region."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the physical location."
        },
        "region": {
          "anyOf": [
            {
              "$ref": "#/$defs/Region"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies a portion of the artifact."
        }
      },
      "required": [
        "artifactLocation"
      ],
      "title": "PhysicalLocation2",
      "type": "object"
    },
    "PluginContext": {
      "additionalProperties": true,
      "description": "Context container for plugins to ensure consistent path information.",
      "properties": {
        "config": {
          "$ref": "#/$defs/AshConfig",
          "default": null,
          "description": "ASH configuration"
        },
        "ignore_suppressions": {
          "default": false,
          "description": "Ignore all suppression rules",
          "title": "Ignore Suppressions",
          "type": "boolean"
        },
        "output_dir": {
          "description": "Primary output directory for all ASH results",
          "format": "path",
          "title": "Output Dir",
          "type": "string"
        },
        "source_dir": {
          "description": "Source directory to scan",
          "format": "path",
          "title": "Source Dir",
          "type": "string"
        },
        "work_dir": {
          "default": null,
          "description": "Working directory for temporary files",
          "format": "path",
          "title": "Work Dir",
          "type": "string"
        }
      },
      "required": [
        "source_dir",
        "output_dir"
      ],
      "title": "PluginContext",
      "type": "object"
    },
    "PluginDependency": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "package_manager": {
          "$ref": "#/$defs/PackageManager",
          "default": "apt"
        },
        "version": {
          "default": "latest",
          "title": "Version",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "PluginDependency",
      "type": "object"
    },
    "PostalAddress": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the address elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "country": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The country name or the two-letter ISO 3166-1 country code.",
          "title": "Country"
        },
        "locality": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The locality or city within the country.",
          "examples": [
            "Austin"
          ],
          "title": "Locality"
        },
        "postOfficeBoxNumber": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The post office box number.",
          "examples": [
            "901"
          ],
          "title": "Post Office Box Number"
        },
        "postalCode": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The postal code.",
          "examples": [
            "78758"
          ],
          "title": "Postal Code"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The region or state in the country.",
          "examples": [
            "Texas"
          ],
          "title": "Region"
        },
        "streetAddress": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The street address.",
          "examples": [
            "100 Main Street"
          ],
          "title": "Street Address"
        }
      },
      "title": "PostalAddress",
      "type": "object"
    },
    "Primitive": {
      "enum": [
        "drbg",
        "mac",
        "block-cipher",
        "stream-cipher",
        "signature",
        "hash",
        "pke",
        "xof",
        "kdf",
        "key-agree",
        "kem",
        "ae",
        "combiner",
        "other",
        "unknown"
      ],
      "title": "Primitive",
      "type": "string"
    },
    "ProofOfConcept": {
      "properties": {
        "environment": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the environment in which reproduction was possible.",
          "title": "Environment"
        },
        "reproductionSteps": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Precise steps to reproduce the vulnerability.",
          "title": "Steps to Reproduce"
        },
        "supportingMaterial": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Supporting material that helps in reproducing or understanding how reproduction is possible. This may include screenshots, payloads, and PoC exploit code.",
          "title": "Supporting Material"
        }
      },
      "title": "ProofOfConcept",
      "type": "object"
    },
    "Property": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "The name of the property. Duplicate names are allowed, each potentially having a different value.",
          "title": "Name",
          "type": "string"
        },
        "value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The value of the property.",
          "title": "Value"
        }
      },
      "required": [
        "name"
      ],
      "title": "Property",
      "type": "object"
    },
    "PropertyBag": {
      "additionalProperties": true,
      "properties": {
        "tags": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "A set of distinct strings that provide additional information.",
          "title": "Tags"
        }
      },
      "title": "PropertyBag",
      "type": "object"
    },
    "ProtocolProperties": {
      "additionalProperties": false,
      "properties": {
        "cipherSuites": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CipherSuite"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of cipher suites related to the protocol.",
          "title": "Cipher Suites"
        },
        "cryptoRefArray": {
          "anyOf": [
            {
              "$ref": "#/$defs/CryptoRefArray"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of protocol-related cryptographic assets",
          "title": "Cryptographic References"
        },
        "ikev2TransformTypes": {
          "anyOf": [
            {
              "$ref": "#/$defs/Ikev2TransformTypes"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The IKEv2 transform types supported (types 1-4), defined in [RFC 7296 section 3.3.2](https://www.ietf.org/rfc/rfc7296.html#section-3.3.2), and additional properties.",
          "title": "IKEv2 Transform Types"
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/$defs/Type11"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The concrete protocol type.",
          "title": "Type"
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The version of the protocol.",
          "examples": [
            "1.0",
            "1.2",
            "1.99"
          ],
          "title": "Protocol Version"
        }
      },
      "title": "ProtocolProperties",
      "type": "object"
    },
    "PublicKey": {
      "additionalProperties": true,
      "properties": {
        "kty": {
          "$ref": "#/$defs/KeyType"
        }
      },
      "required": [
        "kty"
      ],
      "title": "PublicKey",
      "type": "object"
    },
    "QuantitativeAnalysis": {
      "additionalProperties": false,
      "properties": {
        "graphics": {
          "anyOf": [
            {
              "$ref": "#/$defs/GraphicsCollection"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "performanceMetrics": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/PerformanceMetric"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The model performance metrics being reported. Examples may include accuracy, F1 score, precision, top-3 error rates, MSC, etc.",
          "title": "Performance Metrics"
        }
      },
      "title": "QuantitativeAnalysis",
      "type": "object"
    },
    "Rating": {
      "additionalProperties": false,
      "properties": {
        "justification": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional reason for rating the vulnerability as it was",
          "title": "Justification"
        },
        "method": {
          "anyOf": [
            {
              "$ref": "#/$defs/ScoreMethod"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "score": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The numerical score of the rating.",
          "title": "Score"
        },
        "severity": {
          "anyOf": [
            {
              "$ref": "#/$defs/Severity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Textual representation of the severity that corresponds to the numerical score of the rating."
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/VulnerabilitySource"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The source that calculated the severity or risk rating of the vulnerability."
        },
        "vector": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Textual representation of the metric values used to score the vulnerability",
          "title": "Vector"
        }
      },
      "title": "Rating",
      "type": "object"
    },
    "Rectangle": {
      "additionalProperties": false,
      "properties": {
        "bottom": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Y coordinate of the bottom edge of the rectangle, measured in the image's natural units.",
          "title": "Bottom"
        },
        "left": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The X coordinate of the left edge of the rectangle, measured in the image's natural units.",
          "title": "Left"
        },
        "message": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A message relevant to the rectangle."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the rectangle."
        },
        "right": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The X coordinate of the right edge of the rectangle, measured in the image's natural units.",
          "title": "Right"
        },
        "top": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Y coordinate of the top edge of the rectangle, measured in the image's natural units.",
          "title": "Top"
        }
      },
      "title": "Rectangle",
      "type": "object"
    },
    "RefLinkType": {
      "$ref": "#/$defs/RefType",
      "description": "Descriptor for an element identified by the attribute 'bom-ref' in the same BOM document.\nIn contrast to `bomLinkElementType`.",
      "title": "RefLinkType"
    },
    "RefType": {
      "description": "Identifier for referable and therefore interlinkable elements.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
      "minLength": 1,
      "title": "RefType",
      "type": "string"
    },
    "Reference": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "An identifier that uniquely identifies the vulnerability.",
          "examples": [
            "CVE-2021-39182",
            "GHSA-35m5-8cvj-8783",
            "SNYK-PYTHON-ENROCRYPT-1912876"
          ],
          "title": "ID",
          "type": "string"
        },
        "source": {
          "$ref": "#/$defs/VulnerabilitySource",
          "description": "The source that published the vulnerability."
        }
      },
      "required": [
        "id",
        "source"
      ],
      "title": "Reference",
      "type": "object"
    },
    "Region": {
      "additionalProperties": false,
      "properties": {
        "byteLength": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The length of the region in bytes.",
          "title": "Bytelength"
        },
        "byteOffset": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The zero-based offset from the beginning of the artifact of the first byte in the region.",
          "title": "Byteoffset"
        },
        "charLength": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The length of the region in characters.",
          "title": "Charlength"
        },
        "charOffset": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The zero-based offset from the beginning of the artifact of the first character in the region.",
          "title": "Charoffset"
        },
        "endColumn": {
          "anyOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The column number of the character following the end of the region.",
          "title": "Endcolumn"
        },
        "endLine": {
          "anyOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The line number of the last character in the region.",
          "title": "Endline"
        },
        "message": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A message relevant to the region."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the region."
        },
        "snippet": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactContent"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The portion of the artifact contents within the specified region."
        },
        "sourceLanguage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the source language, if any, of the portion of the artifact specified by the region object.",
          "title": "Sourcelanguage"
        },
        "startColumn": {
          "anyOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The column number of the first character in the region.",
          "title": "Startcolumn"
        },
        "startLine": {
          "anyOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The line number of the first character in the region.",
          "title": "Startline"
        }
      },
      "title": "Region",
      "type": "object"
    },
    "RelatedCryptoMaterialProperties": {
      "additionalProperties": false,
      "properties": {
        "activationDate": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the related cryptographic material was activated.",
          "title": "Activation Date"
        },
        "algorithmRef": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The bom-ref to the algorithm used to generate the related cryptographic material.",
          "title": "Algorithm Reference"
        },
        "creationDate": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the related cryptographic material was created.",
          "title": "Creation Date"
        },
        "expirationDate": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the related cryptographic material expires.",
          "title": "Expiration Date"
        },
        "format": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The format of the related cryptographic material (e.g. P8, PEM, DER).",
          "title": "Format"
        },
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The optional unique identifier for the related cryptographic material.",
          "title": "ID"
        },
        "securedBy": {
          "anyOf": [
            {
              "$ref": "#/$defs/SecuredBy"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The mechanism by which the cryptographic asset is secured by.",
          "title": "Secured By"
        },
        "size": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The size of the cryptographic asset (in bits).",
          "title": "Size"
        },
        "state": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__State"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The key state as defined by NIST SP 800-57.",
          "title": "State"
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/$defs/Type10"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The type for the related cryptographic material",
          "title": "relatedCryptoMaterialType"
        },
        "updateDate": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the related cryptographic material was updated.",
          "title": "Update Date"
        },
        "value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The associated value of the cryptographic material.",
          "title": "Value"
        }
      },
      "title": "RelatedCryptoMaterialProperties",
      "type": "object"
    },
    "ReleaseNotes": {
      "additionalProperties": false,
      "properties": {
        "aliases": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "One or more alternate names the release may be referred to. This may include unofficial terms used by development and marketing teams (e.g. code names).",
          "title": "Aliases"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A short description of the release.",
          "title": "Description"
        },
        "featuredImage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URL to an image that may be prominently displayed with the release note.",
          "title": "Featured image"
        },
        "notes": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Note"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Zero or more release notes containing the locale and content. Multiple note objects may be specified to support release notes in a wide variety of languages.",
          "title": "Notes"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resolves": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Issue"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A collection of issues that have been resolved.",
          "title": "Resolves"
        },
        "socialImage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URL to an image that may be used in messaging on social media platforms.",
          "title": "Social image"
        },
        "tags": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tags"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tags"
        },
        "timestamp": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the release note was created.",
          "title": "Timestamp"
        },
        "title": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The title of the release.",
          "title": "Title"
        },
        "type": {
          "$ref": "#/$defs/ReleaseType",
          "description": "The software versioning type the release note describes.",
          "title": "Type"
        }
      },
      "required": [
        "type"
      ],
      "title": "ReleaseNotes",
      "type": "object"
    },
    "ReleaseType": {
      "description": "The software versioning type. It is recommended that the release type use one of 'major', 'minor', 'patch', 'pre-release', or 'internal'. Representing all possible software release types is not practical, so standardizing on the recommended values, whenever possible, is strongly encouraged.\n\n* __major__ = A major release may contain significant changes or may introduce breaking changes.\n* __minor__ = A minor release, also known as an update, may contain a smaller number of changes than major releases.\n* __patch__ = Patch releases are typically unplanned and may resolve defects or important security issues.\n* __pre-release__ = A pre-release may include alpha, beta, or release candidates and typically have limited support. They provide the ability to preview a release prior to its general availability.\n* __internal__ = Internal releases are not for public consumption and are intended to be used exclusively by the project or manufacturer that produced it.",
      "title": "ReleaseType",
      "type": "string"
    },
    "Replacement": {
      "additionalProperties": false,
      "properties": {
        "deletedRegion": {
          "$ref": "#/$defs/Region",
          "description": "The region of the artifact to delete."
        },
        "insertedContent": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactContent"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The content to insert at the location specified by the 'deletedRegion' property."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the replacement."
        }
      },
      "required": [
        "deletedRegion"
      ],
      "title": "Replacement",
      "type": "object"
    },
    "ReportMetadata": {
      "additionalProperties": true,
      "description": "Metadata for security reports.",
      "properties": {
        "description": {
          "default": null,
          "description": "Description of the tool/scan",
          "minLength": 1,
          "title": "Description",
          "type": "string"
        },
        "generated_at": {
          "default": null,
          "title": "Generated At",
          "type": "string"
        },
        "project_name": {
          "default": null,
          "description": "Name of the project being scanned",
          "minLength": 1,
          "title": "Project Name",
          "type": "string"
        },
        "report_id": {
          "default": null,
          "description": "Unique identifier for the report",
          "minLength": 1,
          "pattern": "^[A-Za-z][\\/\\.\\w-]+$",
          "title": "Report Id",
          "type": "string"
        },
        "summary_stats": {
          "$ref": "#/$defs/SummaryStats",
          "default": {
            "actionable": 0,
            "critical": 0,
            "failed": 0,
            "high": 0,
            "info": 0,
            "low": 0,
            "medium": 0,
            "missing": 0,
            "passed": 0,
            "skipped": 0,
            "suppressed": 0,
            "total": 0
          },
          "description": "Summary statistics (e.g., count by severity)"
        },
        "tool_version": {
          "default": null,
          "description": "Version of the security tool",
          "minLength": 1,
          "title": "Tool Version",
          "type": "string"
        }
      },
      "title": "ReportMetadata",
      "type": "object"
    },
    "ReporterConfigSegment": {
      "additionalProperties": {
        "anyOf": [
          {},
          {
            "$ref": "#/$defs/ReporterPluginConfigBase"
          }
        ]
      },
      "properties": {
        "csv": {
          "$ref": "#/$defs/CSVReporterConfig",
          "default": {
            "enabled": true,
            "extension": "csv",
            "name": "csv",
            "options": {}
          },
          "description": "Configure the options for the CSV reporter"
        },
        "cyclonedx": {
          "$ref": "#/$defs/CycloneDXReporterConfig",
          "default": {
            "enabled": true,
            "extension": "cdx.json",
            "name": "cyclonedx",
            "options": {}
          },
          "description": "Configure the options for the CycloneDX reporter"
        },
        "flat-json": {
          "$ref": "#/$defs/FlatJSONReporterConfig",
          "default": {
            "enabled": true,
            "extension": "flat.json",
            "name": "flat-json",
            "options": {}
          },
          "description": "Configure the options for the Flat JSON reporter"
        },
        "gitlab-sast": {
          "$ref": "#/$defs/GitLabSASTReporterConfig",
          "default": {
            "enabled": true,
            "extension": "gl-sast-report.json",
            "name": "gitlab-sast",
            "options": {}
          },
          "description": "Configure the options for the GitLab SAST reporter"
        },
        "html": {
          "$ref": "#/$defs/HTMLReporterConfig",
          "default": {
            "enabled": true,
            "extension": "html",
            "name": "html",
            "options": {}
          },
          "description": "Configure the options for the HTML reporter"
        },
        "junitxml": {
          "$ref": "#/$defs/JUnitXMLReporterConfig",
          "default": {
            "enabled": true,
            "extension": "junit.xml",
            "name": "junitxml",
            "options": {}
          },
          "description": "Configure the options for the JUnit XML reporter"
        },
        "markdown": {
          "$ref": "#/$defs/MarkdownReporterConfig",
          "default": {
            "enabled": true,
            "extension": "summary.md",
            "name": "markdown",
            "options": {
              "include_detailed_findings": true,
              "include_findings_table": false,
              "include_summary": true,
              "max_detailed_findings": 20,
              "top_hotspots_limit": 10,
              "use_collapsible_details": true
            }
          },
          "description": "Configure the options for the Markdown reporter"
        },
        "ocsf": {
          "$ref": "#/$defs/OCSFReporterConfig",
          "default": {
            "enabled": true,
            "extension": "ocsf.json",
            "name": "ocsf",
            "options": {}
          },
          "description": "Configure the options for the OCSF reporter"
        },
        "sarif": {
          "$ref": "#/$defs/SARIFReporterConfig",
          "default": {
            "enabled": true,
            "extension": "sarif",
            "name": "sarif",
            "options": {}
          },
          "description": "Configure the options for the SARIF reporter"
        },
        "spdx": {
          "$ref": "#/$defs/SPDXReporterConfig",
          "default": {
            "enabled": false,
            "extension": "spdx.json",
            "name": "spdx",
            "options": {}
          },
          "description": "Configure the options for the SPDX reporter"
        },
        "text": {
          "$ref": "#/$defs/TextReporterConfig",
          "default": {
            "enabled": true,
            "extension": "summary.txt",
            "name": "text",
            "options": {
              "include_detailed_findings": false,
              "include_findings_table": false,
              "include_summary": true,
              "max_detailed_findings": 20,
              "top_hotspots_limit": 20
            }
          },
          "description": "Configure the options for the Text reporter"
        },
        "yaml": {
          "$ref": "#/$defs/YAMLReporterConfig",
          "default": {
            "enabled": false,
            "extension": "yaml",
            "name": "yaml",
            "options": {}
          },
          "description": "Configure the options for the YAML reporter"
        }
      },
      "title": "ReporterConfigSegment",
      "type": "object"
    },
    "ReporterOptionsBase": {
      "additionalProperties": true,
      "description": "Base class for reporter options.",
      "properties": {},
      "title": "ReporterOptionsBase",
      "type": "object"
    },
    "ReporterPluginConfigBase": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Whether the component is enabled",
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Extension"
        },
        "name": {
          "default": null,
          "description": "Name of the component using letters, numbers, underscores and hyphens. Must begin with a letter.",
          "minLength": 1,
          "pattern": "^[a-zA-Z][\\w-]+$",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/ReporterOptionsBase",
          "default": {},
          "description": "Reporter options"
        }
      },
      "title": "ReporterPluginConfigBase",
      "type": "object"
    },
    "ReportingConfiguration": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": true,
          "description": "Specifies whether the report may be produced during the scan.",
          "title": "Enabled"
        },
        "level": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__sarif_schema_model__Level"
            },
            {
              "type": "null"
            }
          ],
          "default": "warning",
          "description": "Specifies the failure level for the report."
        },
        "parameters": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Contains configuration information specific to a report."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the reporting configuration."
        },
        "rank": {
          "anyOf": [
            {
              "maximum": 100.0,
              "minimum": -1.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": -1.0,
          "description": "Specifies the relative priority of the report. Used for analysis output only.",
          "title": "Rank"
        }
      },
      "title": "ReportingConfiguration",
      "type": "object"
    },
    "ReportingDescriptor": {
      "additionalProperties": false,
      "properties": {
        "defaultConfiguration": {
          "anyOf": [
            {
              "$ref": "#/$defs/ReportingConfiguration"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Default reporting configuration information."
        },
        "deprecatedGuids": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/DeprecatedGuid"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An array of unique identifies in the form of a GUID by which this report was known in some previous version of the analysis tool.",
          "title": "Deprecatedguids"
        },
        "deprecatedIds": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An array of stable, opaque identifiers by which this report was known in some previous version of the analysis tool.",
          "title": "Deprecatedids"
        },
        "deprecatedNames": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An array of readable identifiers by which this report was known in some previous version of the analysis tool.",
          "title": "Deprecatednames"
        },
        "fullDescription": {
          "anyOf": [
            {
              "$ref": "#/$defs/MultiformatMessageString"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the report. Should, as far as possible, provide details sufficient to enable resolution of any problem indicated by the result."
        },
        "guid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A unique identifer for the reporting descriptor in the form of a GUID.",
          "title": "Guid"
        },
        "help": {
          "anyOf": [
            {
              "$ref": "#/$defs/MultiformatMessageString"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the primary documentation for the report, useful when there is no online documentation."
        },
        "helpUri": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A URI where the primary documentation for the report can be found.",
          "title": "Helpuri"
        },
        "id": {
          "description": "A stable, opaque identifier for the report.",
          "title": "Id",
          "type": "string"
        },
        "messageStrings": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/MultiformatMessageString"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A set of name/value pairs with arbitrary names. Each value is a multiformatMessageString object, which holds message strings in plain text and (optionally) Markdown format. The strings can include placeholders, which can be used to construct a message in combination with an arbitrary number of additional string arguments.",
          "title": "Messagestrings"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A report identifier that is understandable to an end user.",
          "title": "Name"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the report."
        },
        "relationships": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ReportingDescriptorRelationship"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of objects that describe relationships between this reporting descriptor and others.",
          "title": "Relationships"
        },
        "shortDescription": {
          "anyOf": [
            {
              "$ref": "#/$defs/MultiformatMessageString"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A concise description of the report. Should be a single sentence that is understandable when visible space is limited to a single line of text."
        }
      },
      "required": [
        "id"
      ],
      "title": "ReportingDescriptor",
      "type": "object"
    },
    "ReportingDescriptorReference": {
      "anyOf": [
        {
          "$ref": "#/$defs/ReportingDescriptorReference1"
        },
        {
          "$ref": "#/$defs/ReportingDescriptorReference2"
        },
        {
          "$ref": "#/$defs/ReportingDescriptorReference3"
        }
      ],
      "description": "Information about how to locate a relevant reporting descriptor.",
      "title": "ReportingDescriptorReference"
    },
    "ReportingDescriptorReference1": {
      "additionalProperties": false,
      "properties": {
        "guid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A guid that uniquely identifies the descriptor.",
          "title": "Guid"
        },
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The id of the descriptor.",
          "title": "Id"
        },
        "index": {
          "description": "The index into an array of descriptors in toolComponent.ruleDescriptors, toolComponent.notificationDescriptors, or toolComponent.taxonomyDescriptors, depending on context.",
          "minimum": -1,
          "title": "Index",
          "type": "integer"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the reporting descriptor reference."
        },
        "toolComponent": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolComponentReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference used to locate the toolComponent associated with the descriptor."
        }
      },
      "required": [
        "index"
      ],
      "title": "ReportingDescriptorReference1",
      "type": "object"
    },
    "ReportingDescriptorReference2": {
      "additionalProperties": false,
      "properties": {
        "guid": {
          "description": "A guid that uniquely identifies the descriptor.",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
          "title": "Guid",
          "type": "string"
        },
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The id of the descriptor.",
          "title": "Id"
        },
        "index": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index into an array of descriptors in toolComponent.ruleDescriptors, toolComponent.notificationDescriptors, or toolComponent.taxonomyDescriptors, depending on context.",
          "title": "Index"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the reporting descriptor reference."
        },
        "toolComponent": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolComponentReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference used to locate the toolComponent associated with the descriptor."
        }
      },
      "required": [
        "guid"
      ],
      "title": "ReportingDescriptorReference2",
      "type": "object"
    },
    "ReportingDescriptorReference3": {
      "additionalProperties": false,
      "properties": {
        "guid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A guid that uniquely identifies the descriptor.",
          "title": "Guid"
        },
        "id": {
          "description": "The id of the descriptor.",
          "title": "Id",
          "type": "string"
        },
        "index": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index into an array of descriptors in toolComponent.ruleDescriptors, toolComponent.notificationDescriptors, or toolComponent.taxonomyDescriptors, depending on context.",
          "title": "Index"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the reporting descriptor reference."
        },
        "toolComponent": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolComponentReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference used to locate the toolComponent associated with the descriptor."
        }
      },
      "required": [
        "id"
      ],
      "title": "ReportingDescriptorReference3",
      "type": "object"
    },
    "ReportingDescriptorRelationship": {
      "additionalProperties": false,
      "properties": {
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the reporting descriptor relationship."
        },
        "kinds": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [
            "relevant"
          ],
          "description": "A set of distinct strings that categorize the relationship. Well-known kinds include 'canPrecede', 'canFollow', 'willPrecede', 'willFollow', 'superset', 'subset', 'equal', 'disjoint', 'relevant', and 'incomparable'.",
          "title": "Kinds"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the reporting descriptor reference."
        },
        "target": {
          "$ref": "#/$defs/ReportingDescriptorReference",
          "description": "A reference to the related reporting descriptor."
        }
      },
      "required": [
        "target"
      ],
      "title": "ReportingDescriptorRelationship",
      "type": "object"
    },
    "Requirement": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the object elsewhere in the BOM. Every bom-ref must be unique within the BOM.",
          "title": "BOM Reference"
        },
        "descriptions": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The supplemental text that provides additional guidance or context to the requirement, but is not directly part of the requirement.",
          "title": "Descriptions"
        },
        "externalReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalReference"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "External references provide a way to document systems, sites, and information that may be relevant, but are not included with the BOM. They may also establish specific relationships within or external to the BOM.",
          "title": "External References"
        },
        "identifier": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The unique identifier used in the standard to identify a specific requirement. This should match what is in the standard and should not be the requirements bom-ref.",
          "title": "Identifier"
        },
        "openCre": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Common Requirements Enumeration (CRE) identifier(s). CRE is a structured and standardized framework for uniting security standards and guidelines. CRE links each section of a resource to a shared topic identifier (a Common Requirement). Through this shared topic link, all resources map to each other. Use of CRE promotes clear and unambiguous communication among stakeholders.",
          "title": "OWASP OpenCRE Identifier(s)"
        },
        "parent": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefLinkType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The optional `bom-ref` to a parent requirement. This establishes a hierarchy of requirements. Top-level requirements must not define a parent. Only child requirements should define parents.",
          "title": "Parent BOM Reference"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "text": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The textual content of the requirement.",
          "title": "Text"
        },
        "title": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The title of the requirement.",
          "title": "Title"
        }
      },
      "title": "Requirement",
      "type": "object"
    },
    "ResourceReferenceChoice": {
      "anyOf": [
        {
          "$ref": "#/$defs/ResourceReferenceChoice1"
        },
        {
          "$ref": "#/$defs/ResourceReferenceChoice2"
        }
      ],
      "description": "A reference to a locally defined resource (e.g., a bom-ref) or an externally accessible resource.",
      "title": "ResourceReferenceChoice"
    },
    "ResourceReferenceChoice1": {
      "additionalProperties": false,
      "properties": {
        "externalReference": {
          "anyOf": [
            {
              "$ref": "#/$defs/ExternalReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Reference to an externally accessible resource.",
          "title": "External reference"
        },
        "ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefLinkType"
            },
            {
              "$ref": "#/$defs/BomLinkElementType"
            }
          ],
          "description": "References an object by its bom-ref attribute",
          "title": "BOM Reference"
        }
      },
      "required": [
        "ref"
      ],
      "title": "ResourceReferenceChoice1",
      "type": "object"
    },
    "ResourceReferenceChoice2": {
      "additionalProperties": false,
      "properties": {
        "externalReference": {
          "$ref": "#/$defs/ExternalReference",
          "description": "Reference to an externally accessible resource.",
          "title": "External reference"
        },
        "ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefLinkType"
            },
            {
              "$ref": "#/$defs/BomLinkElementType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "References an object by its bom-ref attribute",
          "title": "BOM Reference"
        }
      },
      "required": [
        "externalReference"
      ],
      "title": "ResourceReferenceChoice2",
      "type": "object"
    },
    "ResponseEnum": {
      "enum": [
        "can_not_fix",
        "will_not_fix",
        "update",
        "rollback",
        "workaround_available"
      ],
      "title": "ResponseEnum",
      "type": "string"
    },
    "Result": {
      "additionalProperties": false,
      "properties": {
        "analysisTarget": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Identifies the artifact that the analysis tool was instructed to scan. This need not be the same as the artifact where the result actually occurred."
        },
        "attachments": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/automated_security_helper__schemas__sarif_schema_model__Attachment"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "A set of artifacts relevant to the result.",
          "title": "Attachments"
        },
        "baselineState": {
          "anyOf": [
            {
              "$ref": "#/$defs/BaselineState"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The state of a result relative to a baseline of a previous run."
        },
        "codeFlows": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/CodeFlow"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of 'codeFlow' objects relevant to the result.",
          "title": "Codeflows"
        },
        "correlationGuid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A stable, unique identifier for the equivalence class of logically identical results to which this result belongs, in the form of a GUID.",
          "title": "Correlationguid"
        },
        "fingerprints": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A set of strings each of which individually defines a stable, unique identity for the result.",
          "title": "Fingerprints"
        },
        "fixes": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Fix"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of 'fix' objects, each of which represents a proposed fix to the problem indicated by the result.",
          "title": "Fixes"
        },
        "graphTraversals": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/GraphTraversal"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of one or more unique 'graphTraversal' objects.",
          "title": "Graphtraversals"
        },
        "graphs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Graph"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of zero or more unique graph objects associated with the result.",
          "title": "Graphs"
        },
        "guid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A stable, unique identifer for the result in the form of a GUID.",
          "title": "Guid"
        },
        "hostedViewerUri": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An absolute URI at which the result can be viewed.",
          "title": "Hostedvieweruri"
        },
        "kind": {
          "anyOf": [
            {
              "$ref": "#/$defs/Kind"
            },
            {
              "type": "null"
            }
          ],
          "default": "fail",
          "description": "A value that categorizes results by evaluation state."
        },
        "level": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__sarif_schema_model__Level"
            },
            {
              "type": "null"
            }
          ],
          "default": "error",
          "description": "A value specifying the severity level of the result."
        },
        "locations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Location"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "The set of locations where the result was detected. Specify only one location unless the problem indicated by the result can only be corrected by making a change at every specified location.",
          "title": "Locations"
        },
        "message": {
          "$ref": "#/$defs/Message",
          "description": "A message that describes the result. The first sentence of the message only will be displayed when visible space is limited."
        },
        "occurrenceCount": {
          "anyOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A positive integer specifying the number of times this logically unique result was observed in this run.",
          "title": "Occurrencecount"
        },
        "partialFingerprints": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A set of strings that contribute to the stable, unique identity of the result.",
          "title": "Partialfingerprints"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the result."
        },
        "provenance": {
          "anyOf": [
            {
              "$ref": "#/$defs/ResultProvenance"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Information about how and when the result was detected."
        },
        "rank": {
          "anyOf": [
            {
              "maximum": 100.0,
              "minimum": -1.0,
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": -1.0,
          "description": "A number representing the priority or importance of the result.",
          "title": "Rank"
        },
        "relatedLocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Location"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "A set of locations relevant to this result.",
          "title": "Relatedlocations"
        },
        "rule": {
          "anyOf": [
            {
              "$ref": "#/$defs/ReportingDescriptorReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A reference used to locate the rule descriptor relevant to this result."
        },
        "ruleId": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The stable, unique identifier of the rule, if any, to which this notification is relevant. This member can be used to retrieve rule metadata from the rules dictionary, if it exists.",
          "title": "Ruleid"
        },
        "ruleIndex": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within the tool component rules array of the rule object associated with this result.",
          "title": "Ruleindex"
        },
        "stacks": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Stack"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of 'stack' objects relevant to the result.",
          "title": "Stacks"
        },
        "suppressions": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/automated_security_helper__schemas__sarif_schema_model__Suppression"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A set of suppressions relevant to this result.",
          "title": "Suppressions"
        },
        "taxa": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ReportingDescriptorReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of references to taxonomy reporting descriptors that are applicable to the result.",
          "title": "Taxa"
        },
        "webRequest": {
          "anyOf": [
            {
              "$ref": "#/$defs/WebRequest"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A web request associated with this result."
        },
        "webResponse": {
          "anyOf": [
            {
              "$ref": "#/$defs/WebResponse"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A web response associated with this result."
        },
        "workItemUris": {
          "anyOf": [
            {
              "items": {
                "format": "uri",
                "minLength": 1,
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URIs of the work items associated with this result.",
          "title": "Workitemuris"
        }
      },
      "required": [
        "message"
      ],
      "title": "Result",
      "type": "object"
    },
    "ResultProvenance": {
      "additionalProperties": false,
      "properties": {
        "conversionSources": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/PhysicalLocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of physicalLocation objects which specify the portions of an analysis tool's output that a converter transformed into the result.",
          "title": "Conversionsources"
        },
        "firstDetectionRunGuid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A GUID-valued string equal to the automationDetails.guid property of the run in which the result was first detected.",
          "title": "Firstdetectionrunguid"
        },
        "firstDetectionTimeUtc": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Coordinated Universal Time (UTC) date and time at which the result was first detected. See \"Date/time properties\" in the SARIF spec for the required format.",
          "title": "Firstdetectiontimeutc"
        },
        "invocationIndex": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within the run.invocations array of the invocation object which describes the tool invocation that detected the result.",
          "title": "Invocationindex"
        },
        "lastDetectionRunGuid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A GUID-valued string equal to the automationDetails.guid property of the run in which the result was most recently detected.",
          "title": "Lastdetectionrunguid"
        },
        "lastDetectionTimeUtc": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Coordinated Universal Time (UTC) date and time at which the result was most recently detected. See \"Date/time properties\" in the SARIF spec for the required format.",
          "title": "Lastdetectiontimeutc"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the result."
        }
      },
      "title": "ResultProvenance",
      "type": "object"
    },
    "Risk": {
      "additionalProperties": false,
      "properties": {
        "mitigationStrategy": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Strategy used to address this risk.",
          "title": "Mitigation Strategy"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the risk.",
          "title": "Name"
        }
      },
      "title": "Risk",
      "type": "object"
    },
    "Role": {
      "enum": [
        "analysisTarget",
        "attachment",
        "responseFile",
        "resultFile",
        "standardStream",
        "tracedFile",
        "unmodified",
        "modified",
        "added",
        "deleted",
        "renamed",
        "uncontrolled",
        "driver",
        "extension",
        "translation",
        "taxonomy",
        "policy",
        "referencedOnCommandLine",
        "memoryContents",
        "directory",
        "userSpecifiedConfiguration",
        "toolSpecifiedConfiguration",
        "debugOutputFile"
      ],
      "title": "Role",
      "type": "string"
    },
    "Run": {
      "additionalProperties": false,
      "properties": {
        "addresses": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Address"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Addresses associated with this run instance, if any.",
          "title": "Addresses"
        },
        "artifacts": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Artifact"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An array of artifact objects relevant to the run.",
          "title": "Artifacts"
        },
        "automationDetails": {
          "anyOf": [
            {
              "$ref": "#/$defs/RunAutomationDetails"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Automation details that describe this run."
        },
        "baselineGuid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The 'guid' property of a previous SARIF 'run' that comprises the baseline that was used to compute result 'baselineState' properties for the run.",
          "title": "Baselineguid"
        },
        "columnKind": {
          "anyOf": [
            {
              "$ref": "#/$defs/ColumnKind"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the unit in which the tool measures columns."
        },
        "conversion": {
          "anyOf": [
            {
              "$ref": "#/$defs/Conversion"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A conversion object that describes how a converter transformed an analysis tool's native reporting format into the SARIF format."
        },
        "defaultEncoding": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the default encoding for any artifact object that refers to a text file.",
          "title": "Defaultencoding"
        },
        "defaultSourceLanguage": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the default source language for any artifact object that refers to a text file that contains source code.",
          "title": "Defaultsourcelanguage"
        },
        "externalPropertyFileReferences": {
          "anyOf": [
            {
              "$ref": "#/$defs/ExternalPropertyFileReferences"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "References to external property files that should be inlined with the content of a root log file."
        },
        "graphs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Graph"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of zero or more unique graph objects associated with the run.",
          "title": "Graphs"
        },
        "invocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Invocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Describes the invocation of the analysis tool.",
          "title": "Invocations"
        },
        "language": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z]{2}|^[a-zA-Z]{2}-[a-zA-Z]{2}]?$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "en-US",
          "description": "The language of the messages emitted into the log file during this run (expressed as an ISO 639-1 two-letter lowercase culture code) and an optional region (expressed as an ISO 3166-1 two-letter uppercase subculture code associated with a country or region). The casing is recommended but not required (in order for this data to conform to RFC5646).",
          "title": "Language"
        },
        "logicalLocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/LogicalLocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of logical locations such as namespaces, types or functions.",
          "title": "Logicallocations"
        },
        "newlineSequences": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [
            "\r\n",
            "\n"
          ],
          "description": "An ordered list of character sequences that were treated as line breaks when computing region information for the run.",
          "title": "Newlinesequences"
        },
        "originalUriBaseIds": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/ArtifactLocation"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The artifact location specified by each uriBaseId symbol on the machine where the tool originally ran.",
          "title": "Originaluribaseids"
        },
        "policies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolComponent"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Contains configurations that may potentially override both reportingDescriptor.defaultConfiguration (the tool's default severities) and invocation.configurationOverrides (severities established at run-time from the command line).",
          "title": "Policies"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the run."
        },
        "redactionTokens": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of strings used to replace sensitive information in a redaction-aware property.",
          "title": "Redactiontokens"
        },
        "results": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Result"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The set of results contained in an SARIF log. The results array can be omitted when a run is solely exporting rules metadata. It must be present (but may be empty) if a log file represents an actual scan.",
          "title": "Results"
        },
        "runAggregates": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RunAutomationDetails"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Automation details that describe the aggregate of runs to which this run belongs.",
          "title": "Runaggregates"
        },
        "specialLocations": {
          "anyOf": [
            {
              "$ref": "#/$defs/SpecialLocations"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A specialLocations object that defines locations of special significance to SARIF consumers."
        },
        "taxonomies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolComponent"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of toolComponent objects relevant to a taxonomy in which results are categorized.",
          "title": "Taxonomies"
        },
        "threadFlowLocations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ThreadFlowLocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of threadFlowLocation objects cached at run level.",
          "title": "Threadflowlocations"
        },
        "tool": {
          "$ref": "#/$defs/automated_security_helper__schemas__sarif_schema_model__Tool",
          "description": "Information about the tool or tool pipeline that generated the results in this run. A run can only contain results produced by a single tool or tool pipeline. A run can aggregate results from multiple log files, as long as context around the tool run (tool command-line arguments and the like) is identical for all aggregated files."
        },
        "translations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolComponent"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "The set of available translations of the localized data provided by the tool.",
          "title": "Translations"
        },
        "versionControlProvenance": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/VersionControlDetails"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Specifies the revision in version control of the artifacts that were scanned.",
          "title": "Versioncontrolprovenance"
        },
        "webRequests": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/WebRequest"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of request objects cached at run level.",
          "title": "Webrequests"
        },
        "webResponses": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/WebResponse"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of response objects cached at run level.",
          "title": "Webresponses"
        }
      },
      "required": [
        "tool"
      ],
      "title": "Run",
      "type": "object"
    },
    "RunAutomationDetails": {
      "additionalProperties": false,
      "properties": {
        "correlationGuid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A stable, unique identifier for the equivalence class of runs to which this object's containing run object belongs in the form of a GUID.",
          "title": "Correlationguid"
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the identity and role played within the engineering system by this object's containing run object."
        },
        "guid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A stable, unique identifer for this object's containing run object in the form of a GUID.",
          "title": "Guid"
        },
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A hierarchical string that uniquely identifies this object's containing run object.",
          "title": "Id"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the run automation details."
        }
      },
      "title": "RunAutomationDetails",
      "type": "object"
    },
    "SARIFReporterConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "sarif",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "sarif",
          "default": "sarif",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/SARIFReporterConfigOptions",
          "default": {}
        }
      },
      "title": "SARIFReporterConfig",
      "type": "object"
    },
    "SARIFReporterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "SARIFReporterConfigOptions",
      "type": "object"
    },
    "SPDXReporterConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "spdx.json",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "spdx",
          "default": "spdx",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/SPDXReporterConfigOptions",
          "default": {}
        }
      },
      "title": "SPDXReporterConfig",
      "type": "object"
    },
    "SPDXReporterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "SPDXReporterConfigOptions",
      "type": "object"
    },
    "SarifReport": {
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "default": "https://json.schemastore.org/sarif-2.1.0.json",
          "description": "The URI of the JSON schema corresponding to the version.",
          "title": "$Schema",
          "type": "string"
        },
        "inlineExternalProperties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalProperties"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "description": "References to external property files that share data between runs.",
          "title": "Inlineexternalproperties"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "description": "Key/value pairs that provide additional information about the log file."
        },
        "runs": {
          "description": "The set of runs contained in this log file.",
          "items": {
            "$ref": "#/$defs/Run"
          },
          "minItems": 0,
          "title": "Runs",
          "type": "array"
        },
        "version": {
          "const": "2.1.0",
          "default": "2.1.0",
          "description": "The SARIF format version of this log file.",
          "title": "Version",
          "type": "string"
        }
      },
      "title": "SarifReport",
      "type": "object"
    },
    "ScannerConfigSegment": {
      "additionalProperties": {
        "anyOf": [
          {},
          {
            "$ref": "#/$defs/ScannerPluginConfigBase"
          }
        ]
      },
      "properties": {
        "bandit": {
          "$ref": "#/$defs/BanditScannerConfig",
          "default": {
            "enabled": true,
            "name": "bandit",
            "options": {
              "additional_formats": [],
              "confidence_level": "all",
              "config_file": null,
              "excluded_paths": [],
              "ignore_nosec": false,
              "severity_threshold": null
            }
          },
          "description": "Configure the options for Bandit"
        },
        "cdk-nag": {
          "$ref": "#/$defs/CdkNagScannerConfig",
          "default": {
            "enabled": true,
            "name": "cdk-nag",
            "options": {
              "nag_packs": {
                "AwsSolutionsChecks": true,
                "HIPAASecurityChecks": false,
                "NIST80053R4Checks": false,
                "NIST80053R5Checks": false,
                "PCIDSS321Checks": false
              },
              "severity_threshold": null
            }
          },
          "description": "Configure the options for CdkNag"
        },
        "cfn-nag": {
          "$ref": "#/$defs/CfnNagScannerConfig",
          "default": {
            "enabled": true,
            "name": "cfn-nag",
            "options": {
              "severity_threshold": null
            }
          },
          "description": "Configure the options for CfnNag"
        },
        "checkov": {
          "$ref": "#/$defs/CheckovScannerConfig",
          "default": {
            "enabled": true,
            "name": "checkov",
            "options": {
              "additional_formats": [
                "cyclonedx_json"
              ],
              "config_file": null,
              "frameworks": [
                "all"
              ],
              "offline": false,
              "severity_threshold": null,
              "skip_frameworks": [],
              "skip_path": []
            }
          },
          "description": "Configure the options for Checkov"
        },
        "detect-secrets": {
          "$ref": "#/$defs/DetectSecretsScannerConfig",
          "default": {
            "enabled": true,
            "name": "detect-secrets",
            "options": {
              "baseline_file": null,
              "scan_settings": {
                "filters_used": [],
                "generated_at": null,
                "plugins_used": [],
                "results": {},
                "version": null
              },
              "severity_threshold": null
            }
          },
          "description": "Configure the options for DetectSecrets"
        },
        "grype": {
          "$ref": "#/$defs/GrypeScannerConfig",
          "default": {
            "enabled": true,
            "name": "grype",
            "options": {
              "config_file": null,
              "offline": false,
              "severity_threshold": null
            }
          },
          "description": "Configure the options for Grype"
        },
        "npm-audit": {
          "$ref": "#/$defs/NpmAuditScannerConfig",
          "default": {
            "enabled": true,
            "name": "npm-audit",
            "options": {
              "offline": false,
              "severity_threshold": null
            }
          },
          "description": "Configure the options for NpmAudit"
        },
        "opengrep": {
          "$ref": "#/$defs/OpengrepScannerConfig",
          "default": {
            "enabled": false,
            "name": "opengrep",
            "options": {
              "config": "auto",
              "exclude": [
                "*-converted.py",
                "*_report_result.txt"
              ],
              "exclude_rule": [],
              "metrics": "auto",
              "offline": false,
              "patterns": [],
              "severity": [],
              "severity_threshold": null,
              "version": "v1.1.5"
            }
          },
          "description": "Configure the options for Opengrep"
        },
        "semgrep": {
          "$ref": "#/$defs/SemgrepScannerConfig",
          "default": {
            "enabled": true,
            "name": "semgrep",
            "options": {
              "config": "auto",
              "exclude": [
                "*-converted.py",
                "*_report_result.txt"
              ],
              "exclude_rule": [],
              "metrics": "auto",
              "offline": false,
              "severity": [],
              "severity_threshold": null
            }
          },
          "description": "Configure the options for Semgrep"
        },
        "syft": {
          "$ref": "#/$defs/SyftScannerConfig",
          "default": {
            "enabled": true,
            "name": "syft",
            "options": {
              "additional_outputs": [
                "syft-table"
              ],
              "config_file": null,
              "exclude": [],
              "severity_threshold": null
            }
          },
          "description": "Configure the options for Syft"
        }
      },
      "title": "ScannerConfigSegment",
      "type": "object"
    },
    "ScannerOptionsBase": {
      "additionalProperties": true,
      "description": "Base class for scanner options.",
      "properties": {
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Minimum severity level to consider findings as failures. This is a scanner-level override of the default severity-level within ASH of MEDIUM.",
          "title": "Severity Threshold"
        }
      },
      "title": "ScannerOptionsBase",
      "type": "object"
    },
    "ScannerPluginBase": {
      "additionalProperties": true,
      "description": "Base class for all scanner plugins.\n\nPlugin implementations",
      "properties": {
        "args": {
          "$ref": "#/$defs/ToolArgs",
          "default": {
            "extra_args": [],
            "format_arg": null,
            "format_arg_value": null,
            "output_arg": null,
            "scan_path_arg": null
          },
          "description": "Specialized arguments to pass to the scanner command. Includes an `extra_args` field which accepts a dictionary of arbitrary arguments to pass to the scanner. These are not configurable at scan time."
        },
        "command": {
          "default": null,
          "description": "The command to invoke the scanner, typically the binary or path to a script",
          "title": "Command",
          "type": "string"
        },
        "config": {
          "anyOf": [
            {
              "$ref": "#/$defs/ScannerPluginConfigBase"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Config"
        },
        "context": {
          "anyOf": [
            {
              "$ref": "#/$defs/PluginContext"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        },
        "custom_install_commands": {
          "additionalProperties": {
            "additionalProperties": {
              "items": {
                "$ref": "#/$defs/CustomCommand"
              },
              "type": "array"
            },
            "type": "object"
          },
          "default": {},
          "description": "Custom installation commands by platform and architecture",
          "title": "Custom Install Commands",
          "type": "object"
        },
        "dependencies": {
          "additionalProperties": {
            "additionalProperties": {
              "items": {
                "$ref": "#/$defs/PluginDependency"
              },
              "type": "array"
            },
            "type": "object"
          },
          "default": {},
          "description": "Dependencies by platform and architecture",
          "title": "Dependencies",
          "type": "object"
        },
        "dependencies_satisfied": {
          "default": false,
          "title": "Dependencies Satisfied",
          "type": "boolean"
        },
        "end_time": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "End Time"
        },
        "errors": {
          "default": [],
          "items": {
            "type": "string"
          },
          "title": "Errors",
          "type": "array"
        },
        "exit_code": {
          "default": 0,
          "title": "Exit Code",
          "type": "integer"
        },
        "output": {
          "default": [],
          "items": {
            "type": "string"
          },
          "title": "Output",
          "type": "array"
        },
        "results_dir": {
          "anyOf": [
            {
              "format": "path",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Results Dir"
        },
        "results_file": {
          "anyOf": [
            {
              "format": "path",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The path to the results file, if any. This is set by the scanner plugin after the scan is complete.",
          "title": "Results File"
        },
        "start_time": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Start Time"
        },
        "subcommands": {
          "default": [],
          "description": "Subcommands to include when invoking the scanner, e.g. ['scan'] is needed as the subcommand for 'semgrep' as Semgrep supports multiple subcommands, but we are specifically interested in running a scan.",
          "items": {
            "type": "string"
          },
          "title": "Subcommands",
          "type": "array"
        },
        "tool_description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tool Description"
        },
        "tool_type": {
          "$ref": "#/$defs/ScannerToolType",
          "default": "UNKNOWN"
        },
        "tool_version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tool Version"
        }
      },
      "title": "ScannerPluginBase",
      "type": "object"
    },
    "ScannerPluginConfigBase": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "description": "Whether the component is enabled",
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "default": null,
          "description": "Name of the component using letters, numbers, underscores and hyphens. Must begin with a letter.",
          "minLength": 1,
          "pattern": "^[a-zA-Z][\\w-]+$",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/ScannerOptionsBase",
          "default": {
            "severity_threshold": null
          },
          "description": "Scanner options"
        }
      },
      "title": "ScannerPluginConfigBase",
      "type": "object"
    },
    "ScannerSeverityCount": {
      "additionalProperties": true,
      "description": "Information about scanner status.",
      "properties": {
        "critical": {
          "default": 0,
          "title": "Critical",
          "type": "integer"
        },
        "high": {
          "default": 0,
          "title": "High",
          "type": "integer"
        },
        "info": {
          "default": 0,
          "title": "Info",
          "type": "integer"
        },
        "low": {
          "default": 0,
          "title": "Low",
          "type": "integer"
        },
        "medium": {
          "default": 0,
          "title": "Medium",
          "type": "integer"
        },
        "suppressed": {
          "default": 0,
          "title": "Suppressed",
          "type": "integer"
        }
      },
      "title": "ScannerSeverityCount",
      "type": "object"
    },
    "ScannerStatus": {
      "description": "Status of a scanner execution.",
      "enum": [
        "PASSED",
        "FAILED",
        "MISSING",
        "SKIPPED"
      ],
      "title": "ScannerStatus",
      "type": "string"
    },
    "ScannerStatusInfo": {
      "additionalProperties": true,
      "description": "Information about scanner status.",
      "properties": {
        "converted": {
          "$ref": "#/$defs/ScannerTargetStatusInfo",
          "default": {
            "actionable_finding_count": 0,
            "dependencies_satisfied": true,
            "duration": 0.0,
            "excluded": false,
            "exit_code": 0,
            "finding_count": 0,
            "severity_counts": {
              "critical": 0,
              "high": 0,
              "info": 0,
              "low": 0,
              "medium": 0,
              "suppressed": 0
            },
            "status": "PASSED",
            "suppressed_finding_count": 0
          }
        },
        "dependencies_satisfied": {
          "default": true,
          "title": "Dependencies Satisfied",
          "type": "boolean"
        },
        "excluded": {
          "default": false,
          "title": "Excluded",
          "type": "boolean"
        },
        "severity_threshold": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Severity Threshold"
        },
        "source": {
          "$ref": "#/$defs/ScannerTargetStatusInfo",
          "default": {
            "actionable_finding_count": 0,
            "dependencies_satisfied": true,
            "duration": 0.0,
            "excluded": false,
            "exit_code": 0,
            "finding_count": 0,
            "severity_counts": {
              "critical": 0,
              "high": 0,
              "info": 0,
              "low": 0,
              "medium": 0,
              "suppressed": 0
            },
            "status": "PASSED",
            "suppressed_finding_count": 0
          }
        },
        "status": {
          "anyOf": [
            {
              "$ref": "#/$defs/ScannerStatus"
            },
            {
              "type": "null"
            }
          ],
          "default": null
        }
      },
      "title": "ScannerStatusInfo",
      "type": "object"
    },
    "ScannerTargetStatusInfo": {
      "additionalProperties": true,
      "description": "Information about scanner status.",
      "properties": {
        "actionable_finding_count": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 0,
          "title": "Actionable Finding Count"
        },
        "dependencies_satisfied": {
          "default": true,
          "title": "Dependencies Satisfied",
          "type": "boolean"
        },
        "duration": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": 0.0,
          "title": "Duration"
        },
        "excluded": {
          "default": false,
          "title": "Excluded",
          "type": "boolean"
        },
        "exit_code": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 0,
          "title": "Exit Code"
        },
        "finding_count": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 0,
          "title": "Finding Count"
        },
        "severity_counts": {
          "$ref": "#/$defs/ScannerSeverityCount",
          "default": {
            "critical": 0,
            "high": 0,
            "info": 0,
            "low": 0,
            "medium": 0,
            "suppressed": 0
          }
        },
        "status": {
          "$ref": "#/$defs/ScannerStatus",
          "default": "PASSED"
        },
        "suppressed_finding_count": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 0,
          "title": "Suppressed Finding Count"
        }
      },
      "title": "ScannerTargetStatusInfo",
      "type": "object"
    },
    "ScannerToolType": {
      "description": "Type of scanner tool.",
      "enum": [
        "SAST",
        "DAST",
        "SCA",
        "IAC",
        "SECRETS",
        "CONTAINER",
        "SBOM",
        "CUSTOM",
        "UNKNOWN"
      ],
      "title": "ScannerToolType",
      "type": "string"
    },
    "Scope": {
      "enum": [
        "required",
        "optional",
        "excluded"
      ],
      "title": "Scope",
      "type": "string"
    },
    "ScoreMethod": {
      "enum": [
        "CVSSv2",
        "CVSSv3",
        "CVSSv31",
        "CVSSv4",
        "OWASP",
        "SSVC",
        "other"
      ],
      "title": "ScoreMethod",
      "type": "string"
    },
    "SecuredBy": {
      "additionalProperties": false,
      "properties": {
        "algorithmRef": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The bom-ref to the algorithm.",
          "title": "Algorithm Reference"
        },
        "mechanism": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the mechanism by which the cryptographic asset is secured by.",
          "examples": [
            "HSM",
            "TPM",
            "SGX",
            "Software",
            "None"
          ],
          "title": "Mechanism"
        }
      },
      "title": "SecuredBy",
      "type": "object"
    },
    "SemgrepScannerConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "semgrep",
          "default": "semgrep",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/SemgrepScannerConfigOptions",
          "default": {
            "config": "auto",
            "exclude": [
              "*-converted.py",
              "*_report_result.txt"
            ],
            "exclude_rule": [],
            "metrics": "auto",
            "offline": false,
            "severity": [],
            "severity_threshold": null
          },
          "description": "Configure Semgrep scanner"
        }
      },
      "title": "SemgrepScannerConfig",
      "type": "object"
    },
    "SemgrepScannerConfigOptions": {
      "additionalProperties": true,
      "properties": {
        "config": {
          "default": "auto",
          "description": "YAML configuration file, directory of YAML files ending in .yml|.yaml, URL of a configuration file, or Semgrep registry entry name. Use 'auto' to automatically obtain rules tailored to this project. Defaults to 'auto'.",
          "title": "Config",
          "type": "string"
        },
        "exclude": {
          "default": [
            "*-converted.py",
            "*_report_result.txt"
          ],
          "description": "Skip any file or directory whose path matches the pattern.",
          "items": {
            "type": "string"
          },
          "title": "Exclude",
          "type": "array"
        },
        "exclude_rule": {
          "default": [],
          "description": "Skip any rule with the given id.",
          "items": {
            "type": "string"
          },
          "title": "Exclude Rule",
          "type": "array"
        },
        "metrics": {
          "default": "auto",
          "description": "Configures how usage metrics are sent to the Semgrep server.",
          "enum": [
            "auto",
            "on",
            "off"
          ],
          "title": "Metrics",
          "type": "string"
        },
        "offline": {
          "default": false,
          "description": "Run in offline mode, using locally cached rules.",
          "title": "Offline",
          "type": "boolean"
        },
        "severity": {
          "default": [],
          "description": "Report findings only from rules matching the supplied severity level.",
          "items": {
            "enum": [
              "INFO",
              "WARNING",
              "ERROR"
            ],
            "type": "string"
          },
          "title": "Severity",
          "type": "array"
        },
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Minimum severity level to consider findings as failures. This is a scanner-level override of the default severity-level within ASH of MEDIUM.",
          "title": "Severity Threshold"
        }
      },
      "title": "SemgrepScannerConfigOptions",
      "type": "object"
    },
    "Service": {
      "additionalProperties": false,
      "properties": {
        "authenticated": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication.",
          "title": "Authentication Required"
        },
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "data": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ServiceData"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies information about the data including the directional flow of data and the data classification.",
          "title": "Data"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies a description for the service",
          "title": "Service Description"
        },
        "endpoints": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The endpoint URIs of the service. Multiple endpoints are allowed.",
          "examples": [
            "https://example.com/api/v1/ticker"
          ],
          "title": "Endpoints"
        },
        "externalReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalReference"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "External references provide a way to document systems, sites, and information that may be relevant but are not included with the BOM. They may also establish specific relationships within or external to the BOM.",
          "title": "External References"
        },
        "group": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.",
          "examples": [
            "com.acme"
          ],
          "title": "Service Group"
        },
        "licenses": {
          "anyOf": [
            {
              "$ref": "#/$defs/LicenseChoice"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Service License(s)"
        },
        "name": {
          "description": "The name of the service. This will often be a shortened, single name of the service.",
          "examples": [
            "ticker-service"
          ],
          "title": "Service Name",
          "type": "string"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "provider": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The organization that provides the service.",
          "title": "Provider"
        },
        "releaseNotes": {
          "anyOf": [
            {
              "$ref": "#/$defs/ReleaseNotes"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies optional release notes.",
          "title": "Release notes"
        },
        "services": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Service"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of services included or deployed behind the parent service. This is not a dependency tree. It provides a way to specify a hierarchical representation of service assemblies.",
          "title": "Services"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        },
        "tags": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tags"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tags"
        },
        "trustZone": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the trust zone the service resides in.",
          "title": "Trust Zone"
        },
        "version": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Version"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The service version.",
          "title": "Service Version"
        },
        "x-trust-boundary": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed.",
          "title": "Crosses Trust Boundary"
        }
      },
      "required": [
        "name"
      ],
      "title": "Service",
      "type": "object"
    },
    "ServiceData": {
      "additionalProperties": false,
      "properties": {
        "classification": {
          "$ref": "#/$defs/DataClassification"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Short description of the data content and usage",
          "examples": [
            "Credit card information being exchanged in between the web app and the database"
          ],
          "title": "Description"
        },
        "destination": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/BomLinkElementType"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URI, URL, or BOM-Link of the components or services the data is sent to",
          "title": "Destination"
        },
        "flow": {
          "$ref": "#/$defs/DataFlowDirection",
          "description": "Specifies the flow direction of the data. Direction is relative to the service. Inbound flow states that data enters the service. Outbound flow states that data leaves the service. Bi-directional states that data flows both ways and unknown states that the direction is not known.",
          "title": "Directional Flow"
        },
        "governance": {
          "anyOf": [
            {
              "$ref": "#/$defs/DataGovernance"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Data Governance"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Name for the defined data",
          "examples": [
            "Credit card reporting"
          ],
          "title": "Name"
        },
        "source": {
          "anyOf": [
            {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/$defs/BomLinkElementType"
                  }
                ]
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URI, URL, or BOM-Link of the components or services the data came in from",
          "title": "Source"
        }
      },
      "required": [
        "flow",
        "classification"
      ],
      "title": "ServiceData",
      "type": "object"
    },
    "Severity": {
      "enum": [
        "critical",
        "high",
        "medium",
        "low",
        "info",
        "none",
        "unknown"
      ],
      "title": "Severity",
      "type": "string"
    },
    "Signatories": {
      "additionalProperties": false,
      "properties": {
        "externalReference": {
          "anyOf": [
            {
              "$ref": "#/$defs/ExternalReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "External references provide a way to document systems, sites, and information that may be relevant but are not included with the BOM. They may also establish specific relationships within or external to the BOM.",
          "title": "External Reference"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The signatory's name.",
          "title": "Name"
        },
        "organization": {
          "anyOf": [
            {
              "$ref": "#/$defs/OrganizationalEntity"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The signatory's organization.",
          "title": "Organization"
        },
        "role": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The signatory's role within an organization.",
          "title": "Role"
        },
        "signature": {
          "$ref": "#/$defs/Signature",
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html)."
        }
      },
      "required": [
        "signature"
      ],
      "title": "Signatories",
      "type": "object"
    },
    "Signatories1": {
      "additionalProperties": false,
      "properties": {
        "externalReference": {
          "$ref": "#/$defs/ExternalReference",
          "description": "External references provide a way to document systems, sites, and information that may be relevant but are not included with the BOM. They may also establish specific relationships within or external to the BOM.",
          "title": "External Reference"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The signatory's name.",
          "title": "Name"
        },
        "organization": {
          "$ref": "#/$defs/OrganizationalEntity",
          "description": "The signatory's organization.",
          "title": "Organization"
        },
        "role": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The signatory's role within an organization.",
          "title": "Role"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        }
      },
      "required": [
        "organization",
        "externalReference"
      ],
      "title": "Signatories1",
      "type": "object"
    },
    "Signature": {
      "anyOf": [
        {
          "$ref": "#/$defs/Signature1"
        },
        {
          "$ref": "#/$defs/Signature2"
        },
        {
          "$ref": "#/$defs/Signer"
        }
      ],
      "title": "Signature"
    },
    "Signature1": {
      "additionalProperties": false,
      "properties": {
        "signers": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Signer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Unique top level property for Multiple Signatures. (multisignature)",
          "title": "Signature"
        }
      },
      "title": "Signature1",
      "type": "object"
    },
    "Signature2": {
      "additionalProperties": false,
      "properties": {
        "chain": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Signer"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Unique top level property for Signature Chains. (signaturechain)",
          "title": "Signature"
        }
      },
      "title": "Signature2",
      "type": "object"
    },
    "Signer": {
      "additionalProperties": false,
      "properties": {
        "algorithm": {
          "anyOf": [
            {
              "$ref": "#/$defs/Algorithm"
            },
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            }
          ],
          "title": "Algorithm"
        },
        "certificatePath": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional. Sorted array of X.509 [RFC5280] certificates, where the first element must contain the signature certificate. The certificate path must be contiguous but is not required to be complete.",
          "title": "Certificate path"
        },
        "excludes": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional. Array holding the names of one or more application level properties that must be excluded from the signature process. Note that the \"excludes\" property itself, must also be excluded from the signature process. Since both the \"excludes\" property and the associated data it points to are unsigned, a conforming JSF implementation must provide options for specifying which properties to accept.",
          "title": "Excludes"
        },
        "keyId": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional. Application specific string identifying the signature key.",
          "title": "Key ID"
        },
        "publicKey": {
          "anyOf": [
            {
              "$ref": "#/$defs/PublicKey"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Optional. Public key object.",
          "title": "Public key"
        },
        "value": {
          "description": "The signature data. Note that the binary representation must follow the JWA [RFC7518] specifications.",
          "title": "Signature",
          "type": "string"
        }
      },
      "required": [
        "algorithm",
        "value"
      ],
      "title": "Signer",
      "type": "object"
    },
    "Source": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the source.",
          "examples": [
            "National Vulnerability Database",
            "NVD",
            "Apache"
          ],
          "title": "Name"
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The url of the issue documentation as provided by the source",
          "title": "URL"
        }
      },
      "title": "Source",
      "type": "object"
    },
    "SpecialLocations": {
      "additionalProperties": false,
      "properties": {
        "displayBase": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides a suggestion to SARIF consumers to display file paths relative to the specified location."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the special locations."
        }
      },
      "title": "SpecialLocations",
      "type": "object"
    },
    "Stack": {
      "additionalProperties": false,
      "properties": {
        "frames": {
          "description": "An array of stack frames that represents a sequence of calls, rendered in reverse chronological order, that comprise the call stack.",
          "items": {
            "$ref": "#/$defs/StackFrame"
          },
          "minItems": 0,
          "title": "Frames",
          "type": "array"
        },
        "message": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A message relevant to this call stack."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the stack."
        }
      },
      "required": [
        "frames"
      ],
      "title": "Stack",
      "type": "object"
    },
    "StackFrame": {
      "additionalProperties": false,
      "properties": {
        "location": {
          "anyOf": [
            {
              "$ref": "#/$defs/Location"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The location to which this stack frame refers."
        },
        "module": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the module that contains the code of this stack frame.",
          "title": "Module"
        },
        "parameters": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "The parameters of the call that is executing.",
          "title": "Parameters"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the stack frame."
        },
        "threadId": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The thread identifier of the stack frame.",
          "title": "Threadid"
        }
      },
      "title": "StackFrame",
      "type": "object"
    },
    "Standard": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the object elsewhere in the BOM. Every bom-ref must be unique within the BOM.",
          "title": "BOM Reference"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The description of the standard.",
          "title": "Description"
        },
        "externalReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalReference"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "External references provide a way to document systems, sites, and information that may be relevant but are not included with the BOM. They may also establish specific relationships within or external to the BOM.",
          "title": "External References"
        },
        "levels": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Level"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of levels associated with the standard. Some standards have different levels of compliance.",
          "title": "Levels"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the standard. This will often be a shortened, single name of the standard.",
          "title": "Name"
        },
        "owner": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The owner of the standard, often the entity responsible for its release.",
          "title": "Owner"
        },
        "requirements": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Requirement"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of requirements comprising the standard.",
          "title": "Requirements"
        },
        "signature": {
          "anyOf": [
            {
              "$ref": "#/$defs/Signature"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html).",
          "title": "Signature"
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The version of the standard.",
          "title": "Version"
        }
      },
      "title": "Standard",
      "type": "object"
    },
    "Step": {
      "additionalProperties": false,
      "properties": {
        "commands": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Command"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Ordered list of commands or directives for the step",
          "title": "Commands"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the step.",
          "title": "Description"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A name for the step.",
          "title": "Name"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        }
      },
      "title": "Step",
      "type": "object"
    },
    "SummaryStats": {
      "additionalProperties": true,
      "description": "Summary statistics for the final report",
      "properties": {
        "actionable": {
          "default": 0,
          "title": "Actionable",
          "type": "integer"
        },
        "critical": {
          "default": 0,
          "title": "Critical",
          "type": "integer"
        },
        "failed": {
          "default": 0,
          "title": "Failed",
          "type": "integer"
        },
        "high": {
          "default": 0,
          "title": "High",
          "type": "integer"
        },
        "info": {
          "default": 0,
          "title": "Info",
          "type": "integer"
        },
        "low": {
          "default": 0,
          "title": "Low",
          "type": "integer"
        },
        "medium": {
          "default": 0,
          "title": "Medium",
          "type": "integer"
        },
        "missing": {
          "default": 0,
          "title": "Missing",
          "type": "integer"
        },
        "passed": {
          "default": 0,
          "title": "Passed",
          "type": "integer"
        },
        "skipped": {
          "default": 0,
          "title": "Skipped",
          "type": "integer"
        },
        "suppressed": {
          "default": 0,
          "title": "Suppressed",
          "type": "integer"
        },
        "total": {
          "default": 0,
          "title": "Total",
          "type": "integer"
        }
      },
      "title": "SummaryStats",
      "type": "object"
    },
    "Swid": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "Maps to the name of a SoftwareIdentity.",
          "title": "Name",
          "type": "string"
        },
        "patch": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "Maps to the patch of a SoftwareIdentity.",
          "title": "Patch"
        },
        "tagId": {
          "description": "Maps to the tagId of a SoftwareIdentity.",
          "title": "Tag ID",
          "type": "string"
        },
        "tagVersion": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": 0,
          "description": "Maps to the tagVersion of a SoftwareIdentity.",
          "title": "Tag Version"
        },
        "text": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the metadata and content of the SWID tag.",
          "title": "Attachment text"
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The URL to the SWID file.",
          "title": "URL"
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "0.0",
          "description": "Maps to the version of a SoftwareIdentity.",
          "title": "Version"
        }
      },
      "required": [
        "tagId",
        "name"
      ],
      "title": "Swid",
      "type": "object"
    },
    "SyftScannerConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "name": {
          "const": "syft",
          "default": "syft",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/SyftScannerConfigOptions",
          "default": {
            "additional_outputs": [
              "syft-table"
            ],
            "config_file": null,
            "exclude": [],
            "severity_threshold": null
          },
          "description": "Configure Syft scanner"
        }
      },
      "title": "SyftScannerConfig",
      "type": "object"
    },
    "SyftScannerConfigOptions": {
      "additionalProperties": true,
      "properties": {
        "additional_outputs": {
          "default": [
            "syft-table"
          ],
          "description": "List of additional formats to output. Defaults to syft-table.",
          "items": {
            "enum": [
              "cyclonedx-json",
              "cyclonedx-xml",
              "github-json",
              "spdx-json",
              "spdx-tag-value",
              "syft-json",
              "syft-table",
              "syft-text"
            ],
            "type": "string"
          },
          "title": "Additional Outputs",
          "type": "array"
        },
        "config_file": {
          "anyOf": [
            {
              "format": "path",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Path to Syft configuration file, relative to current source directory. Defaults to searching for `.syft.yaml` and `.syft.yml` in the root of the source directory.",
          "title": "Config File"
        },
        "exclude": {
          "default": [],
          "description": "Path (file or directory) to skip, using regular expression logic, relative to current working directory. Word boundaries are not implicit; i.e., specifying \"dir1\" will skip any directory or subdirectory named \"dir1\". Ignored with -f. Can be specified multiple times.",
          "items": {
            "$ref": "#/$defs/IgnorePathWithReason"
          },
          "title": "Exclude",
          "type": "array"
        },
        "severity_threshold": {
          "anyOf": [
            {
              "enum": [
                "ALL",
                "LOW",
                "MEDIUM",
                "HIGH",
                "CRITICAL"
              ],
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Minimum severity level to consider findings as failures. This is a scanner-level override of the default severity-level within ASH of MEDIUM.",
          "title": "Severity Threshold"
        }
      },
      "title": "SyftScannerConfigOptions",
      "type": "object"
    },
    "Tags": {
      "description": "Textual strings that aid in discovery, search, and retrieval of the associated object. Tags often serve as a way to group or categorize similar or related objects by various attributes.",
      "items": {
        "type": "string"
      },
      "title": "Tags",
      "type": "array"
    },
    "Targets": {
      "additionalProperties": false,
      "properties": {
        "components": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Component"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of components which claims are made against.",
          "title": "Components"
        },
        "organizations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/OrganizationalEntity"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of organizations which claims are made against.",
          "title": "Organizations"
        },
        "services": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Service"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of services which claims are made against.",
          "title": "Services"
        }
      },
      "title": "Targets",
      "type": "object"
    },
    "Task": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "$ref": "#/$defs/RefType",
          "description": "An optional identifier which can be used to reference the task elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the resource instance.",
          "title": "Description"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/InputType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Represents resources and data brought into a task at runtime by executor or task commands",
          "examples": [
            "a `configuration` file which was declared as a local `component` or `externalReference`"
          ],
          "title": "Inputs"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the resource instance.",
          "title": "Name"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/OutputType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Represents resources and data output from a task at runtime by executor or task commands",
          "examples": [
            "a log file or metrics data produced by the task"
          ],
          "title": "Outputs"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resourceReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ResourceReferenceChoice"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "References to component or service resources that are used to realize the resource instance.",
          "title": "Resource references"
        },
        "runtimeTopology": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Dependency"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A graph of the component runtime topology for task's instance.",
          "title": "Runtime topology"
        },
        "steps": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Step"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The sequence of steps for the task.",
          "title": "Steps"
        },
        "taskTypes": {
          "description": "Indicates the types of activities performed by the set of workflow tasks.",
          "items": {
            "$ref": "#/$defs/TaskType"
          },
          "title": "Task types",
          "type": "array"
        },
        "timeEnd": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the task ended.",
          "title": "Time end"
        },
        "timeStart": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the task started.",
          "title": "Time start"
        },
        "trigger": {
          "anyOf": [
            {
              "$ref": "#/$defs/Trigger"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The trigger that initiated the task.",
          "title": "Trigger"
        },
        "uid": {
          "description": "The unique identifier for the resource instance within its deployment context.",
          "title": "Unique Identifier (UID)",
          "type": "string"
        },
        "workspaces": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Workspace"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A set of named filesystem or data resource shareable by workflow tasks.",
          "title": "Workspaces"
        }
      },
      "required": [
        "bom-ref",
        "uid",
        "taskTypes"
      ],
      "title": "Task",
      "type": "object"
    },
    "TaskType": {
      "enum": [
        "copy",
        "clone",
        "lint",
        "scan",
        "merge",
        "build",
        "test",
        "deliver",
        "deploy",
        "release",
        "clean",
        "other"
      ],
      "title": "TaskType",
      "type": "string"
    },
    "Technique": {
      "enum": [
        "source-code-analysis",
        "binary-analysis",
        "manifest-analysis",
        "ast-fingerprint",
        "hash-comparison",
        "instrumentation",
        "dynamic-analysis",
        "filename",
        "attestation",
        "other"
      ],
      "title": "Technique",
      "type": "string"
    },
    "TextReporterConfig": {
      "additionalProperties": true,
      "description": "Configuration for the Text reporter.",
      "properties": {
        "enabled": {
          "default": true,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "summary.txt",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "text",
          "default": "text",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/TextReporterConfigOptions",
          "default": {
            "include_detailed_findings": false,
            "include_findings_table": false,
            "include_summary": true,
            "max_detailed_findings": 20,
            "top_hotspots_limit": 20
          }
        }
      },
      "title": "TextReporterConfig",
      "type": "object"
    },
    "TextReporterConfigOptions": {
      "additionalProperties": true,
      "description": "Configuration options for the Text reporter.",
      "properties": {
        "include_detailed_findings": {
          "default": false,
          "title": "Include Detailed Findings",
          "type": "boolean"
        },
        "include_findings_table": {
          "default": false,
          "title": "Include Findings Table",
          "type": "boolean"
        },
        "include_summary": {
          "default": true,
          "title": "Include Summary",
          "type": "boolean"
        },
        "max_detailed_findings": {
          "default": 20,
          "title": "Max Detailed Findings",
          "type": "integer"
        },
        "top_hotspots_limit": {
          "default": 20,
          "title": "Top Hotspots Limit",
          "type": "integer"
        }
      },
      "title": "TextReporterConfigOptions",
      "type": "object"
    },
    "ThreadFlow": {
      "additionalProperties": false,
      "properties": {
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An string that uniquely identifies the threadFlow within the codeFlow in which it occurs.",
          "title": "Id"
        },
        "immutableState": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/MultiformatMessageString"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Values of relevant expressions at the start of the thread flow that remain constant.",
          "title": "Immutablestate"
        },
        "initialState": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/MultiformatMessageString"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Values of relevant expressions at the start of the thread flow that may change during thread flow execution.",
          "title": "Initialstate"
        },
        "locations": {
          "description": "A temporally ordered array of 'threadFlowLocation' objects, each of which describes a location visited by the tool while producing the result.",
          "items": {
            "$ref": "#/$defs/ThreadFlowLocation"
          },
          "minItems": 1,
          "title": "Locations",
          "type": "array"
        },
        "message": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A message relevant to the thread flow."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the thread flow."
        }
      },
      "required": [
        "locations"
      ],
      "title": "ThreadFlow",
      "type": "object"
    },
    "ThreadFlowLocation": {
      "additionalProperties": false,
      "properties": {
        "executionOrder": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "An integer representing the temporal order in which execution reached this location.",
          "title": "Executionorder"
        },
        "executionTimeUtc": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The Coordinated Universal Time (UTC) date and time at which this location was executed.",
          "title": "Executiontimeutc"
        },
        "importance": {
          "anyOf": [
            {
              "$ref": "#/$defs/Importance"
            },
            {
              "type": "null"
            }
          ],
          "default": "important",
          "description": "Specifies the importance of this location in understanding the code flow in which it occurs. The order from most to least important is \"essential\", \"important\", \"unimportant\". Default: \"important\"."
        },
        "index": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within the run threadFlowLocations array.",
          "title": "Index"
        },
        "kinds": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "A set of distinct strings that categorize the thread flow location. Well-known kinds include 'acquire', 'release', 'enter', 'exit', 'call', 'return', 'branch', 'implicit', 'false', 'true', 'caution', 'danger', 'unknown', 'unreachable', 'taint', 'function', 'handler', 'lock', 'memory', 'resource', 'scope' and 'value'.",
          "title": "Kinds"
        },
        "location": {
          "anyOf": [
            {
              "$ref": "#/$defs/Location"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The code location."
        },
        "module": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the module that contains the code that is executing.",
          "title": "Module"
        },
        "nestingLevel": {
          "anyOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An integer representing a containment hierarchy within the thread flow.",
          "title": "Nestinglevel"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the threadflow location."
        },
        "stack": {
          "anyOf": [
            {
              "$ref": "#/$defs/Stack"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The call stack leading to this location."
        },
        "state": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/MultiformatMessageString"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A dictionary, each of whose keys specifies a variable or expression, the associated value of which represents the variable or expression value. For an annotation of kind 'continuation', for example, this dictionary might hold the current assumed values of a set of global variables.",
          "title": "State"
        },
        "taxa": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ReportingDescriptorReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of references to rule or taxonomy reporting descriptors that are applicable to the thread flow location.",
          "title": "Taxa"
        },
        "webRequest": {
          "anyOf": [
            {
              "$ref": "#/$defs/WebRequest"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A web request associated with this thread flow location."
        },
        "webResponse": {
          "anyOf": [
            {
              "$ref": "#/$defs/WebResponse"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A web response associated with this thread flow location."
        }
      },
      "title": "ThreadFlowLocation",
      "type": "object"
    },
    "ToolArgs": {
      "additionalProperties": true,
      "description": "Base class for tool argument dictionaries.",
      "properties": {
        "extra_args": {
          "default": [],
          "items": {
            "$ref": "#/$defs/ToolExtraArg"
          },
          "title": "Extra Args",
          "type": "array"
        },
        "format_arg": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Format Arg"
        },
        "format_arg_value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Format Arg Value"
        },
        "output_arg": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Output Arg"
        },
        "scan_path_arg": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Scan Path Arg"
        }
      },
      "title": "ToolArgs",
      "type": "object"
    },
    "ToolComponent": {
      "additionalProperties": false,
      "properties": {
        "associatedComponent": {
          "anyOf": [
            {
              "$ref": "#/$defs/ToolComponentReference"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The component which is strongly associated with this component. For a translation, this refers to the component which has been translated. For an extension, this is the driver that provides the extension's plugin model."
        },
        "contents": {
          "anyOf": [
            {
              "items": {
                "enum": [
                  "localizedData",
                  "nonLocalizedData"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [
            "localizedData",
            "nonLocalizedData"
          ],
          "description": "The kinds of data contained in this object.",
          "title": "Contents"
        },
        "dottedQuadFileVersion": {
          "anyOf": [
            {
              "pattern": "[0-9]+(\\.[0-9]+){3}",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The binary version of the tool component's primary executable file expressed as four non-negative integers separated by a period (for operating systems that express file versions in this way).",
          "title": "Dottedquadfileversion"
        },
        "downloadUri": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The absolute URI from which the tool component can be downloaded.",
          "title": "Downloaduri"
        },
        "fullDescription": {
          "anyOf": [
            {
              "$ref": "#/$defs/MultiformatMessageString"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A comprehensive description of the tool component."
        },
        "fullName": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the tool component along with its version and any other useful identifying information, such as its locale.",
          "title": "Fullname"
        },
        "globalMessageStrings": {
          "anyOf": [
            {
              "additionalProperties": {
                "$ref": "#/$defs/MultiformatMessageString"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A dictionary, each of whose keys is a resource identifier and each of whose values is a multiformatMessageString object, which holds message strings in plain text and (optionally) Markdown format. The strings can include placeholders, which can be used to construct a message in combination with an arbitrary number of additional string arguments.",
          "title": "Globalmessagestrings"
        },
        "guid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A unique identifer for the tool component in the form of a GUID.",
          "title": "Guid"
        },
        "informationUri": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The absolute URI at which information about this version of the tool component can be found.",
          "title": "Informationuri"
        },
        "isComprehensive": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "Specifies whether this object contains a complete definition of the localizable and/or non-localizable data for this component, as opposed to including only data that is relevant to the results persisted to this log file.",
          "title": "Iscomprehensive"
        },
        "language": {
          "anyOf": [
            {
              "pattern": "^[a-zA-Z]{2}|^[a-zA-Z]{2}-[a-zA-Z]{2}]?$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "en-US",
          "description": "The language of the messages emitted into the log file during this run (expressed as an ISO 639-1 two-letter lowercase language code) and an optional region (expressed as an ISO 3166-1 two-letter uppercase subculture code associated with a country or region). The casing is recommended but not required (in order for this data to conform to RFC5646).",
          "title": "Language"
        },
        "localizedDataSemanticVersion": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The semantic version of the localized strings defined in this component; maintained by components that provide translations.",
          "title": "Localizeddatasemanticversion"
        },
        "locations": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ArtifactLocation"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of the artifactLocation objects associated with the tool component.",
          "title": "Locations"
        },
        "minimumRequiredLocalizedDataSemanticVersion": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The minimum value of localizedDataSemanticVersion required in translations consumed by this component; used by components that consume translations.",
          "title": "Minimumrequiredlocalizeddatasemanticversion"
        },
        "name": {
          "description": "The name of the tool component.",
          "title": "Name",
          "type": "string"
        },
        "notifications": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ReportingDescriptor"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of reportingDescriptor objects relevant to the notifications related to the configuration and runtime execution of the tool component.",
          "title": "Notifications"
        },
        "organization": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The organization or company that produced the tool component.",
          "title": "Organization"
        },
        "product": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A product suite to which the tool component belongs.",
          "title": "Product"
        },
        "productSuite": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A localizable string containing the name of the suite of products to which the tool component belongs.",
          "title": "Productsuite"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the tool component."
        },
        "releaseDateUtc": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A string specifying the UTC date (and optionally, the time) of the component's release.",
          "title": "Releasedateutc"
        },
        "rules": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ReportingDescriptor"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of reportingDescriptor objects relevant to the analysis performed by the tool component.",
          "title": "Rules"
        },
        "semanticVersion": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The tool component version in the format specified by Semantic Versioning 2.0.",
          "title": "Semanticversion"
        },
        "shortDescription": {
          "anyOf": [
            {
              "$ref": "#/$defs/MultiformatMessageString"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A brief description of the tool component."
        },
        "supportedTaxonomies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolComponentReference"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of toolComponentReference objects to declare the taxonomies supported by the tool component.",
          "title": "Supportedtaxonomies"
        },
        "taxa": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ReportingDescriptor"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of reportingDescriptor objects relevant to the definitions of both standalone and tool-defined taxonomies.",
          "title": "Taxa"
        },
        "translationMetadata": {
          "anyOf": [
            {
              "$ref": "#/$defs/TranslationMetadata"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Translation metadata, required for a translation, not populated by other component types."
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The tool component version, in whatever format the component natively provides.",
          "title": "Version"
        }
      },
      "required": [
        "name"
      ],
      "title": "ToolComponent",
      "type": "object"
    },
    "ToolComponentReference": {
      "additionalProperties": false,
      "properties": {
        "guid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The 'guid' property of the referenced toolComponent.",
          "title": "Guid"
        },
        "index": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "An index into the referenced toolComponent in tool.extensions.",
          "title": "Index"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The 'name' property of the referenced toolComponent.",
          "title": "Name"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the toolComponentReference."
        }
      },
      "title": "ToolComponentReference",
      "type": "object"
    },
    "ToolExtraArg": {
      "additionalProperties": false,
      "properties": {
        "key": {
          "title": "Key",
          "type": "string"
        },
        "value": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Value"
        }
      },
      "required": [
        "key"
      ],
      "title": "ToolExtraArg",
      "type": "object"
    },
    "Tools": {
      "additionalProperties": false,
      "properties": {
        "components": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Component"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of software and hardware components used as tools.",
          "title": "Components"
        },
        "services": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Service"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of services used as tools. This may include microservices, function-as-a-service, and other types of network or intra-process services.",
          "title": "Services"
        }
      },
      "title": "Tools",
      "type": "object"
    },
    "TranslationMetadata": {
      "additionalProperties": false,
      "properties": {
        "downloadUri": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The absolute URI from which the translation metadata can be downloaded.",
          "title": "Downloaduri"
        },
        "fullDescription": {
          "anyOf": [
            {
              "$ref": "#/$defs/MultiformatMessageString"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A comprehensive description of the translation metadata."
        },
        "fullName": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The full name associated with the translation metadata.",
          "title": "Fullname"
        },
        "informationUri": {
          "anyOf": [
            {
              "format": "uri",
              "minLength": 1,
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The absolute URI from which information related to the translation metadata can be downloaded.",
          "title": "Informationuri"
        },
        "name": {
          "description": "The name associated with the translation metadata.",
          "title": "Name",
          "type": "string"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the translation metadata."
        },
        "shortDescription": {
          "anyOf": [
            {
              "$ref": "#/$defs/MultiformatMessageString"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A brief description of the translation metadata."
        }
      },
      "required": [
        "name"
      ],
      "title": "TranslationMetadata",
      "type": "object"
    },
    "Trigger": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "$ref": "#/$defs/RefType",
          "description": "An optional identifier which can be used to reference the trigger elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "conditions": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Condition"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A list of conditions used to determine if a trigger should be activated.",
          "title": "Conditions"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the resource instance.",
          "title": "Description"
        },
        "event": {
          "anyOf": [
            {
              "$ref": "#/$defs/Event"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The event data that caused the associated trigger to activate.",
          "title": "Event"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/InputType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Represents resources and data brought into a task at runtime by executor or task commands",
          "examples": [
            "a `configuration` file which was declared as a local `component` or `externalReference`"
          ],
          "title": "Inputs"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the resource instance.",
          "title": "Name"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/OutputType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Represents resources and data output from a task at runtime by executor or task commands",
          "examples": [
            "a log file or metrics data produced by the task"
          ],
          "title": "Outputs"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resourceReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ResourceReferenceChoice"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "References to component or service resources that are used to realize the resource instance.",
          "title": "Resource references"
        },
        "timeActivated": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the trigger was activated.",
          "title": "Time activated"
        },
        "type": {
          "$ref": "#/$defs/Type6",
          "description": "The source type of event which caused the trigger to fire.",
          "title": "Type"
        },
        "uid": {
          "description": "The unique identifier for the resource instance within its deployment context.",
          "title": "Unique Identifier (UID)",
          "type": "string"
        }
      },
      "required": [
        "bom-ref",
        "uid",
        "type"
      ],
      "title": "Trigger",
      "type": "object"
    },
    "Type": {
      "enum": [
        "application",
        "framework",
        "library",
        "container",
        "platform",
        "operating-system",
        "device",
        "device-driver",
        "firmware",
        "file",
        "machine-learning-model",
        "data",
        "cryptographic-asset"
      ],
      "title": "Type",
      "type": "string"
    },
    "Type1": {
      "enum": [
        "unofficial",
        "monkey",
        "backport",
        "cherry-pick"
      ],
      "title": "Type1",
      "type": "string"
    },
    "Type10": {
      "enum": [
        "private-key",
        "public-key",
        "secret-key",
        "key",
        "ciphertext",
        "signature",
        "digest",
        "initialization-vector",
        "nonce",
        "seed",
        "salt",
        "shared-secret",
        "tag",
        "additional-data",
        "password",
        "credential",
        "token",
        "other",
        "unknown"
      ],
      "title": "Type10",
      "type": "string"
    },
    "Type11": {
      "enum": [
        "tls",
        "ssh",
        "ipsec",
        "ike",
        "sstp",
        "wpa",
        "other",
        "unknown"
      ],
      "title": "Type11",
      "type": "string"
    },
    "Type2": {
      "enum": [
        "defect",
        "enhancement",
        "security"
      ],
      "title": "Type2",
      "type": "string"
    },
    "Type3": {
      "enum": [
        "vcs",
        "issue-tracker",
        "website",
        "advisories",
        "bom",
        "mailing-list",
        "social",
        "chat",
        "documentation",
        "support",
        "source-distribution",
        "distribution",
        "distribution-intake",
        "license",
        "build-meta",
        "build-system",
        "release-notes",
        "security-contact",
        "model-card",
        "log",
        "configuration",
        "evidence",
        "formulation",
        "attestation",
        "threat-model",
        "adversary-model",
        "risk-assessment",
        "vulnerability-assertion",
        "exploitability-statement",
        "pentest-report",
        "static-analysis-report",
        "dynamic-analysis-report",
        "runtime-analysis-report",
        "component-analysis-report",
        "maturity-report",
        "certification-report",
        "codified-infrastructure",
        "quality-metrics",
        "poam",
        "electronic-signature",
        "digital-signature",
        "rfc-9116",
        "other"
      ],
      "title": "Type3",
      "type": "string"
    },
    "Type4": {
      "enum": [
        "supervised",
        "unsupervised",
        "reinforcement-learning",
        "semi-supervised",
        "self-supervised"
      ],
      "title": "Type4",
      "type": "string"
    },
    "Type5": {
      "enum": [
        "source-code",
        "configuration",
        "dataset",
        "definition",
        "other"
      ],
      "title": "Type5",
      "type": "string"
    },
    "Type6": {
      "enum": [
        "manual",
        "api",
        "webhook",
        "scheduled"
      ],
      "title": "Type6",
      "type": "string"
    },
    "Type7": {
      "enum": [
        "artifact",
        "attestation",
        "log",
        "evidence",
        "metrics",
        "other"
      ],
      "title": "Type7",
      "type": "string"
    },
    "Unit": {
      "enum": [
        "kWh"
      ],
      "title": "Unit",
      "type": "string"
    },
    "Unit1": {
      "enum": [
        "tCO2eq"
      ],
      "title": "Unit1",
      "type": "string"
    },
    "VersionControlDetails": {
      "additionalProperties": false,
      "properties": {
        "asOfTimeUtc": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A Coordinated Universal Time (UTC) date and time that can be used to synchronize an enlistment to the state of the repository at that time.",
          "title": "Asoftimeutc"
        },
        "branch": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of a branch containing the revision.",
          "title": "Branch"
        },
        "mappedTo": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactLocation"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The location in the local file system to which the root of the repository was mapped at the time of the analysis."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the version control details."
        },
        "repositoryUri": {
          "description": "The absolute URI of the repository.",
          "format": "uri",
          "minLength": 1,
          "title": "Repositoryuri",
          "type": "string"
        },
        "revisionId": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A string that uniquely and permanently identifies the revision within the repository.",
          "title": "Revisionid"
        },
        "revisionTag": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A tag that has been applied to the revision.",
          "title": "Revisiontag"
        }
      },
      "required": [
        "repositoryUri"
      ],
      "title": "VersionControlDetails",
      "type": "object"
    },
    "VersionRange": {
      "description": "A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/blob/master/VERSION-RANGE-SPEC.rst",
      "maxLength": 4096,
      "minLength": 1,
      "title": "VersionRange",
      "type": "string"
    },
    "Versions": {
      "additionalProperties": false,
      "properties": {
        "range": {
          "anyOf": [
            {
              "$ref": "#/$defs/VersionRange"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/blob/master/VERSION-RANGE-SPEC.rst",
          "title": "Version Range"
        },
        "status": {
          "anyOf": [
            {
              "$ref": "#/$defs/AffectedStatus"
            },
            {
              "type": "null"
            }
          ],
          "default": "affected",
          "description": "The vulnerability status for the version or range of versions.",
          "title": "Status"
        },
        "version": {
          "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Version",
          "description": "A single version of a component or service."
        }
      },
      "required": [
        "version"
      ],
      "title": "Versions",
      "type": "object"
    },
    "Versions1": {
      "additionalProperties": false,
      "properties": {
        "range": {
          "$ref": "#/$defs/VersionRange",
          "title": "Version Range"
        },
        "status": {
          "anyOf": [
            {
              "$ref": "#/$defs/AffectedStatus"
            },
            {
              "type": "null"
            }
          ],
          "default": "affected",
          "description": "The vulnerability status for the version or range of versions.",
          "title": "Status"
        },
        "version": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Version"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A single version of a component or service.",
          "title": "Version"
        }
      },
      "required": [
        "range"
      ],
      "title": "Versions1",
      "type": "object"
    },
    "Volume": {
      "additionalProperties": false,
      "properties": {
        "mode": {
          "anyOf": [
            {
              "$ref": "#/$defs/Mode"
            },
            {
              "type": "null"
            }
          ],
          "default": "filesystem",
          "description": "The mode for the volume instance.",
          "title": "Mode"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the volume instance",
          "title": "Name"
        },
        "path": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The underlying path created from the actual volume.",
          "title": "Path"
        },
        "persistent": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Indicates if the volume persists beyond the life of the resource it is associated with.",
          "title": "Persistent"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "remote": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Indicates if the volume is remotely (i.e., network) attached.",
          "title": "Remote"
        },
        "sizeAllocated": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The allocated size of the volume accessible to the associated workspace. This should include the scalar size as well as IEC standard unit in either decimal or binary form.",
          "examples": [
            "10GB",
            "2Ti",
            "1Pi"
          ],
          "title": "Size allocated"
        },
        "uid": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The unique identifier for the volume instance within its deployment context.",
          "title": "Unique Identifier (UID)"
        }
      },
      "title": "Volume",
      "type": "object"
    },
    "Vulnerability": {
      "additionalProperties": false,
      "properties": {
        "advisories": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Advisory"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Published advisories of the vulnerability if provided.",
          "title": "Advisories"
        },
        "affects": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Affect"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The components or services that are affected by the vulnerability.",
          "title": "Affects"
        },
        "analysis": {
          "anyOf": [
            {
              "$ref": "#/$defs/Analysis"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An assessment of the impact and exploitability of the vulnerability.",
          "title": "Impact Analysis"
        },
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the vulnerability elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "created": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the vulnerability record was created in the vulnerability database.",
          "title": "Created"
        },
        "credits": {
          "anyOf": [
            {
              "$ref": "#/$defs/Credits"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Individuals or organizations credited with the discovery of the vulnerability.",
          "title": "Credits"
        },
        "cwes": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Cwe"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of Common Weaknesses Enumerations (CWEs) codes that describes this vulnerability.",
          "examples": [
            399
          ],
          "title": "CWEs"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the vulnerability as provided by the source.",
          "title": "Description"
        },
        "detail": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "If available, an in-depth description of the vulnerability as provided by the source organization. Details often include information useful in understanding root cause.",
          "title": "Details"
        },
        "id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The identifier that uniquely identifies the vulnerability.",
          "examples": [
            "CVE-2021-39182",
            "GHSA-35m5-8cvj-8783",
            "SNYK-PYTHON-ENROCRYPT-1912876"
          ],
          "title": "ID"
        },
        "proofOfConcept": {
          "anyOf": [
            {
              "$ref": "#/$defs/ProofOfConcept"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Evidence used to reproduce the vulnerability.",
          "title": "Proof of Concept"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "published": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the vulnerability record was first published.",
          "title": "Published"
        },
        "ratings": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Rating"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of vulnerability ratings",
          "title": "Ratings"
        },
        "recommendation": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Recommendations of how the vulnerability can be remediated or mitigated.",
          "title": "Recommendation"
        },
        "references": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Reference"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Zero or more pointers to vulnerabilities that are the equivalent of the vulnerability specified. Often times, the same vulnerability may exist in multiple sources of vulnerability intelligence, but have different identifiers. References provide a way to correlate vulnerabilities across multiple sources of vulnerability intelligence.",
          "title": "References"
        },
        "rejected": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the vulnerability record was rejected (if applicable).",
          "title": "Rejected"
        },
        "source": {
          "anyOf": [
            {
              "$ref": "#/$defs/VulnerabilitySource"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The source that published the vulnerability."
        },
        "tools": {
          "anyOf": [
            {
              "$ref": "#/$defs/Tools"
            },
            {
              "items": {
                "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Tool"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The tool(s) used to identify, confirm, or score the vulnerability.",
          "title": "Tools"
        },
        "updated": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the vulnerability record was last updated.",
          "title": "Updated"
        },
        "workaround": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A bypass, usually temporary, of the vulnerability that reduces its likelihood and/or impact. Workarounds often involve changes to configuration or deployments.",
          "title": "Workarounds"
        }
      },
      "title": "Vulnerability",
      "type": "object"
    },
    "VulnerabilitySource": {
      "additionalProperties": false,
      "properties": {
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the source.",
          "examples": [
            "NVD",
            "National Vulnerability Database",
            "OSS Index",
            "VulnDB",
            "GitHub Advisories"
          ],
          "title": "Name"
        },
        "url": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The url of the vulnerability documentation as provided by the source.",
          "examples": [
            "https://nvd.nist.gov/vuln/detail/CVE-2021-39182"
          ],
          "title": "URL"
        }
      },
      "title": "VulnerabilitySource",
      "type": "object"
    },
    "WebRequest": {
      "additionalProperties": false,
      "properties": {
        "body": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactContent"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The body of the request."
        },
        "headers": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The request headers.",
          "title": "Headers"
        },
        "index": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within the run.webRequests array of the request object associated with this result.",
          "title": "Index"
        },
        "method": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The HTTP method. Well-known values are 'GET', 'PUT', 'POST', 'DELETE', 'PATCH', 'HEAD', 'OPTIONS', 'TRACE', 'CONNECT'.",
          "title": "Method"
        },
        "parameters": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The request parameters.",
          "title": "Parameters"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the request."
        },
        "protocol": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The request protocol. Example: 'http'.",
          "title": "Protocol"
        },
        "target": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The target of the request.",
          "title": "Target"
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The request version. Example: '1.1'.",
          "title": "Version"
        }
      },
      "title": "WebRequest",
      "type": "object"
    },
    "WebResponse": {
      "additionalProperties": false,
      "properties": {
        "body": {
          "anyOf": [
            {
              "$ref": "#/$defs/ArtifactContent"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The body of the response."
        },
        "headers": {
          "anyOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The response headers.",
          "title": "Headers"
        },
        "index": {
          "anyOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": -1,
          "description": "The index within the run.webResponses array of the response object associated with this result.",
          "title": "Index"
        },
        "noResponseReceived": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": false,
          "description": "Specifies whether a response was received from the server.",
          "title": "Noresponsereceived"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the response."
        },
        "protocol": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The response protocol. Example: 'http'.",
          "title": "Protocol"
        },
        "reasonPhrase": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The response reason. Example: 'Not found'.",
          "title": "Reasonphrase"
        },
        "statusCode": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The response status code. Example: 451.",
          "title": "Statuscode"
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The response version. Example: '1.1'.",
          "title": "Version"
        }
      },
      "title": "WebResponse",
      "type": "object"
    },
    "Workflow": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "$ref": "#/$defs/RefType",
          "description": "An optional identifier which can be used to reference the workflow elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the resource instance.",
          "title": "Description"
        },
        "inputs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/InputType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Represents resources and data brought into a task at runtime by executor or task commands",
          "examples": [
            "a `configuration` file which was declared as a local `component` or `externalReference`"
          ],
          "title": "Inputs"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the resource instance.",
          "title": "Name"
        },
        "outputs": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/OutputType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Represents resources and data output from a task at runtime by executor or task commands",
          "examples": [
            "a log file or metrics data produced by the task"
          ],
          "title": "Outputs"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resourceReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ResourceReferenceChoice"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "References to component or service resources that are used to realize the resource instance.",
          "title": "Resource references"
        },
        "runtimeTopology": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Dependency"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A graph of the component runtime topology for workflow's instance.",
          "title": "Runtime topology"
        },
        "steps": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Step"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The sequence of steps for the task.",
          "title": "Steps"
        },
        "taskDependencies": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Dependency"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The graph of dependencies between tasks within the workflow.",
          "title": "Task dependency graph"
        },
        "taskTypes": {
          "description": "Indicates the types of activities performed by the set of workflow tasks.",
          "items": {
            "$ref": "#/$defs/TaskType"
          },
          "title": "Task types",
          "type": "array"
        },
        "tasks": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Task"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The tasks that comprise the workflow.",
          "title": "Tasks"
        },
        "timeEnd": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the task ended.",
          "title": "Time end"
        },
        "timeStart": {
          "anyOf": [
            {
              "format": "date-time",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The date and time (timestamp) when the task started.",
          "title": "Time start"
        },
        "trigger": {
          "anyOf": [
            {
              "$ref": "#/$defs/Trigger"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The trigger that initiated the task.",
          "title": "Trigger"
        },
        "uid": {
          "description": "The unique identifier for the resource instance within its deployment context.",
          "title": "Unique Identifier (UID)",
          "type": "string"
        },
        "workspaces": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Workspace"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A set of named filesystem or data resource shareable by workflow tasks.",
          "title": "Workspaces"
        }
      },
      "required": [
        "bom-ref",
        "uid",
        "taskTypes"
      ],
      "title": "Workflow",
      "type": "object"
    },
    "Workspace": {
      "additionalProperties": false,
      "properties": {
        "accessMode": {
          "anyOf": [
            {
              "$ref": "#/$defs/AccessMode"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Describes the read-write access control for the workspace relative to the owning resource instance.",
          "title": "Access mode"
        },
        "aliases": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The names for the workspace as referenced by other workflow tasks. Effectively, a name mapping so other tasks can use their own local name in their steps.",
          "title": "Aliases"
        },
        "bom-ref": {
          "$ref": "#/$defs/RefType",
          "description": "An optional identifier which can be used to reference the workspace elsewhere in the BOM. Every bom-ref must be unique within the BOM.\nValue SHOULD not start with the BOM-Link intro 'urn:cdx:' to avoid conflicts with BOM-Links.",
          "title": "BOM Reference"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A description of the resource instance.",
          "title": "Description"
        },
        "managedDataType": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of a domain-specific data type the workspace represents.",
          "examples": [
            "ConfigMap",
            "Secret"
          ],
          "title": "Managed data type"
        },
        "mountPath": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A path to a location on disk where the workspace will be available to the associated task's steps.",
          "title": "Mount path"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the resource instance.",
          "title": "Name"
        },
        "properties": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Property"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is optional.",
          "title": "Properties"
        },
        "resourceReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ResourceReferenceChoice"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "References to component or service resources that are used to realize the resource instance.",
          "title": "Resource references"
        },
        "uid": {
          "description": "The unique identifier for the resource instance within its deployment context.",
          "title": "Unique Identifier (UID)",
          "type": "string"
        },
        "volume": {
          "anyOf": [
            {
              "$ref": "#/$defs/Volume"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Information about the actual volume instance allocated to the workspace.",
          "examples": [
            "see https://kubernetes.io/docs/concepts/storage/persistent-volumes/"
          ],
          "title": "Volume"
        },
        "volumeRequest": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Identifies the reference to the request for a specific volume type and parameters.",
          "examples": [
            "a kubernetes Persistent Volume Claim (PVC) name"
          ],
          "title": "Volume request"
        }
      },
      "required": [
        "bom-ref",
        "uid"
      ],
      "title": "Workspace",
      "type": "object"
    },
    "YAMLReporterConfig": {
      "additionalProperties": true,
      "properties": {
        "enabled": {
          "default": false,
          "title": "Enabled",
          "type": "boolean"
        },
        "extension": {
          "default": "yaml",
          "title": "Extension",
          "type": "string"
        },
        "name": {
          "const": "yaml",
          "default": "yaml",
          "title": "Name",
          "type": "string"
        },
        "options": {
          "$ref": "#/$defs/YAMLReporterConfigOptions",
          "default": {}
        }
      },
      "title": "YAMLReporterConfig",
      "type": "object"
    },
    "YAMLReporterConfigOptions": {
      "additionalProperties": true,
      "properties": {},
      "title": "YAMLReporterConfigOptions",
      "type": "object"
    },
    "automated_security_helper__models__core__Suppression": {
      "description": "Represents a finding suppression rule.",
      "properties": {
        "expiration": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Expiration date (YYYY-MM-DD)",
          "title": "Expiration"
        },
        "file_path": {
          "description": "File path pattern to match",
          "title": "File Path",
          "type": "string"
        },
        "line_end": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Ending line number",
          "title": "Line End"
        },
        "line_start": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Starting line number",
          "title": "Line Start"
        },
        "reason": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Reason for suppression",
          "title": "Reason"
        },
        "rule_id": {
          "description": "Rule ID to suppress",
          "title": "Rule Id",
          "type": "string"
        }
      },
      "required": [
        "rule_id",
        "file_path"
      ],
      "title": "Suppression",
      "type": "object"
    },
    "automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Attachment": {
      "additionalProperties": false,
      "properties": {
        "content": {
          "description": "The attachment data. Proactive controls such as input validation and sanitization should be employed to prevent misuse of attachment text.",
          "title": "Attachment Text",
          "type": "string"
        },
        "contentType": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "text/plain",
          "description": "Specifies the format and nature of the data being attached, helping systems correctly interpret and process the content. Common content type examples include `application/json` for JSON data and `text/plain` for plan text documents.\n [RFC 2045 section 5.1](https://www.ietf.org/rfc/rfc2045.html#section-5.1) outlines the structure and use of content types. For a comprehensive list of registered content types, refer to the [IANA media types registry](https://www.iana.org/assignments/media-types/media-types.xhtml).",
          "examples": [
            "text/plain",
            "application/json",
            "image/png"
          ],
          "title": "Content-Type"
        },
        "encoding": {
          "anyOf": [
            {
              "$ref": "#/$defs/Encoding"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Specifies the optional encoding the text is represented in.",
          "title": "Encoding"
        }
      },
      "required": [
        "content"
      ],
      "title": "Attachment",
      "type": "object"
    },
    "automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Level": {
      "additionalProperties": false,
      "properties": {
        "bom-ref": {
          "anyOf": [
            {
              "$ref": "#/$defs/RefType"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional identifier which can be used to reference the object elsewhere in the BOM. Every bom-ref must be unique within the BOM.",
          "title": "BOM Reference"
        },
        "description": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The description of the level.",
          "title": "Description"
        },
        "identifier": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The identifier used in the standard to identify a specific level.",
          "title": "Identifier"
        },
        "requirements": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/RefLinkType"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The list of requirement `bom-ref`s that comprise the level.",
          "title": "Requirements"
        },
        "title": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The title of the level.",
          "title": "Title"
        }
      },
      "title": "Level",
      "type": "object"
    },
    "automated_security_helper__schemas__cyclonedx_bom_1_6_schema__State": {
      "enum": [
        "pre-activation",
        "active",
        "suspended",
        "deactivated",
        "compromised",
        "destroyed"
      ],
      "title": "State",
      "type": "string"
    },
    "automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Tool": {
      "additionalProperties": false,
      "properties": {
        "externalReferences": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ExternalReference"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "External references provide a way to document systems, sites, and information that may be relevant, but are not included with the BOM. They may also establish specific relationships within or external to the BOM.",
          "title": "External References"
        },
        "hashes": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Hash"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The hashes of the tool (if applicable).",
          "title": "Hashes"
        },
        "name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the tool",
          "title": "Tool Name"
        },
        "vendor": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of the vendor who created the tool",
          "title": "Tool Vendor"
        },
        "version": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Version"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The version of the tool",
          "title": "Tool Version"
        }
      },
      "title": "Tool",
      "type": "object"
    },
    "automated_security_helper__schemas__cyclonedx_bom_1_6_schema__Version": {
      "description": "A single disjunctive version identifier, for a component or service.",
      "maxLength": 1024,
      "title": "Version",
      "type": "string"
    },
    "automated_security_helper__schemas__sarif_schema_model__Attachment": {
      "additionalProperties": false,
      "properties": {
        "artifactLocation": {
          "$ref": "#/$defs/ArtifactLocation",
          "description": "The location of the attachment."
        },
        "description": {
          "anyOf": [
            {
              "$ref": "#/$defs/Message"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A message describing the role played by the attachment."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the attachment."
        },
        "rectangles": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Rectangle"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of rectangles specifying areas of interest within the image.",
          "title": "Rectangles"
        },
        "regions": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/Region"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "An array of regions of interest within the attachment.",
          "title": "Regions"
        }
      },
      "required": [
        "artifactLocation"
      ],
      "title": "Attachment",
      "type": "object"
    },
    "automated_security_helper__schemas__sarif_schema_model__Level": {
      "enum": [
        "none",
        "note",
        "warning",
        "error"
      ],
      "title": "Level",
      "type": "string"
    },
    "automated_security_helper__schemas__sarif_schema_model__State": {
      "enum": [
        "accepted",
        "underReview",
        "rejected"
      ],
      "title": "State",
      "type": "string"
    },
    "automated_security_helper__schemas__sarif_schema_model__Suppression": {
      "additionalProperties": false,
      "properties": {
        "guid": {
          "anyOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A stable, unique identifer for the suprression in the form of a GUID.",
          "title": "Guid"
        },
        "justification": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A string representing the justification for the suppression.",
          "title": "Justification"
        },
        "kind": {
          "$ref": "#/$defs/Kind1",
          "description": "A string that indicates where the suppression is persisted."
        },
        "location": {
          "anyOf": [
            {
              "$ref": "#/$defs/Location"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Identifies the location associated with the suppression."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the suppression."
        },
        "state": {
          "anyOf": [
            {
              "$ref": "#/$defs/automated_security_helper__schemas__sarif_schema_model__State"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A string that indicates the state of the suppression."
        }
      },
      "required": [
        "kind"
      ],
      "title": "Suppression",
      "type": "object"
    },
    "automated_security_helper__schemas__sarif_schema_model__Tool": {
      "additionalProperties": false,
      "properties": {
        "driver": {
          "$ref": "#/$defs/ToolComponent",
          "description": "The analysis tool that was run."
        },
        "extensions": {
          "anyOf": [
            {
              "items": {
                "$ref": "#/$defs/ToolComponent"
              },
              "minItems": 0,
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": [],
          "description": "Tool extensions that contributed to or reconfigured the analysis tool that was run.",
          "title": "Extensions"
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/$defs/PropertyBag"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Key/value pairs that provide additional information about the tool."
        }
      },
      "required": [
        "driver"
      ],
      "title": "Tool",
      "type": "object"
    },
    "automated_security_helper__schemas__sarif_schema_model__Version": {
      "enum": [
        "2.1.0"
      ],
      "title": "Version",
      "type": "string"
    }
  },
  "description": "Main model class for parsing security scan reports from ASH tooling.",
  "properties": {
    "additional_reports": {
      "additionalProperties": true,
      "default": {},
      "description": "Dictionary of additional reports where the keys are the scanner name and the values are the outputs of the scanner.",
      "title": "Additional Reports",
      "type": "object"
    },
    "ash_config": {
      "$ref": "#/$defs/AshConfig",
      "default": null,
      "description": "The full ASH configuration used during this scan."
    },
    "converter_results": {
      "additionalProperties": {
        "$ref": "#/$defs/ConverterStatusInfo"
      },
      "title": "Converter Results",
      "type": "object"
    },
    "cyclonedx": {
      "anyOf": [
        {
          "$ref": "#/$defs/CycloneDXReport"
        },
        {
          "type": "null"
        }
      ],
      "default": {
        "$schema": null,
        "annotations": null,
        "bomFormat": "CycloneDX",
        "components": null,
        "compositions": null,
        "declarations": null,
        "definitions": null,
        "dependencies": null,
        "externalReferences": null,
        "formulation": null,
        "metadata": null,
        "properties": null,
        "serialNumber": null,
        "services": null,
        "signature": null,
        "specVersion": "1.6",
        "version": 1,
        "vulnerabilities": null
      },
      "description": "The CycloneDXReport formatted SBOM report"
    },
    "description": {
      "default": "Automated Security Helper - Aggregated Report",
      "description": "The description of the generated report.",
      "title": "Description",
      "type": "string"
    },
    "metadata": {
      "$ref": "#/$defs/ReportMetadata"
    },
    "name": {
      "default": "ASH Scan Report",
      "description": "Name of the report",
      "title": "Name",
      "type": "string"
    },
    "sarif": {
      "anyOf": [
        {
          "$ref": "#/$defs/SarifReport"
        },
        {
          "type": "null"
        }
      ],
      "default": {
        "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
        "inlineExternalProperties": [],
        "properties": {
          "tags": []
        },
        "runs": [
          {
            "addresses": [],
            "artifacts": null,
            "automationDetails": null,
            "baselineGuid": null,
            "columnKind": null,
            "conversion": null,
            "defaultEncoding": null,
            "defaultSourceLanguage": null,
            "externalPropertyFileReferences": null,
            "graphs": [],
            "invocations": [],
            "language": "en-US",
            "logicalLocations": [],
            "newlineSequences": [
              "\r\n",
              "\n"
            ],
            "originalUriBaseIds": null,
            "policies": [],
            "properties": {
              "tags": []
            },
            "redactionTokens": [],
            "results": [],
            "runAggregates": [],
            "specialLocations": null,
            "taxonomies": [],
            "threadFlowLocations": [],
            "tool": {
              "driver": {
                "associatedComponent": null,
                "contents": [
                  "localizedData",
                  "nonLocalizedData"
                ],
                "dottedQuadFileVersion": null,
                "downloadUri": "https://github.com/awslabs/automated-security-helper",
                "fullDescription": null,
                "fullName": "awslabs/automated-security-helper",
                "globalMessageStrings": null,
                "guid": null,
                "informationUri": "https://awslabs.github.io/automated-security-helper",
                "isComprehensive": false,
                "language": "en-US",
                "localizedDataSemanticVersion": null,
                "locations": [],
                "minimumRequiredLocalizedDataSemanticVersion": null,
                "name": "AWS Labs - Automated Security Helper",
                "notifications": [],
                "organization": "Amazon Web Services",
                "product": null,
                "productSuite": null,
                "properties": null,
                "releaseDateUtc": null,
                "rules": [],
                "semanticVersion": null,
                "shortDescription": null,
                "supportedTaxonomies": [],
                "taxa": [],
                "translationMetadata": null,
                "version": "3.0.0"
              },
              "extensions": [],
              "properties": null
            },
            "translations": [],
            "versionControlProvenance": [],
            "webRequests": [],
            "webResponses": []
          }
        ],
        "version": "2.1.0"
      },
      "description": "The SARIF formatted vulnerability report"
    },
    "scanner_results": {
      "additionalProperties": {
        "$ref": "#/$defs/ScannerStatusInfo"
      },
      "title": "Scanner Results",
      "type": "object"
    }
  },
  "title": "AshAggregatedResults",
  "type": "object"
}
