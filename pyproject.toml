[tool.poetry]
name = "automated-security-helper"
version = "3.0.0"
description = "Automated Security Helper for GitHub Actions"
readme = "README.md"
license = "Apache-2.0"
repository = "https://github.com/awslabs/automated-security-helper"
authors = [
  "Daniel Begimher <dbbegimh@amazon.com>",
  "Madison Steiner <awsmadi@amazon.com>",
  "Nate Ferrell <nateferl@amazon.com>",
  "Nathan Bates <nbb@amazon.com>",
  "Rafael Pereyra <rapg@amazon.com>",
  "Tim Hahn <timhahn@amazon.com>",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

packages = [
  {include = "automated_security_helper"},
]
include = [
    { path = "automated_security_helper/assets", format = ["sdist", "wheel"] },
    { path = "automated_security_helper/assets/ASH_INSTALLED_REVISION", format = ["sdist", "wheel"] },  # pragma: allowlist secret - Not actually a secret
    { path = "automated_security_helper/assets/Dockerfile", format = ["sdist", "wheel"] },
]

[tool.poetry.build]
script = "ci/stage_build_assets.py"

[tool.poetry.scripts]
ash = "automated_security_helper.cli:ash_cli"
ashv3 = "automated_security_helper.cli:ash_cli"
automated-security-helper = "automated_security_helper.cli:ash_cli"
generate-ash-schemas = 'automated_security_helper.schemas.generate_schemas:main'
get-scan-set = 'automated_security_helper.utils.get_scan_set:main'

[tool.poetry.dependencies]
aws-cdk-lib = "^2.188.0"
bandit = {extras = ["baseline", "sarif", "toml"], version = "^1.8.3"}
cdk-nag = "^2.35.64"
cfn-flip = "^1.3.0"
checkov = "^3.2.395"
constructs = "^10.4.2"
defusedxml = "^0.7.1"
junitparser = "^3.2.0"
nbconvert = "^7.16.6"
pathspec = "^0.12.1"
pydantic = {extras = ["email"], version = "^2.11.3"}
pytest = "^8.3.5"
python = "^3.10"
regex = "^2024.5.15"
sarif-tools = "^3.0.4"
rich = "^13.5.3"
semgrep = "^1.116.0"
typer = "^0.15.2"
detect-secrets = "^1.5.0"
jupyterlab = "^4.4.1"
boto3 = ">=1.35.49"
textual = {extras = ["syntax"], version = "^3.1.1"}

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.2"
pytest-cov = "^6.1.0"
pytest-mock = "^3.14.0"
mypy = "^1.15.0"
types-pyyaml = "^6.0.12.20250402"
vulture = "^2.14"
datamodel-code-generator = "*"
lazydocs = "^0.4.8"
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.11"
mkdocs-awesome-pages-plugin = "^2.10.1"
pymdown-extensions = "^10.14.3"
mkdocstrings = {extras = ["python"], version = "^0.29.1"}
mkdocs-autorefs = "^1.4.1"
pytest-asyncio = "^0.26.0"

[tool.mypy]
plugins = ["pydantic.mypy"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov-report xml:test-results/pytest.coverage.xml --cov-report term-missing --junit-xml=test-results/pytest.junit.xml --cov=automated_security_helper"
asyncio_default_fixture_loop_scope = "module"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
