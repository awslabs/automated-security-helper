# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

"""Example reporter plugin for ASH."""

from pathlib import Path

from automated_security_helper.base.reporter_plugin import (
    ReporterPluginBase,
    ReporterPluginConfigBase,
)
from automated_security_helper.plugins.decorators import ash_reporter_plugin
from automated_security_helper.models.asharp_model import ASHARPModel
from automated_security_helper.utils.log import ASH_LOGGER


class ExampleReporterConfig(ReporterPluginConfigBase):
    """Configuration for the example reporter."""

    pass


@ash_reporter_plugin
class ExampleReporter(ReporterPluginBase[ExampleReporterConfig]):
    """Example reporter plugin that demonstrates the decorator pattern."""

    def report(self, model: ASHARPModel) -> str:
        """Generate a report from scan results.

        This example reporter simply logs the model and returns a mock report.

        Args:
            model: ASHARPModel containing scan results

        Returns:
            str: Report content
        """
        self._pre_report()

        if self.context is None:
            ASH_LOGGER.warning("ExampleReporter: No context provided!")
            return "No context provided"

        ASH_LOGGER.info("ExampleReporter: Generating report")

        # In a real reporter, you would generate a report from the model
        # For this example, we'll just return a mock report
        report_path = Path(self.context.output_dir) / "example_report.txt"

        with open(report_path, "w") as f:
            f.write("Example Report\n")
            f.write("=============\n\n")
            f.write(
                "This is an example report generated by the ExampleReporter plugin.\n\n"
            )

            # Add some mock findings
            f.write("Findings:\n")
            f.write("- EXAMPLE-001: Example Finding\n")
            f.write("  Severity: LOW\n")
            f.write(
                "  Description: This is an example finding from the ExampleScanner\n"
            )

        self._post_report()
        return str(report_path)
