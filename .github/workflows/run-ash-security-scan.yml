name: "ASH Security Scan"
description: "Runs ASH aggregated security scan on a repository"

on:
  workflow_call:
    inputs:
      ash-version:
        description: "ASH version to use"
        required: false
        default: "beta"
        type: string
      ash-mode:
        description: 'Mode to run ASH in. Defaults to "container". Use "local" to run in direct Python only. Be aware that running in local mode will not include any scanners that are not installed as Python dependencies of ASH itself.'
        required: false
        default: "container"
        type: string
      ash-args:
        description: "Additional arguments to pass to ASH"
        required: false
        default: ""
        type: string
      output-dir:
        description: "Directory where ASH output will be stored"
        required: false
        default: ".ash/ash_output"
        type: string
      fail-on-findings:
        description: "Whether to continue execution even if findings are detected"
        required: false
        default: true
        type: boolean
      verbose:
        description: "Enable verbose output"
        required: false
        default: true
        type: boolean
      post-pr-comment:
        description: "Whether to post scan results as PR comment"
        required: false
        default: true
        type: boolean
      repository-owner:
        description: "Owner of the repository"
        required: false
        default: ${{ github.repository_owner }}
        type: string
      python-version:
        description: "Python version to use"
        required: false
        default: "3.12"
        type: string

jobs:
  ash:
    runs-on: ubuntu-latest
    env:
      COLUMNS: 140
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: "pip"

      - name: Install ASH via Pip
        shell: bash
        run: |
          pip install --upgrade pip
          pip install uv
          pip install

      - name: Run ASH
        id: ash
        shell: bash
        run: |-
          alias ash="uvx git+https://github.com/awslabs/automated-security-helper@${{ inputs.ash-version }}"
          ash \
            --source-dir . \
            --output-dir ${{ inputs.output-dir }} \
            --mode ${{ inputs.ash-mode }} \
            ${{ inputs.ash-args }} --build-target ci \
            ${{ inputs.fail-on-findings == 'true' && '--fail-on-findings' || '--no-fail-on-findings'}} \
            ${{ inputs.verbose == 'true' && '--verbose' || '' }}

      - name: Update step summary
        if: success() || failure()
        shell: bash
        run: |-
          cat ${{ inputs.output-dir }}/reports/ash.summary.md >> "${GITHUB_STEP_SUMMARY}"
          tree ${{ inputs.output-dir }}

      - name: Post ASH MarkdownReporter output as PR comment
        uses: mshick/add-pr-comment@v2
        if: inputs.post-pr-comment && github.repository_owner == inputs.repository-owner && (success() || failure())
        continue-on-error: true
        with:
          message-path: ${{ inputs.output-dir }}/reports/ash.summary.md

      - name: Collect ASH output artifact
        uses: actions/upload-artifact@v4
        if: success() || failure()
        continue-on-error: true
        with:
          name: ash_output
          path: ${{ inputs.output-dir }}
          if-no-files-found: error

      - name: Publish JUnit Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure()
        continue-on-error: true
        with:
          report_paths: "**/ash.junit.xml"
          include_passed: true
          update_check: true
          check_name: ASH Scan JUnit Test Report
          summary: Skipped means passing, suppressed, or ignored findings that are considered non-actionable.

      - name: Upload ASH SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        continue-on-error: false
        with:
          sarif_file: ${{ inputs.output-dir }}/reports/ash.sarif
          wait-for-processing: true
          category: ash
